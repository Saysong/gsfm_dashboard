/* eslint-disable camelcase */
/* eslint-disable max-len */
// DO NOT EDIT
// This file is generated by the rostsd_gen script

declare module 'rclnodejs' {
  namespace action_msgs {
    namespace msg {
      export interface GoalInfo {
        goal_id: unique_identifier_msgs.msg.UUID;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface GoalInfoConstructor {
        new(other?: GoalInfo): GoalInfo;
      }
      export interface GoalStatus {
        goal_info: action_msgs.msg.GoalInfo;
        status: number;
      }
      export interface GoalStatusConstructor {
        readonly STATUS_UNKNOWN: number;
        readonly STATUS_ACCEPTED: number;
        readonly STATUS_EXECUTING: number;
        readonly STATUS_CANCELING: number;
        readonly STATUS_SUCCEEDED: number;
        readonly STATUS_CANCELED: number;
        readonly STATUS_ABORTED: number;
        new(other?: GoalStatus): GoalStatus;
      }
      export interface GoalStatusArray {
        status_list: action_msgs.msg.GoalStatus[];
      }
      export interface GoalStatusArrayConstructor {
        new(other?: GoalStatusArray): GoalStatusArray;
      }
      namespace descriptor {
        export interface GoalInfo {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          stamp: 'builtin_interfaces/msg/Time';
        }
        export interface GoalInfoConstructor {
          new(other?: GoalInfo): GoalInfo;
        }
        export interface GoalStatus {
          goal_info: 'action_msgs/msg/GoalInfo';
          status: 'int8';
        }
        export interface GoalStatusConstructor {
          readonly STATUS_UNKNOWN: number;
          readonly STATUS_ACCEPTED: number;
          readonly STATUS_EXECUTING: number;
          readonly STATUS_CANCELING: number;
          readonly STATUS_SUCCEEDED: number;
          readonly STATUS_CANCELED: number;
          readonly STATUS_ABORTED: number;
          new(other?: GoalStatus): GoalStatus;
        }
        export interface GoalStatusArray {
          status_list: 'action_msgs/msg/GoalStatus[]';
        }
        export interface GoalStatusArrayConstructor {
          new(other?: GoalStatusArray): GoalStatusArray;
        }
      }
    }
    namespace srv {
      export interface CancelGoalConstructor extends ROSService {
        readonly Request: CancelGoal_RequestConstructor;
        readonly Response: CancelGoal_ResponseConstructor;
      }
      export interface CancelGoal_Request {
        goal_info: action_msgs.msg.GoalInfo;
      }
      export interface CancelGoal_RequestConstructor {
        new(other?: CancelGoal_Request): CancelGoal_Request;
      }
      export interface CancelGoal_Response {
        return_code: number;
        goals_canceling: action_msgs.msg.GoalInfo[];
      }
      export interface CancelGoal_ResponseConstructor {
        readonly ERROR_NONE: number;
        readonly ERROR_REJECTED: number;
        readonly ERROR_UNKNOWN_GOAL_ID: number;
        readonly ERROR_GOAL_TERMINATED: number;
        new(other?: CancelGoal_Response): CancelGoal_Response;
      }
      namespace descriptor {
        export interface CancelGoalConstructor extends ROSService {
          readonly Request: CancelGoal_RequestConstructor;
          readonly Response: CancelGoal_ResponseConstructor;
        }
        export interface CancelGoal_Request {
          goal_info: 'action_msgs/msg/GoalInfo';
        }
        export interface CancelGoal_RequestConstructor {
          new(other?: CancelGoal_Request): CancelGoal_Request;
        }
        export interface CancelGoal_Response {
          return_code: 'int8';
          goals_canceling: 'action_msgs/msg/GoalInfo[]';
        }
        export interface CancelGoal_ResponseConstructor {
          readonly ERROR_NONE: number;
          readonly ERROR_REJECTED: number;
          readonly ERROR_UNKNOWN_GOAL_ID: number;
          readonly ERROR_GOAL_TERMINATED: number;
          new(other?: CancelGoal_Response): CancelGoal_Response;
        }
      }
    }
  }

  namespace action_tutorials_interfaces {
    namespace action {
      export interface FibonacciConstructor {
        readonly Goal: Fibonacci_GoalConstructor;
        readonly Result: Fibonacci_ResultConstructor;
        readonly Feedback: Fibonacci_FeedbackConstructor;
      }
      export interface Fibonacci_Feedback {
        partial_sequence: number[] | Int32Array;
      }
      export interface Fibonacci_FeedbackConstructor {
        new(other?: Fibonacci_Feedback): Fibonacci_Feedback;
      }
      export interface Fibonacci_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: action_tutorials_interfaces.action.Fibonacci_Feedback;
      }
      export interface Fibonacci_FeedbackMessageConstructor {
        new(other?: Fibonacci_FeedbackMessage): Fibonacci_FeedbackMessage;
      }
      export interface Fibonacci_GetResultConstructor extends ROSService {
        readonly Request: Fibonacci_GetResult_RequestConstructor;
        readonly Response: Fibonacci_GetResult_ResponseConstructor;
      }
      export interface Fibonacci_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Fibonacci_GetResult_RequestConstructor {
        new(other?: Fibonacci_GetResult_Request): Fibonacci_GetResult_Request;
      }
      export interface Fibonacci_GetResult_Response {
        status: number;
        result: action_tutorials_interfaces.action.Fibonacci_Result;
      }
      export interface Fibonacci_GetResult_ResponseConstructor {
        new(other?: Fibonacci_GetResult_Response): Fibonacci_GetResult_Response;
      }
      export interface Fibonacci_Goal {
        order: number;
      }
      export interface Fibonacci_GoalConstructor {
        new(other?: Fibonacci_Goal): Fibonacci_Goal;
      }
      export interface Fibonacci_Result {
        sequence: number[] | Int32Array;
      }
      export interface Fibonacci_ResultConstructor {
        new(other?: Fibonacci_Result): Fibonacci_Result;
      }
      export interface Fibonacci_SendGoalConstructor extends ROSService {
        readonly Request: Fibonacci_SendGoal_RequestConstructor;
        readonly Response: Fibonacci_SendGoal_ResponseConstructor;
      }
      export interface Fibonacci_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: action_tutorials_interfaces.action.Fibonacci_Goal;
      }
      export interface Fibonacci_SendGoal_RequestConstructor {
        new(other?: Fibonacci_SendGoal_Request): Fibonacci_SendGoal_Request;
      }
      export interface Fibonacci_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Fibonacci_SendGoal_ResponseConstructor {
        new(other?: Fibonacci_SendGoal_Response): Fibonacci_SendGoal_Response;
      }
      namespace descriptor {
        export interface FibonacciConstructor {
          readonly Goal: Fibonacci_GoalConstructor;
          readonly Result: Fibonacci_ResultConstructor;
          readonly Feedback: Fibonacci_FeedbackConstructor;
        }
        export interface Fibonacci_Feedback {
          partial_sequence: 'int32[]';
        }
        export interface Fibonacci_FeedbackConstructor {
          new(other?: Fibonacci_Feedback): Fibonacci_Feedback;
        }
        export interface Fibonacci_FeedbackMessage {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          feedback: 'action_tutorials_interfaces/action/Fibonacci_Feedback';
        }
        export interface Fibonacci_FeedbackMessageConstructor {
          new(other?: Fibonacci_FeedbackMessage): Fibonacci_FeedbackMessage;
        }
        export interface Fibonacci_GetResultConstructor extends ROSService {
          readonly Request: Fibonacci_GetResult_RequestConstructor;
          readonly Response: Fibonacci_GetResult_ResponseConstructor;
        }
        export interface Fibonacci_GetResult_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
        }
        export interface Fibonacci_GetResult_RequestConstructor {
          new(other?: Fibonacci_GetResult_Request): Fibonacci_GetResult_Request;
        }
        export interface Fibonacci_GetResult_Response {
          status: 'int8';
          result: 'action_tutorials_interfaces/action/Fibonacci_Result';
        }
        export interface Fibonacci_GetResult_ResponseConstructor {
          new(other?: Fibonacci_GetResult_Response): Fibonacci_GetResult_Response;
        }
        export interface Fibonacci_Goal {
          order: 'int32';
        }
        export interface Fibonacci_GoalConstructor {
          new(other?: Fibonacci_Goal): Fibonacci_Goal;
        }
        export interface Fibonacci_Result {
          sequence: 'int32[]';
        }
        export interface Fibonacci_ResultConstructor {
          new(other?: Fibonacci_Result): Fibonacci_Result;
        }
        export interface Fibonacci_SendGoalConstructor extends ROSService {
          readonly Request: Fibonacci_SendGoal_RequestConstructor;
          readonly Response: Fibonacci_SendGoal_ResponseConstructor;
        }
        export interface Fibonacci_SendGoal_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          goal: 'action_tutorials_interfaces/action/Fibonacci_Goal';
        }
        export interface Fibonacci_SendGoal_RequestConstructor {
          new(other?: Fibonacci_SendGoal_Request): Fibonacci_SendGoal_Request;
        }
        export interface Fibonacci_SendGoal_Response {
          accepted: 'bool';
          stamp: 'builtin_interfaces/msg/Time';
        }
        export interface Fibonacci_SendGoal_ResponseConstructor {
          new(other?: Fibonacci_SendGoal_Response): Fibonacci_SendGoal_Response;
        }
      }
    }
  }

  namespace actionlib_msgs {
    namespace msg {
      export interface GoalID {
        stamp: builtin_interfaces.msg.Time;
        id: string;
      }
      export interface GoalIDConstructor {
        new(other?: GoalID): GoalID;
      }
      export interface GoalStatus {
        goal_id: actionlib_msgs.msg.GoalID;
        status: number;
        text: string;
      }
      export interface GoalStatusConstructor {
        readonly PENDING: number;
        readonly ACTIVE: number;
        readonly PREEMPTED: number;
        readonly SUCCEEDED: number;
        readonly ABORTED: number;
        readonly REJECTED: number;
        readonly PREEMPTING: number;
        readonly RECALLING: number;
        readonly RECALLED: number;
        readonly LOST: number;
        new(other?: GoalStatus): GoalStatus;
      }
      export interface GoalStatusArray {
        header: std_msgs.msg.Header;
        status_list: actionlib_msgs.msg.GoalStatus[];
      }
      export interface GoalStatusArrayConstructor {
        new(other?: GoalStatusArray): GoalStatusArray;
      }
      namespace descriptor {
        export interface GoalID {
          stamp: 'builtin_interfaces/msg/Time';
          id: 'string';
        }
        export interface GoalIDConstructor {
          new(other?: GoalID): GoalID;
        }
        export interface GoalStatus {
          goal_id: 'actionlib_msgs/msg/GoalID';
          status: 'uint8';
          text: 'string';
        }
        export interface GoalStatusConstructor {
          readonly PENDING: number;
          readonly ACTIVE: number;
          readonly PREEMPTED: number;
          readonly SUCCEEDED: number;
          readonly ABORTED: number;
          readonly REJECTED: number;
          readonly PREEMPTING: number;
          readonly RECALLING: number;
          readonly RECALLED: number;
          readonly LOST: number;
          new(other?: GoalStatus): GoalStatus;
        }
        export interface GoalStatusArray {
          header: 'std_msgs/msg/Header';
          status_list: 'actionlib_msgs/msg/GoalStatus[]';
        }
        export interface GoalStatusArrayConstructor {
          new(other?: GoalStatusArray): GoalStatusArray;
        }
      }
    }
  }

  namespace builtin_interfaces {
    namespace msg {
      export interface Duration {
        sec: number;
        nanosec: number;
      }
      export interface DurationConstructor {
        new(other?: Duration): Duration;
      }
      export interface Time {
        sec: number;
        nanosec: number;
      }
      export interface TimeConstructor {
        new(other?: Time): Time;
      }
      namespace descriptor {
        export interface Duration {
          sec: 'int32';
          nanosec: 'uint32';
        }
        export interface DurationConstructor {
          new(other?: Duration): Duration;
        }
        export interface Time {
          sec: 'int32';
          nanosec: 'uint32';
        }
        export interface TimeConstructor {
          new(other?: Time): Time;
        }
      }
    }
  }

  namespace composition_interfaces {
    namespace srv {
      export interface ListNodesConstructor extends ROSService {
        readonly Request: ListNodes_RequestConstructor;
        readonly Response: ListNodes_ResponseConstructor;
      }
      export interface ListNodes_Request {
      }
      export interface ListNodes_RequestConstructor {
        new(other?: ListNodes_Request): ListNodes_Request;
      }
      export interface ListNodes_Response {
        full_node_names: string[];
        unique_ids: bigint[];
      }
      export interface ListNodes_ResponseConstructor {
        new(other?: ListNodes_Response): ListNodes_Response;
      }
      export interface LoadNodeConstructor extends ROSService {
        readonly Request: LoadNode_RequestConstructor;
        readonly Response: LoadNode_ResponseConstructor;
      }
      export interface LoadNode_Request {
        package_name: string;
        plugin_name: string;
        node_name: string;
        node_namespace: string;
        log_level: number;
        remap_rules: string[];
        parameters: rcl_interfaces.msg.Parameter[];
        extra_arguments: rcl_interfaces.msg.Parameter[];
      }
      export interface LoadNode_RequestConstructor {
        new(other?: LoadNode_Request): LoadNode_Request;
      }
      export interface LoadNode_Response {
        success: boolean;
        error_message: string;
        full_node_name: string;
        unique_id: bigint;
      }
      export interface LoadNode_ResponseConstructor {
        new(other?: LoadNode_Response): LoadNode_Response;
      }
      export interface UnloadNodeConstructor extends ROSService {
        readonly Request: UnloadNode_RequestConstructor;
        readonly Response: UnloadNode_ResponseConstructor;
      }
      export interface UnloadNode_Request {
        unique_id: bigint;
      }
      export interface UnloadNode_RequestConstructor {
        new(other?: UnloadNode_Request): UnloadNode_Request;
      }
      export interface UnloadNode_Response {
        success: boolean;
        error_message: string;
      }
      export interface UnloadNode_ResponseConstructor {
        new(other?: UnloadNode_Response): UnloadNode_Response;
      }
      namespace descriptor {
        export interface ListNodesConstructor extends ROSService {
          readonly Request: ListNodes_RequestConstructor;
          readonly Response: ListNodes_ResponseConstructor;
        }
        export interface ListNodes_Request {
        }
        export interface ListNodes_RequestConstructor {
          new(other?: ListNodes_Request): ListNodes_Request;
        }
        export interface ListNodes_Response {
          full_node_names: 'string[]';
          unique_ids: 'uint64[]';
        }
        export interface ListNodes_ResponseConstructor {
          new(other?: ListNodes_Response): ListNodes_Response;
        }
        export interface LoadNodeConstructor extends ROSService {
          readonly Request: LoadNode_RequestConstructor;
          readonly Response: LoadNode_ResponseConstructor;
        }
        export interface LoadNode_Request {
          package_name: 'string';
          plugin_name: 'string';
          node_name: 'string';
          node_namespace: 'string';
          log_level: 'uint8';
          remap_rules: 'string[]';
          parameters: 'rcl_interfaces/msg/Parameter[]';
          extra_arguments: 'rcl_interfaces/msg/Parameter[]';
        }
        export interface LoadNode_RequestConstructor {
          new(other?: LoadNode_Request): LoadNode_Request;
        }
        export interface LoadNode_Response {
          success: 'bool';
          error_message: 'string';
          full_node_name: 'string';
          unique_id: 'uint64';
        }
        export interface LoadNode_ResponseConstructor {
          new(other?: LoadNode_Response): LoadNode_Response;
        }
        export interface UnloadNodeConstructor extends ROSService {
          readonly Request: UnloadNode_RequestConstructor;
          readonly Response: UnloadNode_ResponseConstructor;
        }
        export interface UnloadNode_Request {
          unique_id: 'uint64';
        }
        export interface UnloadNode_RequestConstructor {
          new(other?: UnloadNode_Request): UnloadNode_Request;
        }
        export interface UnloadNode_Response {
          success: 'bool';
          error_message: 'string';
        }
        export interface UnloadNode_ResponseConstructor {
          new(other?: UnloadNode_Response): UnloadNode_Response;
        }
      }
    }
  }

  namespace diagnostic_msgs {
    namespace msg {
      export interface DiagnosticArray {
        header: std_msgs.msg.Header;
        status: diagnostic_msgs.msg.DiagnosticStatus[];
      }
      export interface DiagnosticArrayConstructor {
        new(other?: DiagnosticArray): DiagnosticArray;
      }
      export interface DiagnosticStatus {
        level: number;
        name: string;
        message: string;
        hardware_id: string;
        values: diagnostic_msgs.msg.KeyValue[];
      }
      export interface DiagnosticStatusConstructor {
        readonly OK: number;
        readonly WARN: number;
        readonly ERROR: number;
        readonly STALE: number;
        new(other?: DiagnosticStatus): DiagnosticStatus;
      }
      export interface KeyValue {
        key: string;
        value: string;
      }
      export interface KeyValueConstructor {
        new(other?: KeyValue): KeyValue;
      }
      namespace descriptor {
        export interface DiagnosticArray {
          header: 'std_msgs/msg/Header';
          status: 'diagnostic_msgs/msg/DiagnosticStatus[]';
        }
        export interface DiagnosticArrayConstructor {
          new(other?: DiagnosticArray): DiagnosticArray;
        }
        export interface DiagnosticStatus {
          level: 'byte';
          name: 'string';
          message: 'string';
          hardware_id: 'string';
          values: 'diagnostic_msgs/msg/KeyValue[]';
        }
        export interface DiagnosticStatusConstructor {
          readonly OK: number;
          readonly WARN: number;
          readonly ERROR: number;
          readonly STALE: number;
          new(other?: DiagnosticStatus): DiagnosticStatus;
        }
        export interface KeyValue {
          key: 'string';
          value: 'string';
        }
        export interface KeyValueConstructor {
          new(other?: KeyValue): KeyValue;
        }
      }
    }
    namespace srv {
      export interface AddDiagnosticsConstructor extends ROSService {
        readonly Request: AddDiagnostics_RequestConstructor;
        readonly Response: AddDiagnostics_ResponseConstructor;
      }
      export interface AddDiagnostics_Request {
        load_namespace: string;
      }
      export interface AddDiagnostics_RequestConstructor {
        new(other?: AddDiagnostics_Request): AddDiagnostics_Request;
      }
      export interface AddDiagnostics_Response {
        success: boolean;
        message: string;
      }
      export interface AddDiagnostics_ResponseConstructor {
        new(other?: AddDiagnostics_Response): AddDiagnostics_Response;
      }
      export interface SelfTestConstructor extends ROSService {
        readonly Request: SelfTest_RequestConstructor;
        readonly Response: SelfTest_ResponseConstructor;
      }
      export interface SelfTest_Request {
      }
      export interface SelfTest_RequestConstructor {
        new(other?: SelfTest_Request): SelfTest_Request;
      }
      export interface SelfTest_Response {
        id: string;
        passed: number;
        status: diagnostic_msgs.msg.DiagnosticStatus[];
      }
      export interface SelfTest_ResponseConstructor {
        new(other?: SelfTest_Response): SelfTest_Response;
      }
      namespace descriptor {
        export interface AddDiagnosticsConstructor extends ROSService {
          readonly Request: AddDiagnostics_RequestConstructor;
          readonly Response: AddDiagnostics_ResponseConstructor;
        }
        export interface AddDiagnostics_Request {
          load_namespace: 'string';
        }
        export interface AddDiagnostics_RequestConstructor {
          new(other?: AddDiagnostics_Request): AddDiagnostics_Request;
        }
        export interface AddDiagnostics_Response {
          success: 'bool';
          message: 'string';
        }
        export interface AddDiagnostics_ResponseConstructor {
          new(other?: AddDiagnostics_Response): AddDiagnostics_Response;
        }
        export interface SelfTestConstructor extends ROSService {
          readonly Request: SelfTest_RequestConstructor;
          readonly Response: SelfTest_ResponseConstructor;
        }
        export interface SelfTest_Request {
        }
        export interface SelfTest_RequestConstructor {
          new(other?: SelfTest_Request): SelfTest_Request;
        }
        export interface SelfTest_Response {
          id: 'string';
          passed: 'byte';
          status: 'diagnostic_msgs/msg/DiagnosticStatus[]';
        }
        export interface SelfTest_ResponseConstructor {
          new(other?: SelfTest_Response): SelfTest_Response;
        }
      }
    }
  }

  namespace example_interfaces {
    namespace action {
      export interface FibonacciConstructor {
        readonly Goal: Fibonacci_GoalConstructor;
        readonly Result: Fibonacci_ResultConstructor;
        readonly Feedback: Fibonacci_FeedbackConstructor;
      }
      export interface Fibonacci_Feedback {
        sequence: number[] | Int32Array;
      }
      export interface Fibonacci_FeedbackConstructor {
        new(other?: Fibonacci_Feedback): Fibonacci_Feedback;
      }
      export interface Fibonacci_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: example_interfaces.action.Fibonacci_Feedback;
      }
      export interface Fibonacci_FeedbackMessageConstructor {
        new(other?: Fibonacci_FeedbackMessage): Fibonacci_FeedbackMessage;
      }
      export interface Fibonacci_GetResultConstructor extends ROSService {
        readonly Request: Fibonacci_GetResult_RequestConstructor;
        readonly Response: Fibonacci_GetResult_ResponseConstructor;
      }
      export interface Fibonacci_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Fibonacci_GetResult_RequestConstructor {
        new(other?: Fibonacci_GetResult_Request): Fibonacci_GetResult_Request;
      }
      export interface Fibonacci_GetResult_Response {
        status: number;
        result: example_interfaces.action.Fibonacci_Result;
      }
      export interface Fibonacci_GetResult_ResponseConstructor {
        new(other?: Fibonacci_GetResult_Response): Fibonacci_GetResult_Response;
      }
      export interface Fibonacci_Goal {
        order: number;
      }
      export interface Fibonacci_GoalConstructor {
        new(other?: Fibonacci_Goal): Fibonacci_Goal;
      }
      export interface Fibonacci_Result {
        sequence: number[] | Int32Array;
      }
      export interface Fibonacci_ResultConstructor {
        new(other?: Fibonacci_Result): Fibonacci_Result;
      }
      export interface Fibonacci_SendGoalConstructor extends ROSService {
        readonly Request: Fibonacci_SendGoal_RequestConstructor;
        readonly Response: Fibonacci_SendGoal_ResponseConstructor;
      }
      export interface Fibonacci_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: example_interfaces.action.Fibonacci_Goal;
      }
      export interface Fibonacci_SendGoal_RequestConstructor {
        new(other?: Fibonacci_SendGoal_Request): Fibonacci_SendGoal_Request;
      }
      export interface Fibonacci_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Fibonacci_SendGoal_ResponseConstructor {
        new(other?: Fibonacci_SendGoal_Response): Fibonacci_SendGoal_Response;
      }
      namespace descriptor {
        export interface FibonacciConstructor {
          readonly Goal: Fibonacci_GoalConstructor;
          readonly Result: Fibonacci_ResultConstructor;
          readonly Feedback: Fibonacci_FeedbackConstructor;
        }
        export interface Fibonacci_Feedback {
          sequence: 'int32[]';
        }
        export interface Fibonacci_FeedbackConstructor {
          new(other?: Fibonacci_Feedback): Fibonacci_Feedback;
        }
        export interface Fibonacci_FeedbackMessage {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          feedback: 'example_interfaces/action/Fibonacci_Feedback';
        }
        export interface Fibonacci_FeedbackMessageConstructor {
          new(other?: Fibonacci_FeedbackMessage): Fibonacci_FeedbackMessage;
        }
        export interface Fibonacci_GetResultConstructor extends ROSService {
          readonly Request: Fibonacci_GetResult_RequestConstructor;
          readonly Response: Fibonacci_GetResult_ResponseConstructor;
        }
        export interface Fibonacci_GetResult_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
        }
        export interface Fibonacci_GetResult_RequestConstructor {
          new(other?: Fibonacci_GetResult_Request): Fibonacci_GetResult_Request;
        }
        export interface Fibonacci_GetResult_Response {
          status: 'int8';
          result: 'example_interfaces/action/Fibonacci_Result';
        }
        export interface Fibonacci_GetResult_ResponseConstructor {
          new(other?: Fibonacci_GetResult_Response): Fibonacci_GetResult_Response;
        }
        export interface Fibonacci_Goal {
          order: 'int32';
        }
        export interface Fibonacci_GoalConstructor {
          new(other?: Fibonacci_Goal): Fibonacci_Goal;
        }
        export interface Fibonacci_Result {
          sequence: 'int32[]';
        }
        export interface Fibonacci_ResultConstructor {
          new(other?: Fibonacci_Result): Fibonacci_Result;
        }
        export interface Fibonacci_SendGoalConstructor extends ROSService {
          readonly Request: Fibonacci_SendGoal_RequestConstructor;
          readonly Response: Fibonacci_SendGoal_ResponseConstructor;
        }
        export interface Fibonacci_SendGoal_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          goal: 'example_interfaces/action/Fibonacci_Goal';
        }
        export interface Fibonacci_SendGoal_RequestConstructor {
          new(other?: Fibonacci_SendGoal_Request): Fibonacci_SendGoal_Request;
        }
        export interface Fibonacci_SendGoal_Response {
          accepted: 'bool';
          stamp: 'builtin_interfaces/msg/Time';
        }
        export interface Fibonacci_SendGoal_ResponseConstructor {
          new(other?: Fibonacci_SendGoal_Response): Fibonacci_SendGoal_Response;
        }
      }
    }
    namespace msg {
      export interface Bool {
        data: boolean;
      }
      export interface BoolConstructor {
        new(other?: Bool): Bool;
      }
      export interface Byte {
        data: number;
      }
      export interface ByteConstructor {
        new(other?: Byte): Byte;
      }
      export interface ByteMultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Uint8Array;
      }
      export interface ByteMultiArrayConstructor {
        new(other?: ByteMultiArray): ByteMultiArray;
      }
      export interface Char {
        data: number;
      }
      export interface CharConstructor {
        new(other?: Char): Char;
      }
      export interface Empty {
      }
      export interface EmptyConstructor {
        new(other?: Empty): Empty;
      }
      export interface Float32 {
        data: number;
      }
      export interface Float32Constructor {
        new(other?: Float32): Float32;
      }
      export interface Float32MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Float32Array;
      }
      export interface Float32MultiArrayConstructor {
        new(other?: Float32MultiArray): Float32MultiArray;
      }
      export interface Float64 {
        data: number;
      }
      export interface Float64Constructor {
        new(other?: Float64): Float64;
      }
      export interface Float64MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Float64Array;
      }
      export interface Float64MultiArrayConstructor {
        new(other?: Float64MultiArray): Float64MultiArray;
      }
      export interface Int16 {
        data: number;
      }
      export interface Int16Constructor {
        new(other?: Int16): Int16;
      }
      export interface Int16MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Int16Array;
      }
      export interface Int16MultiArrayConstructor {
        new(other?: Int16MultiArray): Int16MultiArray;
      }
      export interface Int32 {
        data: number;
      }
      export interface Int32Constructor {
        new(other?: Int32): Int32;
      }
      export interface Int32MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Int32Array;
      }
      export interface Int32MultiArrayConstructor {
        new(other?: Int32MultiArray): Int32MultiArray;
      }
      export interface Int64 {
        data: bigint;
      }
      export interface Int64Constructor {
        new(other?: Int64): Int64;
      }
      export interface Int64MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: bigint[];
      }
      export interface Int64MultiArrayConstructor {
        new(other?: Int64MultiArray): Int64MultiArray;
      }
      export interface Int8 {
        data: number;
      }
      export interface Int8Constructor {
        new(other?: Int8): Int8;
      }
      export interface Int8MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Int8Array;
      }
      export interface Int8MultiArrayConstructor {
        new(other?: Int8MultiArray): Int8MultiArray;
      }
      export interface MultiArrayDimension {
        label: string;
        size: number;
        stride: number;
      }
      export interface MultiArrayDimensionConstructor {
        new(other?: MultiArrayDimension): MultiArrayDimension;
      }
      export interface MultiArrayLayout {
        dim: example_interfaces.msg.MultiArrayDimension[];
        data_offset: number;
      }
      export interface MultiArrayLayoutConstructor {
        new(other?: MultiArrayLayout): MultiArrayLayout;
      }
      export interface String {
        data: string;
      }
      export interface StringConstructor {
        new(other?: String): String;
      }
      export interface UInt16 {
        data: number;
      }
      export interface UInt16Constructor {
        new(other?: UInt16): UInt16;
      }
      export interface UInt16MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Uint16Array;
      }
      export interface UInt16MultiArrayConstructor {
        new(other?: UInt16MultiArray): UInt16MultiArray;
      }
      export interface UInt32 {
        data: number;
      }
      export interface UInt32Constructor {
        new(other?: UInt32): UInt32;
      }
      export interface UInt32MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Uint32Array;
      }
      export interface UInt32MultiArrayConstructor {
        new(other?: UInt32MultiArray): UInt32MultiArray;
      }
      export interface UInt64 {
        data: bigint;
      }
      export interface UInt64Constructor {
        new(other?: UInt64): UInt64;
      }
      export interface UInt64MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: bigint[];
      }
      export interface UInt64MultiArrayConstructor {
        new(other?: UInt64MultiArray): UInt64MultiArray;
      }
      export interface UInt8 {
        data: number;
      }
      export interface UInt8Constructor {
        new(other?: UInt8): UInt8;
      }
      export interface UInt8MultiArray {
        layout: example_interfaces.msg.MultiArrayLayout;
        data: number[] | Uint8Array;
      }
      export interface UInt8MultiArrayConstructor {
        new(other?: UInt8MultiArray): UInt8MultiArray;
      }
      export interface WString {
        data: string;
      }
      export interface WStringConstructor {
        new(other?: WString): WString;
      }
      namespace descriptor {
        export interface Bool {
          data: 'bool';
        }
        export interface BoolConstructor {
          new(other?: Bool): Bool;
        }
        export interface Byte {
          data: 'byte';
        }
        export interface ByteConstructor {
          new(other?: Byte): Byte;
        }
        export interface ByteMultiArray {
          layout: 'example_interfaces/msg/MultiArrayLayout';
          data: 'byte[]';
        }
        export interface ByteMultiArrayConstructor {
          new(other?: ByteMultiArray): ByteMultiArray;
        }
        export interface Char {
          data: 'char';
        }
        export interface CharConstructor {
          new(other?: Char): Char;
        }
        export interface Empty {
        }
        export interface EmptyConstructor {
          new(other?: Empty): Empty;
        }
        export interface Float32 {
          data: 'float32';
        }
        export interface Float32Constructor {
          new(other?: Float32): Float32;
        }
        export interface Float32MultiArray {
          layout: 'example_interfaces/msg/MultiArrayLayout';
          data: 'float32[]';
        }
        export interface Float32MultiArrayConstructor {
          new(other?: Float32MultiArray): Float32MultiArray;
        }
        export interface Float64 {
          data: 'float64';
        }
        export interface Float64Constructor {
          new(other?: Float64): Float64;
        }
        export interface Float64MultiArray {
          layout: 'example_interfaces/msg/MultiArrayLayout';
          data: 'float64[]';
        }
        export interface Float64MultiArrayConstructor {
          new(other?: Float64MultiArray): Float64MultiArray;
        }
        export interface Int16 {
          data: 'int16';
        }
        export interface Int16Constructor {
          new(other?: Int16): Int16;
        }
        export interface Int16MultiArray {
          layout: 'example_interfaces/msg/MultiArrayLayout';
          data: 'int16[]';
        }
        export interface Int16MultiArrayConstructor {
          new(other?: Int16MultiArray): Int16MultiArray;
        }
        export interface Int32 {
          data: 'int32';
        }
        export interface Int32Constructor {
          new(other?: Int32): Int32;
        }
        export interface Int32MultiArray {
          layout: 'example_interfaces/msg/MultiArrayLayout';
          data: 'int32[]';
        }
        export interface Int32MultiArrayConstructor {
          new(other?: Int32MultiArray): Int32MultiArray;
        }
        export interface Int64 {
          data: 'int64';
        }
        export interface Int64Constructor {
          new(other?: Int64): Int64;
        }
        export interface Int64MultiArray {
          layout: 'example_interfaces/msg/MultiArrayLayout';
          data: 'int64[]';
        }
        export interface Int64MultiArrayConstructor {
          new(other?: Int64MultiArray): Int64MultiArray;
        }
        export interface Int8 {
          data: 'int8';
        }
        export interface Int8Constructor {
          new(other?: Int8): Int8;
        }
        export interface Int8MultiArray {
          layout: 'example_interfaces/msg/MultiArrayLayout';
          data: 'int8[]';
        }
        export interface Int8MultiArrayConstructor {
          new(other?: Int8MultiArray): Int8MultiArray;
        }
        export interface MultiArrayDimension {
          label: 'string';
          size: 'uint32';
          stride: 'uint32';
        }
        export interface MultiArrayDimensionConstructor {
          new(other?: MultiArrayDimension): MultiArrayDimension;
        }
        export interface MultiArrayLayout {
          dim: 'example_interfaces/msg/MultiArrayDimension[]';
          data_offset: 'uint32';
        }
        export interface MultiArrayLayoutConstructor {
          new(other?: MultiArrayLayout): MultiArrayLayout;
        }
        export interface String {
          data: 'string';
        }
        export interface StringConstructor {
          new(other?: String): String;
        }
        export interface UInt16 {
          data: 'uint16';
        }
        export interface UInt16Constructor {
          new(other?: UInt16): UInt16;
        }
        export interface UInt16MultiArray {
          layout: 'example_interfaces/msg/MultiArrayLayout';
          data: 'uint16[]';
        }
        export interface UInt16MultiArrayConstructor {
          new(other?: UInt16MultiArray): UInt16MultiArray;
        }
        export interface UInt32 {
          data: 'uint32';
        }
        export interface UInt32Constructor {
          new(other?: UInt32): UInt32;
        }
        export interface UInt32MultiArray {
          layout: 'example_interfaces/msg/MultiArrayLayout';
          data: 'uint32[]';
        }
        export interface UInt32MultiArrayConstructor {
          new(other?: UInt32MultiArray): UInt32MultiArray;
        }
        export interface UInt64 {
          data: 'uint64';
        }
        export interface UInt64Constructor {
          new(other?: UInt64): UInt64;
        }
        export interface UInt64MultiArray {
          layout: 'example_interfaces/msg/MultiArrayLayout';
          data: 'uint64[]';
        }
        export interface UInt64MultiArrayConstructor {
          new(other?: UInt64MultiArray): UInt64MultiArray;
        }
        export interface UInt8 {
          data: 'uint8';
        }
        export interface UInt8Constructor {
          new(other?: UInt8): UInt8;
        }
        export interface UInt8MultiArray {
          layout: 'example_interfaces/msg/MultiArrayLayout';
          data: 'uint8[]';
        }
        export interface UInt8MultiArrayConstructor {
          new(other?: UInt8MultiArray): UInt8MultiArray;
        }
        export interface WString {
          data: 'wstring';
        }
        export interface WStringConstructor {
          new(other?: WString): WString;
        }
      }
    }
    namespace srv {
      export interface AddTwoIntsConstructor extends ROSService {
        readonly Request: AddTwoInts_RequestConstructor;
        readonly Response: AddTwoInts_ResponseConstructor;
      }
      export interface AddTwoInts_Request {
        a: bigint;
        b: bigint;
      }
      export interface AddTwoInts_RequestConstructor {
        new(other?: AddTwoInts_Request): AddTwoInts_Request;
      }
      export interface AddTwoInts_Response {
        sum: bigint;
      }
      export interface AddTwoInts_ResponseConstructor {
        new(other?: AddTwoInts_Response): AddTwoInts_Response;
      }
      export interface SetBoolConstructor extends ROSService {
        readonly Request: SetBool_RequestConstructor;
        readonly Response: SetBool_ResponseConstructor;
      }
      export interface SetBool_Request {
        data: boolean;
      }
      export interface SetBool_RequestConstructor {
        new(other?: SetBool_Request): SetBool_Request;
      }
      export interface SetBool_Response {
        success: boolean;
        message: string;
      }
      export interface SetBool_ResponseConstructor {
        new(other?: SetBool_Response): SetBool_Response;
      }
      export interface TriggerConstructor extends ROSService {
        readonly Request: Trigger_RequestConstructor;
        readonly Response: Trigger_ResponseConstructor;
      }
      export interface Trigger_Request {
      }
      export interface Trigger_RequestConstructor {
        new(other?: Trigger_Request): Trigger_Request;
      }
      export interface Trigger_Response {
        success: boolean;
        message: string;
      }
      export interface Trigger_ResponseConstructor {
        new(other?: Trigger_Response): Trigger_Response;
      }
      namespace descriptor {
        export interface AddTwoIntsConstructor extends ROSService {
          readonly Request: AddTwoInts_RequestConstructor;
          readonly Response: AddTwoInts_ResponseConstructor;
        }
        export interface AddTwoInts_Request {
          a: 'int64';
          b: 'int64';
        }
        export interface AddTwoInts_RequestConstructor {
          new(other?: AddTwoInts_Request): AddTwoInts_Request;
        }
        export interface AddTwoInts_Response {
          sum: 'int64';
        }
        export interface AddTwoInts_ResponseConstructor {
          new(other?: AddTwoInts_Response): AddTwoInts_Response;
        }
        export interface SetBoolConstructor extends ROSService {
          readonly Request: SetBool_RequestConstructor;
          readonly Response: SetBool_ResponseConstructor;
        }
        export interface SetBool_Request {
          data: 'bool';
        }
        export interface SetBool_RequestConstructor {
          new(other?: SetBool_Request): SetBool_Request;
        }
        export interface SetBool_Response {
          success: 'bool';
          message: 'string';
        }
        export interface SetBool_ResponseConstructor {
          new(other?: SetBool_Response): SetBool_Response;
        }
        export interface TriggerConstructor extends ROSService {
          readonly Request: Trigger_RequestConstructor;
          readonly Response: Trigger_ResponseConstructor;
        }
        export interface Trigger_Request {
        }
        export interface Trigger_RequestConstructor {
          new(other?: Trigger_Request): Trigger_Request;
        }
        export interface Trigger_Response {
          success: 'bool';
          message: 'string';
        }
        export interface Trigger_ResponseConstructor {
          new(other?: Trigger_Response): Trigger_Response;
        }
      }
    }
  }

  namespace geometry_msgs {
    namespace msg {
      export interface Accel {
        linear: geometry_msgs.msg.Vector3;
        angular: geometry_msgs.msg.Vector3;
      }
      export interface AccelConstructor {
        new(other?: Accel): Accel;
      }
      export interface AccelStamped {
        header: std_msgs.msg.Header;
        accel: geometry_msgs.msg.Accel;
      }
      export interface AccelStampedConstructor {
        new(other?: AccelStamped): AccelStamped;
      }
      export interface AccelWithCovariance {
        accel: geometry_msgs.msg.Accel;
        covariance: number[] | Float64Array;
      }
      export interface AccelWithCovarianceConstructor {
        new(other?: AccelWithCovariance): AccelWithCovariance;
      }
      export interface AccelWithCovarianceStamped {
        header: std_msgs.msg.Header;
        accel: geometry_msgs.msg.AccelWithCovariance;
      }
      export interface AccelWithCovarianceStampedConstructor {
        new(other?: AccelWithCovarianceStamped): AccelWithCovarianceStamped;
      }
      export interface Inertia {
        m: number;
        com: geometry_msgs.msg.Vector3;
        ixx: number;
        ixy: number;
        ixz: number;
        iyy: number;
        iyz: number;
        izz: number;
      }
      export interface InertiaConstructor {
        new(other?: Inertia): Inertia;
      }
      export interface InertiaStamped {
        header: std_msgs.msg.Header;
        inertia: geometry_msgs.msg.Inertia;
      }
      export interface InertiaStampedConstructor {
        new(other?: InertiaStamped): InertiaStamped;
      }
      export interface Point {
        x: number;
        y: number;
        z: number;
      }
      export interface PointConstructor {
        new(other?: Point): Point;
      }
      export interface Point32 {
        x: number;
        y: number;
        z: number;
      }
      export interface Point32Constructor {
        new(other?: Point32): Point32;
      }
      export interface PointStamped {
        header: std_msgs.msg.Header;
        point: geometry_msgs.msg.Point;
      }
      export interface PointStampedConstructor {
        new(other?: PointStamped): PointStamped;
      }
      export interface Polygon {
        points: geometry_msgs.msg.Point32[];
      }
      export interface PolygonConstructor {
        new(other?: Polygon): Polygon;
      }
      export interface PolygonStamped {
        header: std_msgs.msg.Header;
        polygon: geometry_msgs.msg.Polygon;
      }
      export interface PolygonStampedConstructor {
        new(other?: PolygonStamped): PolygonStamped;
      }
      export interface Pose {
        position: geometry_msgs.msg.Point;
        orientation: geometry_msgs.msg.Quaternion;
      }
      export interface PoseConstructor {
        new(other?: Pose): Pose;
      }
      export interface Pose2D {
        x: number;
        y: number;
        theta: number;
      }
      export interface Pose2DConstructor {
        new(other?: Pose2D): Pose2D;
      }
      export interface PoseArray {
        header: std_msgs.msg.Header;
        poses: geometry_msgs.msg.Pose[];
      }
      export interface PoseArrayConstructor {
        new(other?: PoseArray): PoseArray;
      }
      export interface PoseStamped {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
      }
      export interface PoseStampedConstructor {
        new(other?: PoseStamped): PoseStamped;
      }
      export interface PoseWithCovariance {
        pose: geometry_msgs.msg.Pose;
        covariance: number[] | Float64Array;
      }
      export interface PoseWithCovarianceConstructor {
        new(other?: PoseWithCovariance): PoseWithCovariance;
      }
      export interface PoseWithCovarianceStamped {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.PoseWithCovariance;
      }
      export interface PoseWithCovarianceStampedConstructor {
        new(other?: PoseWithCovarianceStamped): PoseWithCovarianceStamped;
      }
      export interface Quaternion {
        x: number;
        y: number;
        z: number;
        w: number;
      }
      export interface QuaternionConstructor {
        new(other?: Quaternion): Quaternion;
      }
      export interface QuaternionStamped {
        header: std_msgs.msg.Header;
        quaternion: geometry_msgs.msg.Quaternion;
      }
      export interface QuaternionStampedConstructor {
        new(other?: QuaternionStamped): QuaternionStamped;
      }
      export interface Transform {
        translation: geometry_msgs.msg.Vector3;
        rotation: geometry_msgs.msg.Quaternion;
      }
      export interface TransformConstructor {
        new(other?: Transform): Transform;
      }
      export interface TransformStamped {
        header: std_msgs.msg.Header;
        child_frame_id: string;
        transform: geometry_msgs.msg.Transform;
      }
      export interface TransformStampedConstructor {
        new(other?: TransformStamped): TransformStamped;
      }
      export interface Twist {
        linear: geometry_msgs.msg.Vector3;
        angular: geometry_msgs.msg.Vector3;
      }
      export interface TwistConstructor {
        new(other?: Twist): Twist;
      }
      export interface TwistStamped {
        header: std_msgs.msg.Header;
        twist: geometry_msgs.msg.Twist;
      }
      export interface TwistStampedConstructor {
        new(other?: TwistStamped): TwistStamped;
      }
      export interface TwistWithCovariance {
        twist: geometry_msgs.msg.Twist;
        covariance: number[] | Float64Array;
      }
      export interface TwistWithCovarianceConstructor {
        new(other?: TwistWithCovariance): TwistWithCovariance;
      }
      export interface TwistWithCovarianceStamped {
        header: std_msgs.msg.Header;
        twist: geometry_msgs.msg.TwistWithCovariance;
      }
      export interface TwistWithCovarianceStampedConstructor {
        new(other?: TwistWithCovarianceStamped): TwistWithCovarianceStamped;
      }
      export interface Vector3 {
        x: number;
        y: number;
        z: number;
      }
      export interface Vector3Constructor {
        new(other?: Vector3): Vector3;
      }
      export interface Vector3Stamped {
        header: std_msgs.msg.Header;
        vector: geometry_msgs.msg.Vector3;
      }
      export interface Vector3StampedConstructor {
        new(other?: Vector3Stamped): Vector3Stamped;
      }
      export interface VelocityStamped {
        header: std_msgs.msg.Header;
        body_frame_id: string;
        reference_frame_id: string;
        velocity: geometry_msgs.msg.Twist;
      }
      export interface VelocityStampedConstructor {
        new(other?: VelocityStamped): VelocityStamped;
      }
      export interface Wrench {
        force: geometry_msgs.msg.Vector3;
        torque: geometry_msgs.msg.Vector3;
      }
      export interface WrenchConstructor {
        new(other?: Wrench): Wrench;
      }
      export interface WrenchStamped {
        header: std_msgs.msg.Header;
        wrench: geometry_msgs.msg.Wrench;
      }
      export interface WrenchStampedConstructor {
        new(other?: WrenchStamped): WrenchStamped;
      }
      namespace descriptor {
        export interface Accel {
          linear: 'geometry_msgs/msg/Vector3';
          angular: 'geometry_msgs/msg/Vector3';
        }
        export interface AccelConstructor {
          new(other?: Accel): Accel;
        }
        export interface AccelStamped {
          header: 'std_msgs/msg/Header';
          accel: 'geometry_msgs/msg/Accel';
        }
        export interface AccelStampedConstructor {
          new(other?: AccelStamped): AccelStamped;
        }
        export interface AccelWithCovariance {
          accel: 'geometry_msgs/msg/Accel';
          covariance: 'float64[36]';
        }
        export interface AccelWithCovarianceConstructor {
          new(other?: AccelWithCovariance): AccelWithCovariance;
        }
        export interface AccelWithCovarianceStamped {
          header: 'std_msgs/msg/Header';
          accel: 'geometry_msgs/msg/AccelWithCovariance';
        }
        export interface AccelWithCovarianceStampedConstructor {
          new(other?: AccelWithCovarianceStamped): AccelWithCovarianceStamped;
        }
        export interface Inertia {
          m: 'float64';
          com: 'geometry_msgs/msg/Vector3';
          ixx: 'float64';
          ixy: 'float64';
          ixz: 'float64';
          iyy: 'float64';
          iyz: 'float64';
          izz: 'float64';
        }
        export interface InertiaConstructor {
          new(other?: Inertia): Inertia;
        }
        export interface InertiaStamped {
          header: 'std_msgs/msg/Header';
          inertia: 'geometry_msgs/msg/Inertia';
        }
        export interface InertiaStampedConstructor {
          new(other?: InertiaStamped): InertiaStamped;
        }
        export interface Point {
          x: 'float64';
          y: 'float64';
          z: 'float64';
        }
        export interface PointConstructor {
          new(other?: Point): Point;
        }
        export interface Point32 {
          x: 'float32';
          y: 'float32';
          z: 'float32';
        }
        export interface Point32Constructor {
          new(other?: Point32): Point32;
        }
        export interface PointStamped {
          header: 'std_msgs/msg/Header';
          point: 'geometry_msgs/msg/Point';
        }
        export interface PointStampedConstructor {
          new(other?: PointStamped): PointStamped;
        }
        export interface Polygon {
          points: 'geometry_msgs/msg/Point32[]';
        }
        export interface PolygonConstructor {
          new(other?: Polygon): Polygon;
        }
        export interface PolygonStamped {
          header: 'std_msgs/msg/Header';
          polygon: 'geometry_msgs/msg/Polygon';
        }
        export interface PolygonStampedConstructor {
          new(other?: PolygonStamped): PolygonStamped;
        }
        export interface Pose {
          position: 'geometry_msgs/msg/Point';
          orientation: 'geometry_msgs/msg/Quaternion';
        }
        export interface PoseConstructor {
          new(other?: Pose): Pose;
        }
        export interface Pose2D {
          x: 'float64';
          y: 'float64';
          theta: 'float64';
        }
        export interface Pose2DConstructor {
          new(other?: Pose2D): Pose2D;
        }
        export interface PoseArray {
          header: 'std_msgs/msg/Header';
          poses: 'geometry_msgs/msg/Pose[]';
        }
        export interface PoseArrayConstructor {
          new(other?: PoseArray): PoseArray;
        }
        export interface PoseStamped {
          header: 'std_msgs/msg/Header';
          pose: 'geometry_msgs/msg/Pose';
        }
        export interface PoseStampedConstructor {
          new(other?: PoseStamped): PoseStamped;
        }
        export interface PoseWithCovariance {
          pose: 'geometry_msgs/msg/Pose';
          covariance: 'float64[36]';
        }
        export interface PoseWithCovarianceConstructor {
          new(other?: PoseWithCovariance): PoseWithCovariance;
        }
        export interface PoseWithCovarianceStamped {
          header: 'std_msgs/msg/Header';
          pose: 'geometry_msgs/msg/PoseWithCovariance';
        }
        export interface PoseWithCovarianceStampedConstructor {
          new(other?: PoseWithCovarianceStamped): PoseWithCovarianceStamped;
        }
        export interface Quaternion {
          x: 'float64';
          y: 'float64';
          z: 'float64';
          w: 'float64';
        }
        export interface QuaternionConstructor {
          new(other?: Quaternion): Quaternion;
        }
        export interface QuaternionStamped {
          header: 'std_msgs/msg/Header';
          quaternion: 'geometry_msgs/msg/Quaternion';
        }
        export interface QuaternionStampedConstructor {
          new(other?: QuaternionStamped): QuaternionStamped;
        }
        export interface Transform {
          translation: 'geometry_msgs/msg/Vector3';
          rotation: 'geometry_msgs/msg/Quaternion';
        }
        export interface TransformConstructor {
          new(other?: Transform): Transform;
        }
        export interface TransformStamped {
          header: 'std_msgs/msg/Header';
          child_frame_id: 'string';
          transform: 'geometry_msgs/msg/Transform';
        }
        export interface TransformStampedConstructor {
          new(other?: TransformStamped): TransformStamped;
        }
        export interface Twist {
          linear: 'geometry_msgs/msg/Vector3';
          angular: 'geometry_msgs/msg/Vector3';
        }
        export interface TwistConstructor {
          new(other?: Twist): Twist;
        }
        export interface TwistStamped {
          header: 'std_msgs/msg/Header';
          twist: 'geometry_msgs/msg/Twist';
        }
        export interface TwistStampedConstructor {
          new(other?: TwistStamped): TwistStamped;
        }
        export interface TwistWithCovariance {
          twist: 'geometry_msgs/msg/Twist';
          covariance: 'float64[36]';
        }
        export interface TwistWithCovarianceConstructor {
          new(other?: TwistWithCovariance): TwistWithCovariance;
        }
        export interface TwistWithCovarianceStamped {
          header: 'std_msgs/msg/Header';
          twist: 'geometry_msgs/msg/TwistWithCovariance';
        }
        export interface TwistWithCovarianceStampedConstructor {
          new(other?: TwistWithCovarianceStamped): TwistWithCovarianceStamped;
        }
        export interface Vector3 {
          x: 'float64';
          y: 'float64';
          z: 'float64';
        }
        export interface Vector3Constructor {
          new(other?: Vector3): Vector3;
        }
        export interface Vector3Stamped {
          header: 'std_msgs/msg/Header';
          vector: 'geometry_msgs/msg/Vector3';
        }
        export interface Vector3StampedConstructor {
          new(other?: Vector3Stamped): Vector3Stamped;
        }
        export interface VelocityStamped {
          header: 'std_msgs/msg/Header';
          body_frame_id: 'string';
          reference_frame_id: 'string';
          velocity: 'geometry_msgs/msg/Twist';
        }
        export interface VelocityStampedConstructor {
          new(other?: VelocityStamped): VelocityStamped;
        }
        export interface Wrench {
          force: 'geometry_msgs/msg/Vector3';
          torque: 'geometry_msgs/msg/Vector3';
        }
        export interface WrenchConstructor {
          new(other?: Wrench): Wrench;
        }
        export interface WrenchStamped {
          header: 'std_msgs/msg/Header';
          wrench: 'geometry_msgs/msg/Wrench';
        }
        export interface WrenchStampedConstructor {
          new(other?: WrenchStamped): WrenchStamped;
        }
      }
    }
  }

  namespace lifecycle_msgs {
    namespace msg {
      export interface State {
        id: number;
        label: string;
      }
      export interface StateConstructor {
        readonly PRIMARY_STATE_UNKNOWN: number;
        readonly PRIMARY_STATE_UNCONFIGURED: number;
        readonly PRIMARY_STATE_INACTIVE: number;
        readonly PRIMARY_STATE_ACTIVE: number;
        readonly PRIMARY_STATE_FINALIZED: number;
        readonly TRANSITION_STATE_CONFIGURING: number;
        readonly TRANSITION_STATE_CLEANINGUP: number;
        readonly TRANSITION_STATE_SHUTTINGDOWN: number;
        readonly TRANSITION_STATE_ACTIVATING: number;
        readonly TRANSITION_STATE_DEACTIVATING: number;
        readonly TRANSITION_STATE_ERRORPROCESSING: number;
        new(other?: State): State;
      }
      export interface Transition {
        id: number;
        label: string;
      }
      export interface TransitionConstructor {
        readonly TRANSITION_CREATE: number;
        readonly TRANSITION_CONFIGURE: number;
        readonly TRANSITION_CLEANUP: number;
        readonly TRANSITION_ACTIVATE: number;
        readonly TRANSITION_DEACTIVATE: number;
        readonly TRANSITION_UNCONFIGURED_SHUTDOWN: number;
        readonly TRANSITION_INACTIVE_SHUTDOWN: number;
        readonly TRANSITION_ACTIVE_SHUTDOWN: number;
        readonly TRANSITION_DESTROY: number;
        readonly TRANSITION_ON_CONFIGURE_SUCCESS: number;
        readonly TRANSITION_ON_CONFIGURE_FAILURE: number;
        readonly TRANSITION_ON_CONFIGURE_ERROR: number;
        readonly TRANSITION_ON_CLEANUP_SUCCESS: number;
        readonly TRANSITION_ON_CLEANUP_FAILURE: number;
        readonly TRANSITION_ON_CLEANUP_ERROR: number;
        readonly TRANSITION_ON_ACTIVATE_SUCCESS: number;
        readonly TRANSITION_ON_ACTIVATE_FAILURE: number;
        readonly TRANSITION_ON_ACTIVATE_ERROR: number;
        readonly TRANSITION_ON_DEACTIVATE_SUCCESS: number;
        readonly TRANSITION_ON_DEACTIVATE_FAILURE: number;
        readonly TRANSITION_ON_DEACTIVATE_ERROR: number;
        readonly TRANSITION_ON_SHUTDOWN_SUCCESS: number;
        readonly TRANSITION_ON_SHUTDOWN_FAILURE: number;
        readonly TRANSITION_ON_SHUTDOWN_ERROR: number;
        readonly TRANSITION_ON_ERROR_SUCCESS: number;
        readonly TRANSITION_ON_ERROR_FAILURE: number;
        readonly TRANSITION_ON_ERROR_ERROR: number;
        readonly TRANSITION_CALLBACK_SUCCESS: number;
        readonly TRANSITION_CALLBACK_FAILURE: number;
        readonly TRANSITION_CALLBACK_ERROR: number;
        new(other?: Transition): Transition;
      }
      export interface TransitionDescription {
        transition: lifecycle_msgs.msg.Transition;
        start_state: lifecycle_msgs.msg.State;
        goal_state: lifecycle_msgs.msg.State;
      }
      export interface TransitionDescriptionConstructor {
        new(other?: TransitionDescription): TransitionDescription;
      }
      export interface TransitionEvent {
        timestamp: bigint;
        transition: lifecycle_msgs.msg.Transition;
        start_state: lifecycle_msgs.msg.State;
        goal_state: lifecycle_msgs.msg.State;
      }
      export interface TransitionEventConstructor {
        new(other?: TransitionEvent): TransitionEvent;
      }
      namespace descriptor {
        export interface State {
          id: 'uint8';
          label: 'string';
        }
        export interface StateConstructor {
          readonly PRIMARY_STATE_UNKNOWN: number;
          readonly PRIMARY_STATE_UNCONFIGURED: number;
          readonly PRIMARY_STATE_INACTIVE: number;
          readonly PRIMARY_STATE_ACTIVE: number;
          readonly PRIMARY_STATE_FINALIZED: number;
          readonly TRANSITION_STATE_CONFIGURING: number;
          readonly TRANSITION_STATE_CLEANINGUP: number;
          readonly TRANSITION_STATE_SHUTTINGDOWN: number;
          readonly TRANSITION_STATE_ACTIVATING: number;
          readonly TRANSITION_STATE_DEACTIVATING: number;
          readonly TRANSITION_STATE_ERRORPROCESSING: number;
          new(other?: State): State;
        }
        export interface Transition {
          id: 'uint8';
          label: 'string';
        }
        export interface TransitionConstructor {
          readonly TRANSITION_CREATE: number;
          readonly TRANSITION_CONFIGURE: number;
          readonly TRANSITION_CLEANUP: number;
          readonly TRANSITION_ACTIVATE: number;
          readonly TRANSITION_DEACTIVATE: number;
          readonly TRANSITION_UNCONFIGURED_SHUTDOWN: number;
          readonly TRANSITION_INACTIVE_SHUTDOWN: number;
          readonly TRANSITION_ACTIVE_SHUTDOWN: number;
          readonly TRANSITION_DESTROY: number;
          readonly TRANSITION_ON_CONFIGURE_SUCCESS: number;
          readonly TRANSITION_ON_CONFIGURE_FAILURE: number;
          readonly TRANSITION_ON_CONFIGURE_ERROR: number;
          readonly TRANSITION_ON_CLEANUP_SUCCESS: number;
          readonly TRANSITION_ON_CLEANUP_FAILURE: number;
          readonly TRANSITION_ON_CLEANUP_ERROR: number;
          readonly TRANSITION_ON_ACTIVATE_SUCCESS: number;
          readonly TRANSITION_ON_ACTIVATE_FAILURE: number;
          readonly TRANSITION_ON_ACTIVATE_ERROR: number;
          readonly TRANSITION_ON_DEACTIVATE_SUCCESS: number;
          readonly TRANSITION_ON_DEACTIVATE_FAILURE: number;
          readonly TRANSITION_ON_DEACTIVATE_ERROR: number;
          readonly TRANSITION_ON_SHUTDOWN_SUCCESS: number;
          readonly TRANSITION_ON_SHUTDOWN_FAILURE: number;
          readonly TRANSITION_ON_SHUTDOWN_ERROR: number;
          readonly TRANSITION_ON_ERROR_SUCCESS: number;
          readonly TRANSITION_ON_ERROR_FAILURE: number;
          readonly TRANSITION_ON_ERROR_ERROR: number;
          readonly TRANSITION_CALLBACK_SUCCESS: number;
          readonly TRANSITION_CALLBACK_FAILURE: number;
          readonly TRANSITION_CALLBACK_ERROR: number;
          new(other?: Transition): Transition;
        }
        export interface TransitionDescription {
          transition: 'lifecycle_msgs/msg/Transition';
          start_state: 'lifecycle_msgs/msg/State';
          goal_state: 'lifecycle_msgs/msg/State';
        }
        export interface TransitionDescriptionConstructor {
          new(other?: TransitionDescription): TransitionDescription;
        }
        export interface TransitionEvent {
          timestamp: 'uint64';
          transition: 'lifecycle_msgs/msg/Transition';
          start_state: 'lifecycle_msgs/msg/State';
          goal_state: 'lifecycle_msgs/msg/State';
        }
        export interface TransitionEventConstructor {
          new(other?: TransitionEvent): TransitionEvent;
        }
      }
    }
    namespace srv {
      export interface ChangeStateConstructor extends ROSService {
        readonly Request: ChangeState_RequestConstructor;
        readonly Response: ChangeState_ResponseConstructor;
      }
      export interface ChangeState_Request {
        transition: lifecycle_msgs.msg.Transition;
      }
      export interface ChangeState_RequestConstructor {
        new(other?: ChangeState_Request): ChangeState_Request;
      }
      export interface ChangeState_Response {
        success: boolean;
      }
      export interface ChangeState_ResponseConstructor {
        new(other?: ChangeState_Response): ChangeState_Response;
      }
      export interface GetAvailableStatesConstructor extends ROSService {
        readonly Request: GetAvailableStates_RequestConstructor;
        readonly Response: GetAvailableStates_ResponseConstructor;
      }
      export interface GetAvailableStates_Request {
      }
      export interface GetAvailableStates_RequestConstructor {
        new(other?: GetAvailableStates_Request): GetAvailableStates_Request;
      }
      export interface GetAvailableStates_Response {
        available_states: lifecycle_msgs.msg.State[];
      }
      export interface GetAvailableStates_ResponseConstructor {
        new(other?: GetAvailableStates_Response): GetAvailableStates_Response;
      }
      export interface GetAvailableTransitionsConstructor extends ROSService {
        readonly Request: GetAvailableTransitions_RequestConstructor;
        readonly Response: GetAvailableTransitions_ResponseConstructor;
      }
      export interface GetAvailableTransitions_Request {
      }
      export interface GetAvailableTransitions_RequestConstructor {
        new(other?: GetAvailableTransitions_Request): GetAvailableTransitions_Request;
      }
      export interface GetAvailableTransitions_Response {
        available_transitions: lifecycle_msgs.msg.TransitionDescription[];
      }
      export interface GetAvailableTransitions_ResponseConstructor {
        new(other?: GetAvailableTransitions_Response): GetAvailableTransitions_Response;
      }
      export interface GetStateConstructor extends ROSService {
        readonly Request: GetState_RequestConstructor;
        readonly Response: GetState_ResponseConstructor;
      }
      export interface GetState_Request {
      }
      export interface GetState_RequestConstructor {
        new(other?: GetState_Request): GetState_Request;
      }
      export interface GetState_Response {
        current_state: lifecycle_msgs.msg.State;
      }
      export interface GetState_ResponseConstructor {
        new(other?: GetState_Response): GetState_Response;
      }
      namespace descriptor {
        export interface ChangeStateConstructor extends ROSService {
          readonly Request: ChangeState_RequestConstructor;
          readonly Response: ChangeState_ResponseConstructor;
        }
        export interface ChangeState_Request {
          transition: 'lifecycle_msgs/msg/Transition';
        }
        export interface ChangeState_RequestConstructor {
          new(other?: ChangeState_Request): ChangeState_Request;
        }
        export interface ChangeState_Response {
          success: 'bool';
        }
        export interface ChangeState_ResponseConstructor {
          new(other?: ChangeState_Response): ChangeState_Response;
        }
        export interface GetAvailableStatesConstructor extends ROSService {
          readonly Request: GetAvailableStates_RequestConstructor;
          readonly Response: GetAvailableStates_ResponseConstructor;
        }
        export interface GetAvailableStates_Request {
        }
        export interface GetAvailableStates_RequestConstructor {
          new(other?: GetAvailableStates_Request): GetAvailableStates_Request;
        }
        export interface GetAvailableStates_Response {
          available_states: 'lifecycle_msgs/msg/State[]';
        }
        export interface GetAvailableStates_ResponseConstructor {
          new(other?: GetAvailableStates_Response): GetAvailableStates_Response;
        }
        export interface GetAvailableTransitionsConstructor extends ROSService {
          readonly Request: GetAvailableTransitions_RequestConstructor;
          readonly Response: GetAvailableTransitions_ResponseConstructor;
        }
        export interface GetAvailableTransitions_Request {
        }
        export interface GetAvailableTransitions_RequestConstructor {
          new(other?: GetAvailableTransitions_Request): GetAvailableTransitions_Request;
        }
        export interface GetAvailableTransitions_Response {
          available_transitions: 'lifecycle_msgs/msg/TransitionDescription[]';
        }
        export interface GetAvailableTransitions_ResponseConstructor {
          new(other?: GetAvailableTransitions_Response): GetAvailableTransitions_Response;
        }
        export interface GetStateConstructor extends ROSService {
          readonly Request: GetState_RequestConstructor;
          readonly Response: GetState_ResponseConstructor;
        }
        export interface GetState_Request {
        }
        export interface GetState_RequestConstructor {
          new(other?: GetState_Request): GetState_Request;
        }
        export interface GetState_Response {
          current_state: 'lifecycle_msgs/msg/State';
        }
        export interface GetState_ResponseConstructor {
          new(other?: GetState_Response): GetState_Response;
        }
      }
    }
  }

  namespace logging_demo {
    namespace srv {
      export interface ConfigLoggerConstructor extends ROSService {
        readonly Request: ConfigLogger_RequestConstructor;
        readonly Response: ConfigLogger_ResponseConstructor;
      }
      export interface ConfigLogger_Request {
        logger_name: string;
        level: string;
      }
      export interface ConfigLogger_RequestConstructor {
        new(other?: ConfigLogger_Request): ConfigLogger_Request;
      }
      export interface ConfigLogger_Response {
        success: boolean;
      }
      export interface ConfigLogger_ResponseConstructor {
        new(other?: ConfigLogger_Response): ConfigLogger_Response;
      }
      namespace descriptor {
        export interface ConfigLoggerConstructor extends ROSService {
          readonly Request: ConfigLogger_RequestConstructor;
          readonly Response: ConfigLogger_ResponseConstructor;
        }
        export interface ConfigLogger_Request {
          logger_name: 'string';
          level: 'string';
        }
        export interface ConfigLogger_RequestConstructor {
          new(other?: ConfigLogger_Request): ConfigLogger_Request;
        }
        export interface ConfigLogger_Response {
          success: 'bool';
        }
        export interface ConfigLogger_ResponseConstructor {
          new(other?: ConfigLogger_Response): ConfigLogger_Response;
        }
      }
    }
  }

  namespace map_msgs {
    namespace msg {
      export interface OccupancyGridUpdate {
        header: std_msgs.msg.Header;
        x: number;
        y: number;
        width: number;
        height: number;
        data: number[] | Int8Array;
      }
      export interface OccupancyGridUpdateConstructor {
        new(other?: OccupancyGridUpdate): OccupancyGridUpdate;
      }
      export interface PointCloud2Update {
        header: std_msgs.msg.Header;
        type: number;
        points: sensor_msgs.msg.PointCloud2;
      }
      export interface PointCloud2UpdateConstructor {
        readonly ADD: number;
        readonly DELETE: number;
        new(other?: PointCloud2Update): PointCloud2Update;
      }
      export interface ProjectedMap {
        map: nav_msgs.msg.OccupancyGrid;
        min_z: number;
        max_z: number;
      }
      export interface ProjectedMapConstructor {
        new(other?: ProjectedMap): ProjectedMap;
      }
      export interface ProjectedMapInfo {
        frame_id: string;
        x: number;
        y: number;
        width: number;
        height: number;
        min_z: number;
        max_z: number;
      }
      export interface ProjectedMapInfoConstructor {
        new(other?: ProjectedMapInfo): ProjectedMapInfo;
      }
      namespace descriptor {
        export interface OccupancyGridUpdate {
          header: 'std_msgs/msg/Header';
          x: 'int32';
          y: 'int32';
          width: 'uint32';
          height: 'uint32';
          data: 'int8[]';
        }
        export interface OccupancyGridUpdateConstructor {
          new(other?: OccupancyGridUpdate): OccupancyGridUpdate;
        }
        export interface PointCloud2Update {
          header: 'std_msgs/msg/Header';
          type: 'uint32';
          points: 'sensor_msgs/msg/PointCloud2';
        }
        export interface PointCloud2UpdateConstructor {
          readonly ADD: number;
          readonly DELETE: number;
          new(other?: PointCloud2Update): PointCloud2Update;
        }
        export interface ProjectedMap {
          map: 'nav_msgs/msg/OccupancyGrid';
          min_z: 'float64';
          max_z: 'float64';
        }
        export interface ProjectedMapConstructor {
          new(other?: ProjectedMap): ProjectedMap;
        }
        export interface ProjectedMapInfo {
          frame_id: 'string';
          x: 'float64';
          y: 'float64';
          width: 'float64';
          height: 'float64';
          min_z: 'float64';
          max_z: 'float64';
        }
        export interface ProjectedMapInfoConstructor {
          new(other?: ProjectedMapInfo): ProjectedMapInfo;
        }
      }
    }
    namespace srv {
      export interface GetMapROIConstructor extends ROSService {
        readonly Request: GetMapROI_RequestConstructor;
        readonly Response: GetMapROI_ResponseConstructor;
      }
      export interface GetMapROI_Request {
        x: number;
        y: number;
        l_x: number;
        l_y: number;
      }
      export interface GetMapROI_RequestConstructor {
        new(other?: GetMapROI_Request): GetMapROI_Request;
      }
      export interface GetMapROI_Response {
        sub_map: nav_msgs.msg.OccupancyGrid;
      }
      export interface GetMapROI_ResponseConstructor {
        new(other?: GetMapROI_Response): GetMapROI_Response;
      }
      export interface GetPointMapConstructor extends ROSService {
        readonly Request: GetPointMap_RequestConstructor;
        readonly Response: GetPointMap_ResponseConstructor;
      }
      export interface GetPointMapROIConstructor extends ROSService {
        readonly Request: GetPointMapROI_RequestConstructor;
        readonly Response: GetPointMapROI_ResponseConstructor;
      }
      export interface GetPointMapROI_Request {
        x: number;
        y: number;
        z: number;
        r: number;
        l_x: number;
        l_y: number;
        l_z: number;
      }
      export interface GetPointMapROI_RequestConstructor {
        new(other?: GetPointMapROI_Request): GetPointMapROI_Request;
      }
      export interface GetPointMapROI_Response {
        sub_map: sensor_msgs.msg.PointCloud2;
      }
      export interface GetPointMapROI_ResponseConstructor {
        new(other?: GetPointMapROI_Response): GetPointMapROI_Response;
      }
      export interface GetPointMap_Request {
      }
      export interface GetPointMap_RequestConstructor {
        new(other?: GetPointMap_Request): GetPointMap_Request;
      }
      export interface GetPointMap_Response {
        map: sensor_msgs.msg.PointCloud2;
      }
      export interface GetPointMap_ResponseConstructor {
        new(other?: GetPointMap_Response): GetPointMap_Response;
      }
      export interface ProjectedMapsInfoConstructor extends ROSService {
        readonly Request: ProjectedMapsInfo_RequestConstructor;
        readonly Response: ProjectedMapsInfo_ResponseConstructor;
      }
      export interface ProjectedMapsInfo_Request {
        projected_maps_info: map_msgs.msg.ProjectedMapInfo[];
      }
      export interface ProjectedMapsInfo_RequestConstructor {
        new(other?: ProjectedMapsInfo_Request): ProjectedMapsInfo_Request;
      }
      export interface ProjectedMapsInfo_Response {
      }
      export interface ProjectedMapsInfo_ResponseConstructor {
        new(other?: ProjectedMapsInfo_Response): ProjectedMapsInfo_Response;
      }
      export interface SaveMapConstructor extends ROSService {
        readonly Request: SaveMap_RequestConstructor;
        readonly Response: SaveMap_ResponseConstructor;
      }
      export interface SaveMap_Request {
        filename: std_msgs.msg.String;
      }
      export interface SaveMap_RequestConstructor {
        new(other?: SaveMap_Request): SaveMap_Request;
      }
      export interface SaveMap_Response {
      }
      export interface SaveMap_ResponseConstructor {
        new(other?: SaveMap_Response): SaveMap_Response;
      }
      export interface SetMapProjectionsConstructor extends ROSService {
        readonly Request: SetMapProjections_RequestConstructor;
        readonly Response: SetMapProjections_ResponseConstructor;
      }
      export interface SetMapProjections_Request {
      }
      export interface SetMapProjections_RequestConstructor {
        new(other?: SetMapProjections_Request): SetMapProjections_Request;
      }
      export interface SetMapProjections_Response {
        projected_maps_info: map_msgs.msg.ProjectedMapInfo[];
      }
      export interface SetMapProjections_ResponseConstructor {
        new(other?: SetMapProjections_Response): SetMapProjections_Response;
      }
      namespace descriptor {
        export interface GetMapROIConstructor extends ROSService {
          readonly Request: GetMapROI_RequestConstructor;
          readonly Response: GetMapROI_ResponseConstructor;
        }
        export interface GetMapROI_Request {
          x: 'float64';
          y: 'float64';
          l_x: 'float64';
          l_y: 'float64';
        }
        export interface GetMapROI_RequestConstructor {
          new(other?: GetMapROI_Request): GetMapROI_Request;
        }
        export interface GetMapROI_Response {
          sub_map: 'nav_msgs/msg/OccupancyGrid';
        }
        export interface GetMapROI_ResponseConstructor {
          new(other?: GetMapROI_Response): GetMapROI_Response;
        }
        export interface GetPointMapConstructor extends ROSService {
          readonly Request: GetPointMap_RequestConstructor;
          readonly Response: GetPointMap_ResponseConstructor;
        }
        export interface GetPointMapROIConstructor extends ROSService {
          readonly Request: GetPointMapROI_RequestConstructor;
          readonly Response: GetPointMapROI_ResponseConstructor;
        }
        export interface GetPointMapROI_Request {
          x: 'float64';
          y: 'float64';
          z: 'float64';
          r: 'float64';
          l_x: 'float64';
          l_y: 'float64';
          l_z: 'float64';
        }
        export interface GetPointMapROI_RequestConstructor {
          new(other?: GetPointMapROI_Request): GetPointMapROI_Request;
        }
        export interface GetPointMapROI_Response {
          sub_map: 'sensor_msgs/msg/PointCloud2';
        }
        export interface GetPointMapROI_ResponseConstructor {
          new(other?: GetPointMapROI_Response): GetPointMapROI_Response;
        }
        export interface GetPointMap_Request {
        }
        export interface GetPointMap_RequestConstructor {
          new(other?: GetPointMap_Request): GetPointMap_Request;
        }
        export interface GetPointMap_Response {
          map: 'sensor_msgs/msg/PointCloud2';
        }
        export interface GetPointMap_ResponseConstructor {
          new(other?: GetPointMap_Response): GetPointMap_Response;
        }
        export interface ProjectedMapsInfoConstructor extends ROSService {
          readonly Request: ProjectedMapsInfo_RequestConstructor;
          readonly Response: ProjectedMapsInfo_ResponseConstructor;
        }
        export interface ProjectedMapsInfo_Request {
          projected_maps_info: 'map_msgs/msg/ProjectedMapInfo[]';
        }
        export interface ProjectedMapsInfo_RequestConstructor {
          new(other?: ProjectedMapsInfo_Request): ProjectedMapsInfo_Request;
        }
        export interface ProjectedMapsInfo_Response {
        }
        export interface ProjectedMapsInfo_ResponseConstructor {
          new(other?: ProjectedMapsInfo_Response): ProjectedMapsInfo_Response;
        }
        export interface SaveMapConstructor extends ROSService {
          readonly Request: SaveMap_RequestConstructor;
          readonly Response: SaveMap_ResponseConstructor;
        }
        export interface SaveMap_Request {
          filename: 'std_msgs/msg/String';
        }
        export interface SaveMap_RequestConstructor {
          new(other?: SaveMap_Request): SaveMap_Request;
        }
        export interface SaveMap_Response {
        }
        export interface SaveMap_ResponseConstructor {
          new(other?: SaveMap_Response): SaveMap_Response;
        }
        export interface SetMapProjectionsConstructor extends ROSService {
          readonly Request: SetMapProjections_RequestConstructor;
          readonly Response: SetMapProjections_ResponseConstructor;
        }
        export interface SetMapProjections_Request {
        }
        export interface SetMapProjections_RequestConstructor {
          new(other?: SetMapProjections_Request): SetMapProjections_Request;
        }
        export interface SetMapProjections_Response {
          projected_maps_info: 'map_msgs/msg/ProjectedMapInfo[]';
        }
        export interface SetMapProjections_ResponseConstructor {
          new(other?: SetMapProjections_Response): SetMapProjections_Response;
        }
      }
    }
  }

  namespace nav_msgs {
    namespace msg {
      export interface Goals {
        header: std_msgs.msg.Header;
        goals: geometry_msgs.msg.PoseStamped[];
      }
      export interface GoalsConstructor {
        new(other?: Goals): Goals;
      }
      export interface GridCells {
        header: std_msgs.msg.Header;
        cell_width: number;
        cell_height: number;
        cells: geometry_msgs.msg.Point[];
      }
      export interface GridCellsConstructor {
        new(other?: GridCells): GridCells;
      }
      export interface MapMetaData {
        map_load_time: builtin_interfaces.msg.Time;
        resolution: number;
        width: number;
        height: number;
        origin: geometry_msgs.msg.Pose;
      }
      export interface MapMetaDataConstructor {
        new(other?: MapMetaData): MapMetaData;
      }
      export interface OccupancyGrid {
        header: std_msgs.msg.Header;
        info: nav_msgs.msg.MapMetaData;
        data: number[] | Int8Array;
      }
      export interface OccupancyGridConstructor {
        new(other?: OccupancyGrid): OccupancyGrid;
      }
      export interface Odometry {
        header: std_msgs.msg.Header;
        child_frame_id: string;
        pose: geometry_msgs.msg.PoseWithCovariance;
        twist: geometry_msgs.msg.TwistWithCovariance;
      }
      export interface OdometryConstructor {
        new(other?: Odometry): Odometry;
      }
      export interface Path {
        header: std_msgs.msg.Header;
        poses: geometry_msgs.msg.PoseStamped[];
      }
      export interface PathConstructor {
        new(other?: Path): Path;
      }
      namespace descriptor {
        export interface Goals {
          header: 'std_msgs/msg/Header';
          goals: 'geometry_msgs/msg/PoseStamped[]';
        }
        export interface GoalsConstructor {
          new(other?: Goals): Goals;
        }
        export interface GridCells {
          header: 'std_msgs/msg/Header';
          cell_width: 'float32';
          cell_height: 'float32';
          cells: 'geometry_msgs/msg/Point[]';
        }
        export interface GridCellsConstructor {
          new(other?: GridCells): GridCells;
        }
        export interface MapMetaData {
          map_load_time: 'builtin_interfaces/msg/Time';
          resolution: 'float32';
          width: 'uint32';
          height: 'uint32';
          origin: 'geometry_msgs/msg/Pose';
        }
        export interface MapMetaDataConstructor {
          new(other?: MapMetaData): MapMetaData;
        }
        export interface OccupancyGrid {
          header: 'std_msgs/msg/Header';
          info: 'nav_msgs/msg/MapMetaData';
          data: 'int8[]';
        }
        export interface OccupancyGridConstructor {
          new(other?: OccupancyGrid): OccupancyGrid;
        }
        export interface Odometry {
          header: 'std_msgs/msg/Header';
          child_frame_id: 'string';
          pose: 'geometry_msgs/msg/PoseWithCovariance';
          twist: 'geometry_msgs/msg/TwistWithCovariance';
        }
        export interface OdometryConstructor {
          new(other?: Odometry): Odometry;
        }
        export interface Path {
          header: 'std_msgs/msg/Header';
          poses: 'geometry_msgs/msg/PoseStamped[]';
        }
        export interface PathConstructor {
          new(other?: Path): Path;
        }
      }
    }
    namespace srv {
      export interface GetMapConstructor extends ROSService {
        readonly Request: GetMap_RequestConstructor;
        readonly Response: GetMap_ResponseConstructor;
      }
      export interface GetMap_Request {
      }
      export interface GetMap_RequestConstructor {
        new(other?: GetMap_Request): GetMap_Request;
      }
      export interface GetMap_Response {
        map: nav_msgs.msg.OccupancyGrid;
      }
      export interface GetMap_ResponseConstructor {
        new(other?: GetMap_Response): GetMap_Response;
      }
      export interface GetPlanConstructor extends ROSService {
        readonly Request: GetPlan_RequestConstructor;
        readonly Response: GetPlan_ResponseConstructor;
      }
      export interface GetPlan_Request {
        start: geometry_msgs.msg.PoseStamped;
        goal: geometry_msgs.msg.PoseStamped;
        tolerance: number;
      }
      export interface GetPlan_RequestConstructor {
        new(other?: GetPlan_Request): GetPlan_Request;
      }
      export interface GetPlan_Response {
        plan: nav_msgs.msg.Path;
      }
      export interface GetPlan_ResponseConstructor {
        new(other?: GetPlan_Response): GetPlan_Response;
      }
      export interface LoadMapConstructor extends ROSService {
        readonly Request: LoadMap_RequestConstructor;
        readonly Response: LoadMap_ResponseConstructor;
      }
      export interface LoadMap_Request {
        map_url: string;
      }
      export interface LoadMap_RequestConstructor {
        new(other?: LoadMap_Request): LoadMap_Request;
      }
      export interface LoadMap_Response {
        map: nav_msgs.msg.OccupancyGrid;
        result: number;
      }
      export interface LoadMap_ResponseConstructor {
        readonly RESULT_SUCCESS: number;
        readonly RESULT_MAP_DOES_NOT_EXIST: number;
        readonly RESULT_INVALID_MAP_DATA: number;
        readonly RESULT_INVALID_MAP_METADATA: number;
        readonly RESULT_UNDEFINED_FAILURE: number;
        new(other?: LoadMap_Response): LoadMap_Response;
      }
      export interface SetMapConstructor extends ROSService {
        readonly Request: SetMap_RequestConstructor;
        readonly Response: SetMap_ResponseConstructor;
      }
      export interface SetMap_Request {
        map: nav_msgs.msg.OccupancyGrid;
        initial_pose: geometry_msgs.msg.PoseWithCovarianceStamped;
      }
      export interface SetMap_RequestConstructor {
        new(other?: SetMap_Request): SetMap_Request;
      }
      export interface SetMap_Response {
        success: boolean;
      }
      export interface SetMap_ResponseConstructor {
        new(other?: SetMap_Response): SetMap_Response;
      }
      namespace descriptor {
        export interface GetMapConstructor extends ROSService {
          readonly Request: GetMap_RequestConstructor;
          readonly Response: GetMap_ResponseConstructor;
        }
        export interface GetMap_Request {
        }
        export interface GetMap_RequestConstructor {
          new(other?: GetMap_Request): GetMap_Request;
        }
        export interface GetMap_Response {
          map: 'nav_msgs/msg/OccupancyGrid';
        }
        export interface GetMap_ResponseConstructor {
          new(other?: GetMap_Response): GetMap_Response;
        }
        export interface GetPlanConstructor extends ROSService {
          readonly Request: GetPlan_RequestConstructor;
          readonly Response: GetPlan_ResponseConstructor;
        }
        export interface GetPlan_Request {
          start: 'geometry_msgs/msg/PoseStamped';
          goal: 'geometry_msgs/msg/PoseStamped';
          tolerance: 'float32';
        }
        export interface GetPlan_RequestConstructor {
          new(other?: GetPlan_Request): GetPlan_Request;
        }
        export interface GetPlan_Response {
          plan: 'nav_msgs/msg/Path';
        }
        export interface GetPlan_ResponseConstructor {
          new(other?: GetPlan_Response): GetPlan_Response;
        }
        export interface LoadMapConstructor extends ROSService {
          readonly Request: LoadMap_RequestConstructor;
          readonly Response: LoadMap_ResponseConstructor;
        }
        export interface LoadMap_Request {
          map_url: 'string';
        }
        export interface LoadMap_RequestConstructor {
          new(other?: LoadMap_Request): LoadMap_Request;
        }
        export interface LoadMap_Response {
          map: 'nav_msgs/msg/OccupancyGrid';
          result: 'uint8';
        }
        export interface LoadMap_ResponseConstructor {
          readonly RESULT_SUCCESS: number;
          readonly RESULT_MAP_DOES_NOT_EXIST: number;
          readonly RESULT_INVALID_MAP_DATA: number;
          readonly RESULT_INVALID_MAP_METADATA: number;
          readonly RESULT_UNDEFINED_FAILURE: number;
          new(other?: LoadMap_Response): LoadMap_Response;
        }
        export interface SetMapConstructor extends ROSService {
          readonly Request: SetMap_RequestConstructor;
          readonly Response: SetMap_ResponseConstructor;
        }
        export interface SetMap_Request {
          map: 'nav_msgs/msg/OccupancyGrid';
          initial_pose: 'geometry_msgs/msg/PoseWithCovarianceStamped';
        }
        export interface SetMap_RequestConstructor {
          new(other?: SetMap_Request): SetMap_Request;
        }
        export interface SetMap_Response {
          success: 'bool';
        }
        export interface SetMap_ResponseConstructor {
          new(other?: SetMap_Response): SetMap_Response;
        }
      }
    }
  }

  namespace pendulum_msgs {
    namespace msg {
      export interface JointCommand {
        position: number;
      }
      export interface JointCommandConstructor {
        new(other?: JointCommand): JointCommand;
      }
      export interface JointState {
        position: number;
        velocity: number;
        effort: number;
      }
      export interface JointStateConstructor {
        new(other?: JointState): JointState;
      }
      export interface RttestResults {
        stamp: builtin_interfaces.msg.Time;
        command: pendulum_msgs.msg.JointCommand;
        state: pendulum_msgs.msg.JointState;
        cur_latency: bigint;
        mean_latency: number;
        min_latency: bigint;
        max_latency: bigint;
        minor_pagefaults: bigint;
        major_pagefaults: bigint;
      }
      export interface RttestResultsConstructor {
        new(other?: RttestResults): RttestResults;
      }
      namespace descriptor {
        export interface JointCommand {
          position: 'float64';
        }
        export interface JointCommandConstructor {
          new(other?: JointCommand): JointCommand;
        }
        export interface JointState {
          position: 'float64';
          velocity: 'float64';
          effort: 'float64';
        }
        export interface JointStateConstructor {
          new(other?: JointState): JointState;
        }
        export interface RttestResults {
          stamp: 'builtin_interfaces/msg/Time';
          command: 'pendulum_msgs/msg/JointCommand';
          state: 'pendulum_msgs/msg/JointState';
          cur_latency: 'uint64';
          mean_latency: 'float64';
          min_latency: 'uint64';
          max_latency: 'uint64';
          minor_pagefaults: 'uint64';
          major_pagefaults: 'uint64';
        }
        export interface RttestResultsConstructor {
          new(other?: RttestResults): RttestResults;
        }
      }
    }
  }

  namespace rcl_interfaces {
    namespace msg {
      export interface FloatingPointRange {
        from_value: number;
        to_value: number;
        step: number;
      }
      export interface FloatingPointRangeConstructor {
        new(other?: FloatingPointRange): FloatingPointRange;
      }
      export interface IntegerRange {
        from_value: bigint;
        to_value: bigint;
        step: bigint;
      }
      export interface IntegerRangeConstructor {
        new(other?: IntegerRange): IntegerRange;
      }
      export interface ListParametersResult {
        names: string[];
        prefixes: string[];
      }
      export interface ListParametersResultConstructor {
        new(other?: ListParametersResult): ListParametersResult;
      }
      export interface Log {
        stamp: builtin_interfaces.msg.Time;
        level: number;
        name: string;
        msg: string;
        file: string;
        function: string;
        line: number;
      }
      export interface LogConstructor {
        readonly DEBUG: number;
        readonly INFO: number;
        readonly WARN: number;
        readonly ERROR: number;
        readonly FATAL: number;
        new(other?: Log): Log;
      }
      export interface Parameter {
        name: string;
        value: rcl_interfaces.msg.ParameterValue;
      }
      export interface ParameterConstructor {
        new(other?: Parameter): Parameter;
      }
      export interface ParameterDescriptor {
        name: string;
        type: number;
        description: string;
        additional_constraints: string;
        read_only: boolean;
        dynamic_typing: boolean;
        floating_point_range: rcl_interfaces.msg.FloatingPointRange[];
        integer_range: rcl_interfaces.msg.IntegerRange[];
      }
      export interface ParameterDescriptorConstructor {
        new(other?: ParameterDescriptor): ParameterDescriptor;
      }
      export interface ParameterEvent {
        stamp: builtin_interfaces.msg.Time;
        node: string;
        new_parameters: rcl_interfaces.msg.Parameter[];
        changed_parameters: rcl_interfaces.msg.Parameter[];
        deleted_parameters: rcl_interfaces.msg.Parameter[];
      }
      export interface ParameterEventConstructor {
        new(other?: ParameterEvent): ParameterEvent;
      }
      export interface ParameterEventDescriptors {
        new_parameters: rcl_interfaces.msg.ParameterDescriptor[];
        changed_parameters: rcl_interfaces.msg.ParameterDescriptor[];
        deleted_parameters: rcl_interfaces.msg.ParameterDescriptor[];
      }
      export interface ParameterEventDescriptorsConstructor {
        new(other?: ParameterEventDescriptors): ParameterEventDescriptors;
      }
      export interface ParameterType {
      }
      export interface ParameterTypeConstructor {
        readonly PARAMETER_NOT_SET: number;
        readonly PARAMETER_BOOL: number;
        readonly PARAMETER_INTEGER: number;
        readonly PARAMETER_DOUBLE: number;
        readonly PARAMETER_STRING: number;
        readonly PARAMETER_BYTE_ARRAY: number;
        readonly PARAMETER_BOOL_ARRAY: number;
        readonly PARAMETER_INTEGER_ARRAY: number;
        readonly PARAMETER_DOUBLE_ARRAY: number;
        readonly PARAMETER_STRING_ARRAY: number;
        new(other?: ParameterType): ParameterType;
      }
      export interface ParameterValue {
        type: number;
        bool_value: boolean;
        integer_value: bigint;
        double_value: number;
        string_value: string;
        byte_array_value: number[] | Uint8Array;
        bool_array_value: boolean[];
        integer_array_value: bigint[];
        double_array_value: number[] | Float64Array;
        string_array_value: string[];
      }
      export interface ParameterValueConstructor {
        new(other?: ParameterValue): ParameterValue;
      }
      export interface SetParametersResult {
        successful: boolean;
        reason: string;
      }
      export interface SetParametersResultConstructor {
        new(other?: SetParametersResult): SetParametersResult;
      }
      namespace descriptor {
        export interface FloatingPointRange {
          from_value: 'float64';
          to_value: 'float64';
          step: 'float64';
        }
        export interface FloatingPointRangeConstructor {
          new(other?: FloatingPointRange): FloatingPointRange;
        }
        export interface IntegerRange {
          from_value: 'int64';
          to_value: 'int64';
          step: 'uint64';
        }
        export interface IntegerRangeConstructor {
          new(other?: IntegerRange): IntegerRange;
        }
        export interface ListParametersResult {
          names: 'string[]';
          prefixes: 'string[]';
        }
        export interface ListParametersResultConstructor {
          new(other?: ListParametersResult): ListParametersResult;
        }
        export interface Log {
          stamp: 'builtin_interfaces/msg/Time';
          level: 'uint8';
          name: 'string';
          msg: 'string';
          file: 'string';
          function: 'string';
          line: 'uint32';
        }
        export interface LogConstructor {
          readonly DEBUG: number;
          readonly INFO: number;
          readonly WARN: number;
          readonly ERROR: number;
          readonly FATAL: number;
          new(other?: Log): Log;
        }
        export interface Parameter {
          name: 'string';
          value: 'rcl_interfaces/msg/ParameterValue';
        }
        export interface ParameterConstructor {
          new(other?: Parameter): Parameter;
        }
        export interface ParameterDescriptor {
          name: 'string';
          type: 'uint8';
          description: 'string';
          additional_constraints: 'string';
          read_only: 'bool';
          dynamic_typing: 'bool';
          floating_point_range: 'rcl_interfaces/msg/FloatingPointRange[]';
          integer_range: 'rcl_interfaces/msg/IntegerRange[]';
        }
        export interface ParameterDescriptorConstructor {
          new(other?: ParameterDescriptor): ParameterDescriptor;
        }
        export interface ParameterEvent {
          stamp: 'builtin_interfaces/msg/Time';
          node: 'string';
          new_parameters: 'rcl_interfaces/msg/Parameter[]';
          changed_parameters: 'rcl_interfaces/msg/Parameter[]';
          deleted_parameters: 'rcl_interfaces/msg/Parameter[]';
        }
        export interface ParameterEventConstructor {
          new(other?: ParameterEvent): ParameterEvent;
        }
        export interface ParameterEventDescriptors {
          new_parameters: 'rcl_interfaces/msg/ParameterDescriptor[]';
          changed_parameters: 'rcl_interfaces/msg/ParameterDescriptor[]';
          deleted_parameters: 'rcl_interfaces/msg/ParameterDescriptor[]';
        }
        export interface ParameterEventDescriptorsConstructor {
          new(other?: ParameterEventDescriptors): ParameterEventDescriptors;
        }
        export interface ParameterType {
        }
        export interface ParameterTypeConstructor {
          readonly PARAMETER_NOT_SET: number;
          readonly PARAMETER_BOOL: number;
          readonly PARAMETER_INTEGER: number;
          readonly PARAMETER_DOUBLE: number;
          readonly PARAMETER_STRING: number;
          readonly PARAMETER_BYTE_ARRAY: number;
          readonly PARAMETER_BOOL_ARRAY: number;
          readonly PARAMETER_INTEGER_ARRAY: number;
          readonly PARAMETER_DOUBLE_ARRAY: number;
          readonly PARAMETER_STRING_ARRAY: number;
          new(other?: ParameterType): ParameterType;
        }
        export interface ParameterValue {
          type: 'uint8';
          bool_value: 'bool';
          integer_value: 'int64';
          double_value: 'float64';
          string_value: 'string';
          byte_array_value: 'byte[]';
          bool_array_value: 'bool[]';
          integer_array_value: 'int64[]';
          double_array_value: 'float64[]';
          string_array_value: 'string[]';
        }
        export interface ParameterValueConstructor {
          new(other?: ParameterValue): ParameterValue;
        }
        export interface SetParametersResult {
          successful: 'bool';
          reason: 'string';
        }
        export interface SetParametersResultConstructor {
          new(other?: SetParametersResult): SetParametersResult;
        }
      }
    }
    namespace srv {
      export interface DescribeParametersConstructor extends ROSService {
        readonly Request: DescribeParameters_RequestConstructor;
        readonly Response: DescribeParameters_ResponseConstructor;
      }
      export interface DescribeParameters_Request {
        names: string[];
      }
      export interface DescribeParameters_RequestConstructor {
        new(other?: DescribeParameters_Request): DescribeParameters_Request;
      }
      export interface DescribeParameters_Response {
        descriptors: rcl_interfaces.msg.ParameterDescriptor[];
      }
      export interface DescribeParameters_ResponseConstructor {
        new(other?: DescribeParameters_Response): DescribeParameters_Response;
      }
      export interface GetParameterTypesConstructor extends ROSService {
        readonly Request: GetParameterTypes_RequestConstructor;
        readonly Response: GetParameterTypes_ResponseConstructor;
      }
      export interface GetParameterTypes_Request {
        names: string[];
      }
      export interface GetParameterTypes_RequestConstructor {
        new(other?: GetParameterTypes_Request): GetParameterTypes_Request;
      }
      export interface GetParameterTypes_Response {
        types: number[] | Uint8Array;
      }
      export interface GetParameterTypes_ResponseConstructor {
        new(other?: GetParameterTypes_Response): GetParameterTypes_Response;
      }
      export interface GetParametersConstructor extends ROSService {
        readonly Request: GetParameters_RequestConstructor;
        readonly Response: GetParameters_ResponseConstructor;
      }
      export interface GetParameters_Request {
        names: string[];
      }
      export interface GetParameters_RequestConstructor {
        new(other?: GetParameters_Request): GetParameters_Request;
      }
      export interface GetParameters_Response {
        values: rcl_interfaces.msg.ParameterValue[];
      }
      export interface GetParameters_ResponseConstructor {
        new(other?: GetParameters_Response): GetParameters_Response;
      }
      export interface ListParametersConstructor extends ROSService {
        readonly Request: ListParameters_RequestConstructor;
        readonly Response: ListParameters_ResponseConstructor;
      }
      export interface ListParameters_Request {
        prefixes: string[];
        depth: bigint;
      }
      export interface ListParameters_RequestConstructor {
        readonly DEPTH_RECURSIVE: bigint;
        new(other?: ListParameters_Request): ListParameters_Request;
      }
      export interface ListParameters_Response {
        result: rcl_interfaces.msg.ListParametersResult;
      }
      export interface ListParameters_ResponseConstructor {
        new(other?: ListParameters_Response): ListParameters_Response;
      }
      export interface SetParametersConstructor extends ROSService {
        readonly Request: SetParameters_RequestConstructor;
        readonly Response: SetParameters_ResponseConstructor;
      }
      export interface SetParametersAtomicallyConstructor extends ROSService {
        readonly Request: SetParametersAtomically_RequestConstructor;
        readonly Response: SetParametersAtomically_ResponseConstructor;
      }
      export interface SetParametersAtomically_Request {
        parameters: rcl_interfaces.msg.Parameter[];
      }
      export interface SetParametersAtomically_RequestConstructor {
        new(other?: SetParametersAtomically_Request): SetParametersAtomically_Request;
      }
      export interface SetParametersAtomically_Response {
        result: rcl_interfaces.msg.SetParametersResult;
      }
      export interface SetParametersAtomically_ResponseConstructor {
        new(other?: SetParametersAtomically_Response): SetParametersAtomically_Response;
      }
      export interface SetParameters_Request {
        parameters: rcl_interfaces.msg.Parameter[];
      }
      export interface SetParameters_RequestConstructor {
        new(other?: SetParameters_Request): SetParameters_Request;
      }
      export interface SetParameters_Response {
        results: rcl_interfaces.msg.SetParametersResult[];
      }
      export interface SetParameters_ResponseConstructor {
        new(other?: SetParameters_Response): SetParameters_Response;
      }
      namespace descriptor {
        export interface DescribeParametersConstructor extends ROSService {
          readonly Request: DescribeParameters_RequestConstructor;
          readonly Response: DescribeParameters_ResponseConstructor;
        }
        export interface DescribeParameters_Request {
          names: 'string[]';
        }
        export interface DescribeParameters_RequestConstructor {
          new(other?: DescribeParameters_Request): DescribeParameters_Request;
        }
        export interface DescribeParameters_Response {
          descriptors: 'rcl_interfaces/msg/ParameterDescriptor[]';
        }
        export interface DescribeParameters_ResponseConstructor {
          new(other?: DescribeParameters_Response): DescribeParameters_Response;
        }
        export interface GetParameterTypesConstructor extends ROSService {
          readonly Request: GetParameterTypes_RequestConstructor;
          readonly Response: GetParameterTypes_ResponseConstructor;
        }
        export interface GetParameterTypes_Request {
          names: 'string[]';
        }
        export interface GetParameterTypes_RequestConstructor {
          new(other?: GetParameterTypes_Request): GetParameterTypes_Request;
        }
        export interface GetParameterTypes_Response {
          types: 'uint8[]';
        }
        export interface GetParameterTypes_ResponseConstructor {
          new(other?: GetParameterTypes_Response): GetParameterTypes_Response;
        }
        export interface GetParametersConstructor extends ROSService {
          readonly Request: GetParameters_RequestConstructor;
          readonly Response: GetParameters_ResponseConstructor;
        }
        export interface GetParameters_Request {
          names: 'string[]';
        }
        export interface GetParameters_RequestConstructor {
          new(other?: GetParameters_Request): GetParameters_Request;
        }
        export interface GetParameters_Response {
          values: 'rcl_interfaces/msg/ParameterValue[]';
        }
        export interface GetParameters_ResponseConstructor {
          new(other?: GetParameters_Response): GetParameters_Response;
        }
        export interface ListParametersConstructor extends ROSService {
          readonly Request: ListParameters_RequestConstructor;
          readonly Response: ListParameters_ResponseConstructor;
        }
        export interface ListParameters_Request {
          prefixes: 'string[]';
          depth: 'uint64';
        }
        export interface ListParameters_RequestConstructor {
          readonly DEPTH_RECURSIVE: bigint;
          new(other?: ListParameters_Request): ListParameters_Request;
        }
        export interface ListParameters_Response {
          result: 'rcl_interfaces/msg/ListParametersResult';
        }
        export interface ListParameters_ResponseConstructor {
          new(other?: ListParameters_Response): ListParameters_Response;
        }
        export interface SetParametersConstructor extends ROSService {
          readonly Request: SetParameters_RequestConstructor;
          readonly Response: SetParameters_ResponseConstructor;
        }
        export interface SetParametersAtomicallyConstructor extends ROSService {
          readonly Request: SetParametersAtomically_RequestConstructor;
          readonly Response: SetParametersAtomically_ResponseConstructor;
        }
        export interface SetParametersAtomically_Request {
          parameters: 'rcl_interfaces/msg/Parameter[]';
        }
        export interface SetParametersAtomically_RequestConstructor {
          new(other?: SetParametersAtomically_Request): SetParametersAtomically_Request;
        }
        export interface SetParametersAtomically_Response {
          result: 'rcl_interfaces/msg/SetParametersResult';
        }
        export interface SetParametersAtomically_ResponseConstructor {
          new(other?: SetParametersAtomically_Response): SetParametersAtomically_Response;
        }
        export interface SetParameters_Request {
          parameters: 'rcl_interfaces/msg/Parameter[]';
        }
        export interface SetParameters_RequestConstructor {
          new(other?: SetParameters_Request): SetParameters_Request;
        }
        export interface SetParameters_Response {
          results: 'rcl_interfaces/msg/SetParametersResult[]';
        }
        export interface SetParameters_ResponseConstructor {
          new(other?: SetParameters_Response): SetParameters_Response;
        }
      }
    }
  }

  namespace rmw_dds_common {
    namespace msg {
      export interface Gid {
        data: number[] | Int8Array;
      }
      export interface GidConstructor {
        new(other?: Gid): Gid;
      }
      export interface NodeEntitiesInfo {
        node_namespace: string;
        node_name: string;
        reader_gid_seq: rmw_dds_common.msg.Gid[];
        writer_gid_seq: rmw_dds_common.msg.Gid[];
      }
      export interface NodeEntitiesInfoConstructor {
        new(other?: NodeEntitiesInfo): NodeEntitiesInfo;
      }
      export interface ParticipantEntitiesInfo {
        gid: rmw_dds_common.msg.Gid;
        node_entities_info_seq: rmw_dds_common.msg.NodeEntitiesInfo[];
      }
      export interface ParticipantEntitiesInfoConstructor {
        new(other?: ParticipantEntitiesInfo): ParticipantEntitiesInfo;
      }
      namespace descriptor {
        export interface Gid {
          data: 'char[24]';
        }
        export interface GidConstructor {
          new(other?: Gid): Gid;
        }
        export interface NodeEntitiesInfo {
          node_namespace: 'string';
          node_name: 'string';
          reader_gid_seq: 'rmw_dds_common/msg/Gid[]';
          writer_gid_seq: 'rmw_dds_common/msg/Gid[]';
        }
        export interface NodeEntitiesInfoConstructor {
          new(other?: NodeEntitiesInfo): NodeEntitiesInfo;
        }
        export interface ParticipantEntitiesInfo {
          gid: 'rmw_dds_common/msg/Gid';
          node_entities_info_seq: 'rmw_dds_common/msg/NodeEntitiesInfo[]';
        }
        export interface ParticipantEntitiesInfoConstructor {
          new(other?: ParticipantEntitiesInfo): ParticipantEntitiesInfo;
        }
      }
    }
  }

  namespace ros2cli_test_interfaces {
    namespace action {
      export interface ShortVariedMultiNestedConstructor {
        readonly Goal: ShortVariedMultiNested_GoalConstructor;
        readonly Result: ShortVariedMultiNested_ResultConstructor;
        readonly Feedback: ShortVariedMultiNested_FeedbackConstructor;
      }
      export interface ShortVariedMultiNested_Feedback {
        bool_values: boolean[];
      }
      export interface ShortVariedMultiNested_FeedbackConstructor {
        new(other?: ShortVariedMultiNested_Feedback): ShortVariedMultiNested_Feedback;
      }
      export interface ShortVariedMultiNested_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: ros2cli_test_interfaces.action.ShortVariedMultiNested_Feedback;
      }
      export interface ShortVariedMultiNested_FeedbackMessageConstructor {
        new(other?: ShortVariedMultiNested_FeedbackMessage): ShortVariedMultiNested_FeedbackMessage;
      }
      export interface ShortVariedMultiNested_GetResultConstructor extends ROSService {
        readonly Request: ShortVariedMultiNested_GetResult_RequestConstructor;
        readonly Response: ShortVariedMultiNested_GetResult_ResponseConstructor;
      }
      export interface ShortVariedMultiNested_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface ShortVariedMultiNested_GetResult_RequestConstructor {
        new(other?: ShortVariedMultiNested_GetResult_Request): ShortVariedMultiNested_GetResult_Request;
      }
      export interface ShortVariedMultiNested_GetResult_Response {
        status: number;
        result: ros2cli_test_interfaces.action.ShortVariedMultiNested_Result;
      }
      export interface ShortVariedMultiNested_GetResult_ResponseConstructor {
        new(other?: ShortVariedMultiNested_GetResult_Response): ShortVariedMultiNested_GetResult_Response;
      }
      export interface ShortVariedMultiNested_Goal {
        short_varied_nested: ros2cli_test_interfaces.msg.ShortVariedNested;
      }
      export interface ShortVariedMultiNested_GoalConstructor {
        new(other?: ShortVariedMultiNested_Goal): ShortVariedMultiNested_Goal;
      }
      export interface ShortVariedMultiNested_Result {
        bool_value: boolean;
      }
      export interface ShortVariedMultiNested_ResultConstructor {
        new(other?: ShortVariedMultiNested_Result): ShortVariedMultiNested_Result;
      }
      export interface ShortVariedMultiNested_SendGoalConstructor extends ROSService {
        readonly Request: ShortVariedMultiNested_SendGoal_RequestConstructor;
        readonly Response: ShortVariedMultiNested_SendGoal_ResponseConstructor;
      }
      export interface ShortVariedMultiNested_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: ros2cli_test_interfaces.action.ShortVariedMultiNested_Goal;
      }
      export interface ShortVariedMultiNested_SendGoal_RequestConstructor {
        new(other?: ShortVariedMultiNested_SendGoal_Request): ShortVariedMultiNested_SendGoal_Request;
      }
      export interface ShortVariedMultiNested_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface ShortVariedMultiNested_SendGoal_ResponseConstructor {
        new(other?: ShortVariedMultiNested_SendGoal_Response): ShortVariedMultiNested_SendGoal_Response;
      }
      namespace descriptor {
        export interface ShortVariedMultiNestedConstructor {
          readonly Goal: ShortVariedMultiNested_GoalConstructor;
          readonly Result: ShortVariedMultiNested_ResultConstructor;
          readonly Feedback: ShortVariedMultiNested_FeedbackConstructor;
        }
        export interface ShortVariedMultiNested_Feedback {
          bool_values: 'bool[3]';
        }
        export interface ShortVariedMultiNested_FeedbackConstructor {
          new(other?: ShortVariedMultiNested_Feedback): ShortVariedMultiNested_Feedback;
        }
        export interface ShortVariedMultiNested_FeedbackMessage {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          feedback: 'ros2cli_test_interfaces/action/ShortVariedMultiNested_Feedback';
        }
        export interface ShortVariedMultiNested_FeedbackMessageConstructor {
          new(other?: ShortVariedMultiNested_FeedbackMessage): ShortVariedMultiNested_FeedbackMessage;
        }
        export interface ShortVariedMultiNested_GetResultConstructor extends ROSService {
          readonly Request: ShortVariedMultiNested_GetResult_RequestConstructor;
          readonly Response: ShortVariedMultiNested_GetResult_ResponseConstructor;
        }
        export interface ShortVariedMultiNested_GetResult_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
        }
        export interface ShortVariedMultiNested_GetResult_RequestConstructor {
          new(other?: ShortVariedMultiNested_GetResult_Request): ShortVariedMultiNested_GetResult_Request;
        }
        export interface ShortVariedMultiNested_GetResult_Response {
          status: 'int8';
          result: 'ros2cli_test_interfaces/action/ShortVariedMultiNested_Result';
        }
        export interface ShortVariedMultiNested_GetResult_ResponseConstructor {
          new(other?: ShortVariedMultiNested_GetResult_Response): ShortVariedMultiNested_GetResult_Response;
        }
        export interface ShortVariedMultiNested_Goal {
          short_varied_nested: 'ros2cli_test_interfaces/msg/ShortVariedNested';
        }
        export interface ShortVariedMultiNested_GoalConstructor {
          new(other?: ShortVariedMultiNested_Goal): ShortVariedMultiNested_Goal;
        }
        export interface ShortVariedMultiNested_Result {
          bool_value: 'bool';
        }
        export interface ShortVariedMultiNested_ResultConstructor {
          new(other?: ShortVariedMultiNested_Result): ShortVariedMultiNested_Result;
        }
        export interface ShortVariedMultiNested_SendGoalConstructor extends ROSService {
          readonly Request: ShortVariedMultiNested_SendGoal_RequestConstructor;
          readonly Response: ShortVariedMultiNested_SendGoal_ResponseConstructor;
        }
        export interface ShortVariedMultiNested_SendGoal_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          goal: 'ros2cli_test_interfaces/action/ShortVariedMultiNested_Goal';
        }
        export interface ShortVariedMultiNested_SendGoal_RequestConstructor {
          new(other?: ShortVariedMultiNested_SendGoal_Request): ShortVariedMultiNested_SendGoal_Request;
        }
        export interface ShortVariedMultiNested_SendGoal_Response {
          accepted: 'bool';
          stamp: 'builtin_interfaces/msg/Time';
        }
        export interface ShortVariedMultiNested_SendGoal_ResponseConstructor {
          new(other?: ShortVariedMultiNested_SendGoal_Response): ShortVariedMultiNested_SendGoal_Response;
        }
      }
    }
    namespace msg {
      export interface ShortVaried {
        bool_value: boolean;
        bool_values: boolean[];
      }
      export interface ShortVariedConstructor {
        readonly BOOL_CONST: boolean;
        new(other?: ShortVaried): ShortVaried;
      }
      export interface ShortVariedMultiNested {
        short_varied_nested: ros2cli_test_interfaces.msg.ShortVariedNested;
      }
      export interface ShortVariedMultiNestedConstructor {
        new(other?: ShortVariedMultiNested): ShortVariedMultiNested;
      }
      export interface ShortVariedNested {
        short_varied: ros2cli_test_interfaces.msg.ShortVaried;
      }
      export interface ShortVariedNestedConstructor {
        new(other?: ShortVariedNested): ShortVariedNested;
      }
      namespace descriptor {
        export interface ShortVaried {
          bool_value: 'bool';
          bool_values: 'bool[]';
        }
        export interface ShortVariedConstructor {
          readonly BOOL_CONST: boolean;
          new(other?: ShortVaried): ShortVaried;
        }
        export interface ShortVariedMultiNested {
          short_varied_nested: 'ros2cli_test_interfaces/msg/ShortVariedNested';
        }
        export interface ShortVariedMultiNestedConstructor {
          new(other?: ShortVariedMultiNested): ShortVariedMultiNested;
        }
        export interface ShortVariedNested {
          short_varied: 'ros2cli_test_interfaces/msg/ShortVaried';
        }
        export interface ShortVariedNestedConstructor {
          new(other?: ShortVariedNested): ShortVariedNested;
        }
      }
    }
    namespace srv {
      export interface ShortVariedMultiNestedConstructor extends ROSService {
        readonly Request: ShortVariedMultiNested_RequestConstructor;
        readonly Response: ShortVariedMultiNested_ResponseConstructor;
      }
      export interface ShortVariedMultiNested_Request {
        short_varied_nested: ros2cli_test_interfaces.msg.ShortVariedNested;
      }
      export interface ShortVariedMultiNested_RequestConstructor {
        new(other?: ShortVariedMultiNested_Request): ShortVariedMultiNested_Request;
      }
      export interface ShortVariedMultiNested_Response {
        bool_value: boolean;
      }
      export interface ShortVariedMultiNested_ResponseConstructor {
        new(other?: ShortVariedMultiNested_Response): ShortVariedMultiNested_Response;
      }
      namespace descriptor {
        export interface ShortVariedMultiNestedConstructor extends ROSService {
          readonly Request: ShortVariedMultiNested_RequestConstructor;
          readonly Response: ShortVariedMultiNested_ResponseConstructor;
        }
        export interface ShortVariedMultiNested_Request {
          short_varied_nested: 'ros2cli_test_interfaces/msg/ShortVariedNested';
        }
        export interface ShortVariedMultiNested_RequestConstructor {
          new(other?: ShortVariedMultiNested_Request): ShortVariedMultiNested_Request;
        }
        export interface ShortVariedMultiNested_Response {
          bool_value: 'bool';
        }
        export interface ShortVariedMultiNested_ResponseConstructor {
          new(other?: ShortVariedMultiNested_Response): ShortVariedMultiNested_Response;
        }
      }
    }
  }

  namespace rosbag2_interfaces {
    namespace msg {
      export interface ReadSplitEvent {
        closed_file: string;
        opened_file: string;
      }
      export interface ReadSplitEventConstructor {
        new(other?: ReadSplitEvent): ReadSplitEvent;
      }
      export interface WriteSplitEvent {
        closed_file: string;
        opened_file: string;
      }
      export interface WriteSplitEventConstructor {
        new(other?: WriteSplitEvent): WriteSplitEvent;
      }
      namespace descriptor {
        export interface ReadSplitEvent {
          closed_file: 'string';
          opened_file: 'string';
        }
        export interface ReadSplitEventConstructor {
          new(other?: ReadSplitEvent): ReadSplitEvent;
        }
        export interface WriteSplitEvent {
          closed_file: 'string';
          opened_file: 'string';
        }
        export interface WriteSplitEventConstructor {
          new(other?: WriteSplitEvent): WriteSplitEvent;
        }
      }
    }
    namespace srv {
      export interface BurstConstructor extends ROSService {
        readonly Request: Burst_RequestConstructor;
        readonly Response: Burst_ResponseConstructor;
      }
      export interface Burst_Request {
        num_messages: bigint;
      }
      export interface Burst_RequestConstructor {
        new(other?: Burst_Request): Burst_Request;
      }
      export interface Burst_Response {
        actually_burst: bigint;
      }
      export interface Burst_ResponseConstructor {
        new(other?: Burst_Response): Burst_Response;
      }
      export interface GetRateConstructor extends ROSService {
        readonly Request: GetRate_RequestConstructor;
        readonly Response: GetRate_ResponseConstructor;
      }
      export interface GetRate_Request {
      }
      export interface GetRate_RequestConstructor {
        new(other?: GetRate_Request): GetRate_Request;
      }
      export interface GetRate_Response {
        rate: number;
      }
      export interface GetRate_ResponseConstructor {
        new(other?: GetRate_Response): GetRate_Response;
      }
      export interface IsPausedConstructor extends ROSService {
        readonly Request: IsPaused_RequestConstructor;
        readonly Response: IsPaused_ResponseConstructor;
      }
      export interface IsPaused_Request {
      }
      export interface IsPaused_RequestConstructor {
        new(other?: IsPaused_Request): IsPaused_Request;
      }
      export interface IsPaused_Response {
        paused: boolean;
      }
      export interface IsPaused_ResponseConstructor {
        new(other?: IsPaused_Response): IsPaused_Response;
      }
      export interface PauseConstructor extends ROSService {
        readonly Request: Pause_RequestConstructor;
        readonly Response: Pause_ResponseConstructor;
      }
      export interface Pause_Request {
      }
      export interface Pause_RequestConstructor {
        new(other?: Pause_Request): Pause_Request;
      }
      export interface Pause_Response {
      }
      export interface Pause_ResponseConstructor {
        new(other?: Pause_Response): Pause_Response;
      }
      export interface PlayNextConstructor extends ROSService {
        readonly Request: PlayNext_RequestConstructor;
        readonly Response: PlayNext_ResponseConstructor;
      }
      export interface PlayNext_Request {
      }
      export interface PlayNext_RequestConstructor {
        new(other?: PlayNext_Request): PlayNext_Request;
      }
      export interface PlayNext_Response {
        success: boolean;
      }
      export interface PlayNext_ResponseConstructor {
        new(other?: PlayNext_Response): PlayNext_Response;
      }
      export interface ResumeConstructor extends ROSService {
        readonly Request: Resume_RequestConstructor;
        readonly Response: Resume_ResponseConstructor;
      }
      export interface Resume_Request {
      }
      export interface Resume_RequestConstructor {
        new(other?: Resume_Request): Resume_Request;
      }
      export interface Resume_Response {
      }
      export interface Resume_ResponseConstructor {
        new(other?: Resume_Response): Resume_Response;
      }
      export interface SeekConstructor extends ROSService {
        readonly Request: Seek_RequestConstructor;
        readonly Response: Seek_ResponseConstructor;
      }
      export interface Seek_Request {
        time: builtin_interfaces.msg.Time;
      }
      export interface Seek_RequestConstructor {
        new(other?: Seek_Request): Seek_Request;
      }
      export interface Seek_Response {
        success: boolean;
      }
      export interface Seek_ResponseConstructor {
        new(other?: Seek_Response): Seek_Response;
      }
      export interface SetRateConstructor extends ROSService {
        readonly Request: SetRate_RequestConstructor;
        readonly Response: SetRate_ResponseConstructor;
      }
      export interface SetRate_Request {
        rate: number;
      }
      export interface SetRate_RequestConstructor {
        new(other?: SetRate_Request): SetRate_Request;
      }
      export interface SetRate_Response {
        success: boolean;
      }
      export interface SetRate_ResponseConstructor {
        new(other?: SetRate_Response): SetRate_Response;
      }
      export interface SnapshotConstructor extends ROSService {
        readonly Request: Snapshot_RequestConstructor;
        readonly Response: Snapshot_ResponseConstructor;
      }
      export interface Snapshot_Request {
      }
      export interface Snapshot_RequestConstructor {
        new(other?: Snapshot_Request): Snapshot_Request;
      }
      export interface Snapshot_Response {
        success: boolean;
      }
      export interface Snapshot_ResponseConstructor {
        new(other?: Snapshot_Response): Snapshot_Response;
      }
      export interface TogglePausedConstructor extends ROSService {
        readonly Request: TogglePaused_RequestConstructor;
        readonly Response: TogglePaused_ResponseConstructor;
      }
      export interface TogglePaused_Request {
      }
      export interface TogglePaused_RequestConstructor {
        new(other?: TogglePaused_Request): TogglePaused_Request;
      }
      export interface TogglePaused_Response {
      }
      export interface TogglePaused_ResponseConstructor {
        new(other?: TogglePaused_Response): TogglePaused_Response;
      }
      namespace descriptor {
        export interface BurstConstructor extends ROSService {
          readonly Request: Burst_RequestConstructor;
          readonly Response: Burst_ResponseConstructor;
        }
        export interface Burst_Request {
          num_messages: 'uint64';
        }
        export interface Burst_RequestConstructor {
          new(other?: Burst_Request): Burst_Request;
        }
        export interface Burst_Response {
          actually_burst: 'uint64';
        }
        export interface Burst_ResponseConstructor {
          new(other?: Burst_Response): Burst_Response;
        }
        export interface GetRateConstructor extends ROSService {
          readonly Request: GetRate_RequestConstructor;
          readonly Response: GetRate_ResponseConstructor;
        }
        export interface GetRate_Request {
        }
        export interface GetRate_RequestConstructor {
          new(other?: GetRate_Request): GetRate_Request;
        }
        export interface GetRate_Response {
          rate: 'float64';
        }
        export interface GetRate_ResponseConstructor {
          new(other?: GetRate_Response): GetRate_Response;
        }
        export interface IsPausedConstructor extends ROSService {
          readonly Request: IsPaused_RequestConstructor;
          readonly Response: IsPaused_ResponseConstructor;
        }
        export interface IsPaused_Request {
        }
        export interface IsPaused_RequestConstructor {
          new(other?: IsPaused_Request): IsPaused_Request;
        }
        export interface IsPaused_Response {
          paused: 'bool';
        }
        export interface IsPaused_ResponseConstructor {
          new(other?: IsPaused_Response): IsPaused_Response;
        }
        export interface PauseConstructor extends ROSService {
          readonly Request: Pause_RequestConstructor;
          readonly Response: Pause_ResponseConstructor;
        }
        export interface Pause_Request {
        }
        export interface Pause_RequestConstructor {
          new(other?: Pause_Request): Pause_Request;
        }
        export interface Pause_Response {
        }
        export interface Pause_ResponseConstructor {
          new(other?: Pause_Response): Pause_Response;
        }
        export interface PlayNextConstructor extends ROSService {
          readonly Request: PlayNext_RequestConstructor;
          readonly Response: PlayNext_ResponseConstructor;
        }
        export interface PlayNext_Request {
        }
        export interface PlayNext_RequestConstructor {
          new(other?: PlayNext_Request): PlayNext_Request;
        }
        export interface PlayNext_Response {
          success: 'bool';
        }
        export interface PlayNext_ResponseConstructor {
          new(other?: PlayNext_Response): PlayNext_Response;
        }
        export interface ResumeConstructor extends ROSService {
          readonly Request: Resume_RequestConstructor;
          readonly Response: Resume_ResponseConstructor;
        }
        export interface Resume_Request {
        }
        export interface Resume_RequestConstructor {
          new(other?: Resume_Request): Resume_Request;
        }
        export interface Resume_Response {
        }
        export interface Resume_ResponseConstructor {
          new(other?: Resume_Response): Resume_Response;
        }
        export interface SeekConstructor extends ROSService {
          readonly Request: Seek_RequestConstructor;
          readonly Response: Seek_ResponseConstructor;
        }
        export interface Seek_Request {
          time: 'builtin_interfaces/msg/Time';
        }
        export interface Seek_RequestConstructor {
          new(other?: Seek_Request): Seek_Request;
        }
        export interface Seek_Response {
          success: 'bool';
        }
        export interface Seek_ResponseConstructor {
          new(other?: Seek_Response): Seek_Response;
        }
        export interface SetRateConstructor extends ROSService {
          readonly Request: SetRate_RequestConstructor;
          readonly Response: SetRate_ResponseConstructor;
        }
        export interface SetRate_Request {
          rate: 'float64';
        }
        export interface SetRate_RequestConstructor {
          new(other?: SetRate_Request): SetRate_Request;
        }
        export interface SetRate_Response {
          success: 'bool';
        }
        export interface SetRate_ResponseConstructor {
          new(other?: SetRate_Response): SetRate_Response;
        }
        export interface SnapshotConstructor extends ROSService {
          readonly Request: Snapshot_RequestConstructor;
          readonly Response: Snapshot_ResponseConstructor;
        }
        export interface Snapshot_Request {
        }
        export interface Snapshot_RequestConstructor {
          new(other?: Snapshot_Request): Snapshot_Request;
        }
        export interface Snapshot_Response {
          success: 'bool';
        }
        export interface Snapshot_ResponseConstructor {
          new(other?: Snapshot_Response): Snapshot_Response;
        }
        export interface TogglePausedConstructor extends ROSService {
          readonly Request: TogglePaused_RequestConstructor;
          readonly Response: TogglePaused_ResponseConstructor;
        }
        export interface TogglePaused_Request {
        }
        export interface TogglePaused_RequestConstructor {
          new(other?: TogglePaused_Request): TogglePaused_Request;
        }
        export interface TogglePaused_Response {
        }
        export interface TogglePaused_ResponseConstructor {
          new(other?: TogglePaused_Response): TogglePaused_Response;
        }
      }
    }
  }

  namespace rosgraph_msgs {
    namespace msg {
      export interface Clock {
        clock: builtin_interfaces.msg.Time;
      }
      export interface ClockConstructor {
        new(other?: Clock): Clock;
      }
      namespace descriptor {
        export interface Clock {
          clock: 'builtin_interfaces/msg/Time';
        }
        export interface ClockConstructor {
          new(other?: Clock): Clock;
        }
      }
    }
  }

  namespace sensor_msgs {
    namespace msg {
      export interface BatteryState {
        header: std_msgs.msg.Header;
        voltage: number;
        temperature: number;
        current: number;
        charge: number;
        capacity: number;
        design_capacity: number;
        percentage: number;
        power_supply_status: number;
        power_supply_health: number;
        power_supply_technology: number;
        present: boolean;
        cell_voltage: number[] | Float32Array;
        cell_temperature: number[] | Float32Array;
        location: string;
        serial_number: string;
      }
      export interface BatteryStateConstructor {
        readonly POWER_SUPPLY_STATUS_UNKNOWN: number;
        readonly POWER_SUPPLY_STATUS_CHARGING: number;
        readonly POWER_SUPPLY_STATUS_DISCHARGING: number;
        readonly POWER_SUPPLY_STATUS_NOT_CHARGING: number;
        readonly POWER_SUPPLY_STATUS_FULL: number;
        readonly POWER_SUPPLY_HEALTH_UNKNOWN: number;
        readonly POWER_SUPPLY_HEALTH_GOOD: number;
        readonly POWER_SUPPLY_HEALTH_OVERHEAT: number;
        readonly POWER_SUPPLY_HEALTH_DEAD: number;
        readonly POWER_SUPPLY_HEALTH_OVERVOLTAGE: number;
        readonly POWER_SUPPLY_HEALTH_UNSPEC_FAILURE: number;
        readonly POWER_SUPPLY_HEALTH_COLD: number;
        readonly POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE: number;
        readonly POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE: number;
        readonly POWER_SUPPLY_TECHNOLOGY_UNKNOWN: number;
        readonly POWER_SUPPLY_TECHNOLOGY_NIMH: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LION: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LIPO: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LIFE: number;
        readonly POWER_SUPPLY_TECHNOLOGY_NICD: number;
        readonly POWER_SUPPLY_TECHNOLOGY_LIMN: number;
        new(other?: BatteryState): BatteryState;
      }
      export interface CameraInfo {
        header: std_msgs.msg.Header;
        height: number;
        width: number;
        distortion_model: string;
        d: number[] | Float64Array;
        k: number[] | Float64Array;
        r: number[] | Float64Array;
        p: number[] | Float64Array;
        binning_x: number;
        binning_y: number;
        roi: sensor_msgs.msg.RegionOfInterest;
      }
      export interface CameraInfoConstructor {
        new(other?: CameraInfo): CameraInfo;
      }
      export interface ChannelFloat32 {
        name: string;
        values: number[] | Float32Array;
      }
      export interface ChannelFloat32Constructor {
        new(other?: ChannelFloat32): ChannelFloat32;
      }
      export interface CompressedImage {
        header: std_msgs.msg.Header;
        format: string;
        data: number[] | Uint8Array;
      }
      export interface CompressedImageConstructor {
        new(other?: CompressedImage): CompressedImage;
      }
      export interface FluidPressure {
        header: std_msgs.msg.Header;
        fluid_pressure: number;
        variance: number;
      }
      export interface FluidPressureConstructor {
        new(other?: FluidPressure): FluidPressure;
      }
      export interface Illuminance {
        header: std_msgs.msg.Header;
        illuminance: number;
        variance: number;
      }
      export interface IlluminanceConstructor {
        new(other?: Illuminance): Illuminance;
      }
      export interface Image {
        header: std_msgs.msg.Header;
        height: number;
        width: number;
        encoding: string;
        is_bigendian: number;
        step: number;
        data: number[] | Uint8Array;
      }
      export interface ImageConstructor {
        new(other?: Image): Image;
      }
      export interface Imu {
        header: std_msgs.msg.Header;
        orientation: geometry_msgs.msg.Quaternion;
        orientation_covariance: number[] | Float64Array;
        angular_velocity: geometry_msgs.msg.Vector3;
        angular_velocity_covariance: number[] | Float64Array;
        linear_acceleration: geometry_msgs.msg.Vector3;
        linear_acceleration_covariance: number[] | Float64Array;
      }
      export interface ImuConstructor {
        new(other?: Imu): Imu;
      }
      export interface JointState {
        header: std_msgs.msg.Header;
        name: string[];
        position: number[] | Float64Array;
        velocity: number[] | Float64Array;
        effort: number[] | Float64Array;
      }
      export interface JointStateConstructor {
        new(other?: JointState): JointState;
      }
      export interface Joy {
        header: std_msgs.msg.Header;
        axes: number[] | Float32Array;
        buttons: number[] | Int32Array;
      }
      export interface JoyConstructor {
        new(other?: Joy): Joy;
      }
      export interface JoyFeedback {
        type: number;
        id: number;
        intensity: number;
      }
      export interface JoyFeedbackConstructor {
        readonly TYPE_LED: number;
        readonly TYPE_RUMBLE: number;
        readonly TYPE_BUZZER: number;
        new(other?: JoyFeedback): JoyFeedback;
      }
      export interface JoyFeedbackArray {
        array: sensor_msgs.msg.JoyFeedback[];
      }
      export interface JoyFeedbackArrayConstructor {
        new(other?: JoyFeedbackArray): JoyFeedbackArray;
      }
      export interface LaserEcho {
        echoes: number[] | Float32Array;
      }
      export interface LaserEchoConstructor {
        new(other?: LaserEcho): LaserEcho;
      }
      export interface LaserScan {
        header: std_msgs.msg.Header;
        angle_min: number;
        angle_max: number;
        angle_increment: number;
        time_increment: number;
        scan_time: number;
        range_min: number;
        range_max: number;
        ranges: number[] | Float32Array;
        intensities: number[] | Float32Array;
      }
      export interface LaserScanConstructor {
        new(other?: LaserScan): LaserScan;
      }
      export interface MagneticField {
        header: std_msgs.msg.Header;
        magnetic_field: geometry_msgs.msg.Vector3;
        magnetic_field_covariance: number[] | Float64Array;
      }
      export interface MagneticFieldConstructor {
        new(other?: MagneticField): MagneticField;
      }
      export interface MultiDOFJointState {
        header: std_msgs.msg.Header;
        joint_names: string[];
        transforms: geometry_msgs.msg.Transform[];
        twist: geometry_msgs.msg.Twist[];
        wrench: geometry_msgs.msg.Wrench[];
      }
      export interface MultiDOFJointStateConstructor {
        new(other?: MultiDOFJointState): MultiDOFJointState;
      }
      export interface MultiEchoLaserScan {
        header: std_msgs.msg.Header;
        angle_min: number;
        angle_max: number;
        angle_increment: number;
        time_increment: number;
        scan_time: number;
        range_min: number;
        range_max: number;
        ranges: sensor_msgs.msg.LaserEcho[];
        intensities: sensor_msgs.msg.LaserEcho[];
      }
      export interface MultiEchoLaserScanConstructor {
        new(other?: MultiEchoLaserScan): MultiEchoLaserScan;
      }
      export interface NavSatFix {
        header: std_msgs.msg.Header;
        status: sensor_msgs.msg.NavSatStatus;
        latitude: number;
        longitude: number;
        altitude: number;
        position_covariance: number[] | Float64Array;
        position_covariance_type: number;
      }
      export interface NavSatFixConstructor {
        readonly COVARIANCE_TYPE_UNKNOWN: number;
        readonly COVARIANCE_TYPE_APPROXIMATED: number;
        readonly COVARIANCE_TYPE_DIAGONAL_KNOWN: number;
        readonly COVARIANCE_TYPE_KNOWN: number;
        new(other?: NavSatFix): NavSatFix;
      }
      export interface NavSatStatus {
        status: number;
        service: number;
      }
      export interface NavSatStatusConstructor {
        readonly STATUS_NO_FIX: number;
        readonly STATUS_FIX: number;
        readonly STATUS_SBAS_FIX: number;
        readonly STATUS_GBAS_FIX: number;
        readonly SERVICE_GPS: number;
        readonly SERVICE_GLONASS: number;
        readonly SERVICE_COMPASS: number;
        readonly SERVICE_GALILEO: number;
        new(other?: NavSatStatus): NavSatStatus;
      }
      export interface PointCloud {
        header: std_msgs.msg.Header;
        points: geometry_msgs.msg.Point32[];
        channels: sensor_msgs.msg.ChannelFloat32[];
      }
      export interface PointCloudConstructor {
        new(other?: PointCloud): PointCloud;
      }
      export interface PointCloud2 {
        header: std_msgs.msg.Header;
        height: number;
        width: number;
        fields: sensor_msgs.msg.PointField[];
        is_bigendian: boolean;
        point_step: number;
        row_step: number;
        data: number[] | Uint8Array;
        is_dense: boolean;
      }
      export interface PointCloud2Constructor {
        new(other?: PointCloud2): PointCloud2;
      }
      export interface PointField {
        name: string;
        offset: number;
        datatype: number;
        count: number;
      }
      export interface PointFieldConstructor {
        readonly INT8: number;
        readonly UINT8: number;
        readonly INT16: number;
        readonly UINT16: number;
        readonly INT32: number;
        readonly UINT32: number;
        readonly FLOAT32: number;
        readonly FLOAT64: number;
        new(other?: PointField): PointField;
      }
      export interface Range {
        header: std_msgs.msg.Header;
        radiation_type: number;
        field_of_view: number;
        min_range: number;
        max_range: number;
        range: number;
      }
      export interface RangeConstructor {
        readonly ULTRASOUND: number;
        readonly INFRARED: number;
        new(other?: Range): Range;
      }
      export interface RegionOfInterest {
        x_offset: number;
        y_offset: number;
        height: number;
        width: number;
        do_rectify: boolean;
      }
      export interface RegionOfInterestConstructor {
        new(other?: RegionOfInterest): RegionOfInterest;
      }
      export interface RelativeHumidity {
        header: std_msgs.msg.Header;
        relative_humidity: number;
        variance: number;
      }
      export interface RelativeHumidityConstructor {
        new(other?: RelativeHumidity): RelativeHumidity;
      }
      export interface Temperature {
        header: std_msgs.msg.Header;
        temperature: number;
        variance: number;
      }
      export interface TemperatureConstructor {
        new(other?: Temperature): Temperature;
      }
      export interface TimeReference {
        header: std_msgs.msg.Header;
        time_ref: builtin_interfaces.msg.Time;
        source: string;
      }
      export interface TimeReferenceConstructor {
        new(other?: TimeReference): TimeReference;
      }
      namespace descriptor {
        export interface BatteryState {
          header: 'std_msgs/msg/Header';
          voltage: 'float32';
          temperature: 'float32';
          current: 'float32';
          charge: 'float32';
          capacity: 'float32';
          design_capacity: 'float32';
          percentage: 'float32';
          power_supply_status: 'uint8';
          power_supply_health: 'uint8';
          power_supply_technology: 'uint8';
          present: 'bool';
          cell_voltage: 'float32[]';
          cell_temperature: 'float32[]';
          location: 'string';
          serial_number: 'string';
        }
        export interface BatteryStateConstructor {
          readonly POWER_SUPPLY_STATUS_UNKNOWN: number;
          readonly POWER_SUPPLY_STATUS_CHARGING: number;
          readonly POWER_SUPPLY_STATUS_DISCHARGING: number;
          readonly POWER_SUPPLY_STATUS_NOT_CHARGING: number;
          readonly POWER_SUPPLY_STATUS_FULL: number;
          readonly POWER_SUPPLY_HEALTH_UNKNOWN: number;
          readonly POWER_SUPPLY_HEALTH_GOOD: number;
          readonly POWER_SUPPLY_HEALTH_OVERHEAT: number;
          readonly POWER_SUPPLY_HEALTH_DEAD: number;
          readonly POWER_SUPPLY_HEALTH_OVERVOLTAGE: number;
          readonly POWER_SUPPLY_HEALTH_UNSPEC_FAILURE: number;
          readonly POWER_SUPPLY_HEALTH_COLD: number;
          readonly POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE: number;
          readonly POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE: number;
          readonly POWER_SUPPLY_TECHNOLOGY_UNKNOWN: number;
          readonly POWER_SUPPLY_TECHNOLOGY_NIMH: number;
          readonly POWER_SUPPLY_TECHNOLOGY_LION: number;
          readonly POWER_SUPPLY_TECHNOLOGY_LIPO: number;
          readonly POWER_SUPPLY_TECHNOLOGY_LIFE: number;
          readonly POWER_SUPPLY_TECHNOLOGY_NICD: number;
          readonly POWER_SUPPLY_TECHNOLOGY_LIMN: number;
          new(other?: BatteryState): BatteryState;
        }
        export interface CameraInfo {
          header: 'std_msgs/msg/Header';
          height: 'uint32';
          width: 'uint32';
          distortion_model: 'string';
          d: 'float64[]';
          k: 'float64[9]';
          r: 'float64[9]';
          p: 'float64[12]';
          binning_x: 'uint32';
          binning_y: 'uint32';
          roi: 'sensor_msgs/msg/RegionOfInterest';
        }
        export interface CameraInfoConstructor {
          new(other?: CameraInfo): CameraInfo;
        }
        export interface ChannelFloat32 {
          name: 'string';
          values: 'float32[]';
        }
        export interface ChannelFloat32Constructor {
          new(other?: ChannelFloat32): ChannelFloat32;
        }
        export interface CompressedImage {
          header: 'std_msgs/msg/Header';
          format: 'string';
          data: 'uint8[]';
        }
        export interface CompressedImageConstructor {
          new(other?: CompressedImage): CompressedImage;
        }
        export interface FluidPressure {
          header: 'std_msgs/msg/Header';
          fluid_pressure: 'float64';
          variance: 'float64';
        }
        export interface FluidPressureConstructor {
          new(other?: FluidPressure): FluidPressure;
        }
        export interface Illuminance {
          header: 'std_msgs/msg/Header';
          illuminance: 'float64';
          variance: 'float64';
        }
        export interface IlluminanceConstructor {
          new(other?: Illuminance): Illuminance;
        }
        export interface Image {
          header: 'std_msgs/msg/Header';
          height: 'uint32';
          width: 'uint32';
          encoding: 'string';
          is_bigendian: 'uint8';
          step: 'uint32';
          data: 'uint8[]';
        }
        export interface ImageConstructor {
          new(other?: Image): Image;
        }
        export interface Imu {
          header: 'std_msgs/msg/Header';
          orientation: 'geometry_msgs/msg/Quaternion';
          orientation_covariance: 'float64[9]';
          angular_velocity: 'geometry_msgs/msg/Vector3';
          angular_velocity_covariance: 'float64[9]';
          linear_acceleration: 'geometry_msgs/msg/Vector3';
          linear_acceleration_covariance: 'float64[9]';
        }
        export interface ImuConstructor {
          new(other?: Imu): Imu;
        }
        export interface JointState {
          header: 'std_msgs/msg/Header';
          name: 'string[]';
          position: 'float64[]';
          velocity: 'float64[]';
          effort: 'float64[]';
        }
        export interface JointStateConstructor {
          new(other?: JointState): JointState;
        }
        export interface Joy {
          header: 'std_msgs/msg/Header';
          axes: 'float32[]';
          buttons: 'int32[]';
        }
        export interface JoyConstructor {
          new(other?: Joy): Joy;
        }
        export interface JoyFeedback {
          type: 'uint8';
          id: 'uint8';
          intensity: 'float32';
        }
        export interface JoyFeedbackConstructor {
          readonly TYPE_LED: number;
          readonly TYPE_RUMBLE: number;
          readonly TYPE_BUZZER: number;
          new(other?: JoyFeedback): JoyFeedback;
        }
        export interface JoyFeedbackArray {
          array: 'sensor_msgs/msg/JoyFeedback[]';
        }
        export interface JoyFeedbackArrayConstructor {
          new(other?: JoyFeedbackArray): JoyFeedbackArray;
        }
        export interface LaserEcho {
          echoes: 'float32[]';
        }
        export interface LaserEchoConstructor {
          new(other?: LaserEcho): LaserEcho;
        }
        export interface LaserScan {
          header: 'std_msgs/msg/Header';
          angle_min: 'float32';
          angle_max: 'float32';
          angle_increment: 'float32';
          time_increment: 'float32';
          scan_time: 'float32';
          range_min: 'float32';
          range_max: 'float32';
          ranges: 'float32[]';
          intensities: 'float32[]';
        }
        export interface LaserScanConstructor {
          new(other?: LaserScan): LaserScan;
        }
        export interface MagneticField {
          header: 'std_msgs/msg/Header';
          magnetic_field: 'geometry_msgs/msg/Vector3';
          magnetic_field_covariance: 'float64[9]';
        }
        export interface MagneticFieldConstructor {
          new(other?: MagneticField): MagneticField;
        }
        export interface MultiDOFJointState {
          header: 'std_msgs/msg/Header';
          joint_names: 'string[]';
          transforms: 'geometry_msgs/msg/Transform[]';
          twist: 'geometry_msgs/msg/Twist[]';
          wrench: 'geometry_msgs/msg/Wrench[]';
        }
        export interface MultiDOFJointStateConstructor {
          new(other?: MultiDOFJointState): MultiDOFJointState;
        }
        export interface MultiEchoLaserScan {
          header: 'std_msgs/msg/Header';
          angle_min: 'float32';
          angle_max: 'float32';
          angle_increment: 'float32';
          time_increment: 'float32';
          scan_time: 'float32';
          range_min: 'float32';
          range_max: 'float32';
          ranges: 'sensor_msgs/msg/LaserEcho[]';
          intensities: 'sensor_msgs/msg/LaserEcho[]';
        }
        export interface MultiEchoLaserScanConstructor {
          new(other?: MultiEchoLaserScan): MultiEchoLaserScan;
        }
        export interface NavSatFix {
          header: 'std_msgs/msg/Header';
          status: 'sensor_msgs/msg/NavSatStatus';
          latitude: 'float64';
          longitude: 'float64';
          altitude: 'float64';
          position_covariance: 'float64[9]';
          position_covariance_type: 'uint8';
        }
        export interface NavSatFixConstructor {
          readonly COVARIANCE_TYPE_UNKNOWN: number;
          readonly COVARIANCE_TYPE_APPROXIMATED: number;
          readonly COVARIANCE_TYPE_DIAGONAL_KNOWN: number;
          readonly COVARIANCE_TYPE_KNOWN: number;
          new(other?: NavSatFix): NavSatFix;
        }
        export interface NavSatStatus {
          status: 'int8';
          service: 'uint16';
        }
        export interface NavSatStatusConstructor {
          readonly STATUS_NO_FIX: number;
          readonly STATUS_FIX: number;
          readonly STATUS_SBAS_FIX: number;
          readonly STATUS_GBAS_FIX: number;
          readonly SERVICE_GPS: number;
          readonly SERVICE_GLONASS: number;
          readonly SERVICE_COMPASS: number;
          readonly SERVICE_GALILEO: number;
          new(other?: NavSatStatus): NavSatStatus;
        }
        export interface PointCloud {
          header: 'std_msgs/msg/Header';
          points: 'geometry_msgs/msg/Point32[]';
          channels: 'sensor_msgs/msg/ChannelFloat32[]';
        }
        export interface PointCloudConstructor {
          new(other?: PointCloud): PointCloud;
        }
        export interface PointCloud2 {
          header: 'std_msgs/msg/Header';
          height: 'uint32';
          width: 'uint32';
          fields: 'sensor_msgs/msg/PointField[]';
          is_bigendian: 'bool';
          point_step: 'uint32';
          row_step: 'uint32';
          data: 'uint8[]';
          is_dense: 'bool';
        }
        export interface PointCloud2Constructor {
          new(other?: PointCloud2): PointCloud2;
        }
        export interface PointField {
          name: 'string';
          offset: 'uint32';
          datatype: 'uint8';
          count: 'uint32';
        }
        export interface PointFieldConstructor {
          readonly INT8: number;
          readonly UINT8: number;
          readonly INT16: number;
          readonly UINT16: number;
          readonly INT32: number;
          readonly UINT32: number;
          readonly FLOAT32: number;
          readonly FLOAT64: number;
          new(other?: PointField): PointField;
        }
        export interface Range {
          header: 'std_msgs/msg/Header';
          radiation_type: 'uint8';
          field_of_view: 'float32';
          min_range: 'float32';
          max_range: 'float32';
          range: 'float32';
        }
        export interface RangeConstructor {
          readonly ULTRASOUND: number;
          readonly INFRARED: number;
          new(other?: Range): Range;
        }
        export interface RegionOfInterest {
          x_offset: 'uint32';
          y_offset: 'uint32';
          height: 'uint32';
          width: 'uint32';
          do_rectify: 'bool';
        }
        export interface RegionOfInterestConstructor {
          new(other?: RegionOfInterest): RegionOfInterest;
        }
        export interface RelativeHumidity {
          header: 'std_msgs/msg/Header';
          relative_humidity: 'float64';
          variance: 'float64';
        }
        export interface RelativeHumidityConstructor {
          new(other?: RelativeHumidity): RelativeHumidity;
        }
        export interface Temperature {
          header: 'std_msgs/msg/Header';
          temperature: 'float64';
          variance: 'float64';
        }
        export interface TemperatureConstructor {
          new(other?: Temperature): Temperature;
        }
        export interface TimeReference {
          header: 'std_msgs/msg/Header';
          time_ref: 'builtin_interfaces/msg/Time';
          source: 'string';
        }
        export interface TimeReferenceConstructor {
          new(other?: TimeReference): TimeReference;
        }
      }
    }
    namespace srv {
      export interface SetCameraInfoConstructor extends ROSService {
        readonly Request: SetCameraInfo_RequestConstructor;
        readonly Response: SetCameraInfo_ResponseConstructor;
      }
      export interface SetCameraInfo_Request {
        camera_info: sensor_msgs.msg.CameraInfo;
      }
      export interface SetCameraInfo_RequestConstructor {
        new(other?: SetCameraInfo_Request): SetCameraInfo_Request;
      }
      export interface SetCameraInfo_Response {
        success: boolean;
        status_message: string;
      }
      export interface SetCameraInfo_ResponseConstructor {
        new(other?: SetCameraInfo_Response): SetCameraInfo_Response;
      }
      namespace descriptor {
        export interface SetCameraInfoConstructor extends ROSService {
          readonly Request: SetCameraInfo_RequestConstructor;
          readonly Response: SetCameraInfo_ResponseConstructor;
        }
        export interface SetCameraInfo_Request {
          camera_info: 'sensor_msgs/msg/CameraInfo';
        }
        export interface SetCameraInfo_RequestConstructor {
          new(other?: SetCameraInfo_Request): SetCameraInfo_Request;
        }
        export interface SetCameraInfo_Response {
          success: 'bool';
          status_message: 'string';
        }
        export interface SetCameraInfo_ResponseConstructor {
          new(other?: SetCameraInfo_Response): SetCameraInfo_Response;
        }
      }
    }
  }

  namespace shape_msgs {
    namespace msg {
      export interface Mesh {
        triangles: shape_msgs.msg.MeshTriangle[];
        vertices: geometry_msgs.msg.Point[];
      }
      export interface MeshConstructor {
        new(other?: Mesh): Mesh;
      }
      export interface MeshTriangle {
        vertex_indices: number[] | Uint32Array;
      }
      export interface MeshTriangleConstructor {
        new(other?: MeshTriangle): MeshTriangle;
      }
      export interface Plane {
        coef: number[] | Float64Array;
      }
      export interface PlaneConstructor {
        new(other?: Plane): Plane;
      }
      export interface SolidPrimitive {
        type: number;
        dimensions: number[] | Float64Array;
        polygon: geometry_msgs.msg.Polygon;
      }
      export interface SolidPrimitiveConstructor {
        readonly BOX: number;
        readonly SPHERE: number;
        readonly CYLINDER: number;
        readonly CONE: number;
        readonly PRISM: number;
        readonly BOX_X: number;
        readonly BOX_Y: number;
        readonly BOX_Z: number;
        readonly SPHERE_RADIUS: number;
        readonly CYLINDER_HEIGHT: number;
        readonly CYLINDER_RADIUS: number;
        readonly CONE_HEIGHT: number;
        readonly CONE_RADIUS: number;
        readonly PRISM_HEIGHT: number;
        new(other?: SolidPrimitive): SolidPrimitive;
      }
      namespace descriptor {
        export interface Mesh {
          triangles: 'shape_msgs/msg/MeshTriangle[]';
          vertices: 'geometry_msgs/msg/Point[]';
        }
        export interface MeshConstructor {
          new(other?: Mesh): Mesh;
        }
        export interface MeshTriangle {
          vertex_indices: 'uint32[3]';
        }
        export interface MeshTriangleConstructor {
          new(other?: MeshTriangle): MeshTriangle;
        }
        export interface Plane {
          coef: 'float64[4]';
        }
        export interface PlaneConstructor {
          new(other?: Plane): Plane;
        }
        export interface SolidPrimitive {
          type: 'uint8';
          dimensions: 'float64[]';
          polygon: 'geometry_msgs/msg/Polygon';
        }
        export interface SolidPrimitiveConstructor {
          readonly BOX: number;
          readonly SPHERE: number;
          readonly CYLINDER: number;
          readonly CONE: number;
          readonly PRISM: number;
          readonly BOX_X: number;
          readonly BOX_Y: number;
          readonly BOX_Z: number;
          readonly SPHERE_RADIUS: number;
          readonly CYLINDER_HEIGHT: number;
          readonly CYLINDER_RADIUS: number;
          readonly CONE_HEIGHT: number;
          readonly CONE_RADIUS: number;
          readonly PRISM_HEIGHT: number;
          new(other?: SolidPrimitive): SolidPrimitive;
        }
      }
    }
  }

  namespace statistics_msgs {
    namespace msg {
      export interface MetricsMessage {
        measurement_source_name: string;
        metrics_source: string;
        unit: string;
        window_start: builtin_interfaces.msg.Time;
        window_stop: builtin_interfaces.msg.Time;
        statistics: statistics_msgs.msg.StatisticDataPoint[];
      }
      export interface MetricsMessageConstructor {
        new(other?: MetricsMessage): MetricsMessage;
      }
      export interface StatisticDataPoint {
        data_type: number;
        data: number;
      }
      export interface StatisticDataPointConstructor {
        new(other?: StatisticDataPoint): StatisticDataPoint;
      }
      export interface StatisticDataType {
      }
      export interface StatisticDataTypeConstructor {
        readonly STATISTICS_DATA_TYPE_UNINITIALIZED: number;
        readonly STATISTICS_DATA_TYPE_AVERAGE: number;
        readonly STATISTICS_DATA_TYPE_MINIMUM: number;
        readonly STATISTICS_DATA_TYPE_MAXIMUM: number;
        readonly STATISTICS_DATA_TYPE_STDDEV: number;
        readonly STATISTICS_DATA_TYPE_SAMPLE_COUNT: number;
        new(other?: StatisticDataType): StatisticDataType;
      }
      namespace descriptor {
        export interface MetricsMessage {
          measurement_source_name: 'string';
          metrics_source: 'string';
          unit: 'string';
          window_start: 'builtin_interfaces/msg/Time';
          window_stop: 'builtin_interfaces/msg/Time';
          statistics: 'statistics_msgs/msg/StatisticDataPoint[]';
        }
        export interface MetricsMessageConstructor {
          new(other?: MetricsMessage): MetricsMessage;
        }
        export interface StatisticDataPoint {
          data_type: 'uint8';
          data: 'float64';
        }
        export interface StatisticDataPointConstructor {
          new(other?: StatisticDataPoint): StatisticDataPoint;
        }
        export interface StatisticDataType {
        }
        export interface StatisticDataTypeConstructor {
          readonly STATISTICS_DATA_TYPE_UNINITIALIZED: number;
          readonly STATISTICS_DATA_TYPE_AVERAGE: number;
          readonly STATISTICS_DATA_TYPE_MINIMUM: number;
          readonly STATISTICS_DATA_TYPE_MAXIMUM: number;
          readonly STATISTICS_DATA_TYPE_STDDEV: number;
          readonly STATISTICS_DATA_TYPE_SAMPLE_COUNT: number;
          new(other?: StatisticDataType): StatisticDataType;
        }
      }
    }
  }

  namespace std_msgs {
    namespace msg {
      export interface Bool {
        data: boolean;
      }
      export interface BoolConstructor {
        new(other?: Bool): Bool;
      }
      export interface Byte {
        data: number;
      }
      export interface ByteConstructor {
        new(other?: Byte): Byte;
      }
      export interface ByteMultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint8Array;
      }
      export interface ByteMultiArrayConstructor {
        new(other?: ByteMultiArray): ByteMultiArray;
      }
      export interface Char {
        data: number;
      }
      export interface CharConstructor {
        new(other?: Char): Char;
      }
      export interface ColorRGBA {
        r: number;
        g: number;
        b: number;
        a: number;
      }
      export interface ColorRGBAConstructor {
        new(other?: ColorRGBA): ColorRGBA;
      }
      export interface Empty {
      }
      export interface EmptyConstructor {
        new(other?: Empty): Empty;
      }
      export interface Float32 {
        data: number;
      }
      export interface Float32Constructor {
        new(other?: Float32): Float32;
      }
      export interface Float32MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Float32Array;
      }
      export interface Float32MultiArrayConstructor {
        new(other?: Float32MultiArray): Float32MultiArray;
      }
      export interface Float64 {
        data: number;
      }
      export interface Float64Constructor {
        new(other?: Float64): Float64;
      }
      export interface Float64MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Float64Array;
      }
      export interface Float64MultiArrayConstructor {
        new(other?: Float64MultiArray): Float64MultiArray;
      }
      export interface Header {
        stamp: builtin_interfaces.msg.Time;
        frame_id: string;
      }
      export interface HeaderConstructor {
        new(other?: Header): Header;
      }
      export interface Int16 {
        data: number;
      }
      export interface Int16Constructor {
        new(other?: Int16): Int16;
      }
      export interface Int16MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Int16Array;
      }
      export interface Int16MultiArrayConstructor {
        new(other?: Int16MultiArray): Int16MultiArray;
      }
      export interface Int32 {
        data: number;
      }
      export interface Int32Constructor {
        new(other?: Int32): Int32;
      }
      export interface Int32MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Int32Array;
      }
      export interface Int32MultiArrayConstructor {
        new(other?: Int32MultiArray): Int32MultiArray;
      }
      export interface Int64 {
        data: bigint;
      }
      export interface Int64Constructor {
        new(other?: Int64): Int64;
      }
      export interface Int64MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: bigint[];
      }
      export interface Int64MultiArrayConstructor {
        new(other?: Int64MultiArray): Int64MultiArray;
      }
      export interface Int8 {
        data: number;
      }
      export interface Int8Constructor {
        new(other?: Int8): Int8;
      }
      export interface Int8MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Int8Array;
      }
      export interface Int8MultiArrayConstructor {
        new(other?: Int8MultiArray): Int8MultiArray;
      }
      export interface MultiArrayDimension {
        label: string;
        size: number;
        stride: number;
      }
      export interface MultiArrayDimensionConstructor {
        new(other?: MultiArrayDimension): MultiArrayDimension;
      }
      export interface MultiArrayLayout {
        dim: std_msgs.msg.MultiArrayDimension[];
        data_offset: number;
      }
      export interface MultiArrayLayoutConstructor {
        new(other?: MultiArrayLayout): MultiArrayLayout;
      }
      export interface String {
        data: string;
      }
      export interface StringConstructor {
        new(other?: String): String;
      }
      export interface UInt16 {
        data: number;
      }
      export interface UInt16Constructor {
        new(other?: UInt16): UInt16;
      }
      export interface UInt16MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint16Array;
      }
      export interface UInt16MultiArrayConstructor {
        new(other?: UInt16MultiArray): UInt16MultiArray;
      }
      export interface UInt32 {
        data: number;
      }
      export interface UInt32Constructor {
        new(other?: UInt32): UInt32;
      }
      export interface UInt32MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint32Array;
      }
      export interface UInt32MultiArrayConstructor {
        new(other?: UInt32MultiArray): UInt32MultiArray;
      }
      export interface UInt64 {
        data: bigint;
      }
      export interface UInt64Constructor {
        new(other?: UInt64): UInt64;
      }
      export interface UInt64MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: bigint[];
      }
      export interface UInt64MultiArrayConstructor {
        new(other?: UInt64MultiArray): UInt64MultiArray;
      }
      export interface UInt8 {
        data: number;
      }
      export interface UInt8Constructor {
        new(other?: UInt8): UInt8;
      }
      export interface UInt8MultiArray {
        layout: std_msgs.msg.MultiArrayLayout;
        data: number[] | Uint8Array;
      }
      export interface UInt8MultiArrayConstructor {
        new(other?: UInt8MultiArray): UInt8MultiArray;
      }
      namespace descriptor {
        export interface Bool {
          data: 'bool';
        }
        export interface BoolConstructor {
          new(other?: Bool): Bool;
        }
        export interface Byte {
          data: 'byte';
        }
        export interface ByteConstructor {
          new(other?: Byte): Byte;
        }
        export interface ByteMultiArray {
          layout: 'std_msgs/msg/MultiArrayLayout';
          data: 'byte[]';
        }
        export interface ByteMultiArrayConstructor {
          new(other?: ByteMultiArray): ByteMultiArray;
        }
        export interface Char {
          data: 'char';
        }
        export interface CharConstructor {
          new(other?: Char): Char;
        }
        export interface ColorRGBA {
          r: 'float32';
          g: 'float32';
          b: 'float32';
          a: 'float32';
        }
        export interface ColorRGBAConstructor {
          new(other?: ColorRGBA): ColorRGBA;
        }
        export interface Empty {
        }
        export interface EmptyConstructor {
          new(other?: Empty): Empty;
        }
        export interface Float32 {
          data: 'float32';
        }
        export interface Float32Constructor {
          new(other?: Float32): Float32;
        }
        export interface Float32MultiArray {
          layout: 'std_msgs/msg/MultiArrayLayout';
          data: 'float32[]';
        }
        export interface Float32MultiArrayConstructor {
          new(other?: Float32MultiArray): Float32MultiArray;
        }
        export interface Float64 {
          data: 'float64';
        }
        export interface Float64Constructor {
          new(other?: Float64): Float64;
        }
        export interface Float64MultiArray {
          layout: 'std_msgs/msg/MultiArrayLayout';
          data: 'float64[]';
        }
        export interface Float64MultiArrayConstructor {
          new(other?: Float64MultiArray): Float64MultiArray;
        }
        export interface Header {
          stamp: 'builtin_interfaces/msg/Time';
          frame_id: 'string';
        }
        export interface HeaderConstructor {
          new(other?: Header): Header;
        }
        export interface Int16 {
          data: 'int16';
        }
        export interface Int16Constructor {
          new(other?: Int16): Int16;
        }
        export interface Int16MultiArray {
          layout: 'std_msgs/msg/MultiArrayLayout';
          data: 'int16[]';
        }
        export interface Int16MultiArrayConstructor {
          new(other?: Int16MultiArray): Int16MultiArray;
        }
        export interface Int32 {
          data: 'int32';
        }
        export interface Int32Constructor {
          new(other?: Int32): Int32;
        }
        export interface Int32MultiArray {
          layout: 'std_msgs/msg/MultiArrayLayout';
          data: 'int32[]';
        }
        export interface Int32MultiArrayConstructor {
          new(other?: Int32MultiArray): Int32MultiArray;
        }
        export interface Int64 {
          data: 'int64';
        }
        export interface Int64Constructor {
          new(other?: Int64): Int64;
        }
        export interface Int64MultiArray {
          layout: 'std_msgs/msg/MultiArrayLayout';
          data: 'int64[]';
        }
        export interface Int64MultiArrayConstructor {
          new(other?: Int64MultiArray): Int64MultiArray;
        }
        export interface Int8 {
          data: 'int8';
        }
        export interface Int8Constructor {
          new(other?: Int8): Int8;
        }
        export interface Int8MultiArray {
          layout: 'std_msgs/msg/MultiArrayLayout';
          data: 'int8[]';
        }
        export interface Int8MultiArrayConstructor {
          new(other?: Int8MultiArray): Int8MultiArray;
        }
        export interface MultiArrayDimension {
          label: 'string';
          size: 'uint32';
          stride: 'uint32';
        }
        export interface MultiArrayDimensionConstructor {
          new(other?: MultiArrayDimension): MultiArrayDimension;
        }
        export interface MultiArrayLayout {
          dim: 'std_msgs/msg/MultiArrayDimension[]';
          data_offset: 'uint32';
        }
        export interface MultiArrayLayoutConstructor {
          new(other?: MultiArrayLayout): MultiArrayLayout;
        }
        export interface String {
          data: 'string';
        }
        export interface StringConstructor {
          new(other?: String): String;
        }
        export interface UInt16 {
          data: 'uint16';
        }
        export interface UInt16Constructor {
          new(other?: UInt16): UInt16;
        }
        export interface UInt16MultiArray {
          layout: 'std_msgs/msg/MultiArrayLayout';
          data: 'uint16[]';
        }
        export interface UInt16MultiArrayConstructor {
          new(other?: UInt16MultiArray): UInt16MultiArray;
        }
        export interface UInt32 {
          data: 'uint32';
        }
        export interface UInt32Constructor {
          new(other?: UInt32): UInt32;
        }
        export interface UInt32MultiArray {
          layout: 'std_msgs/msg/MultiArrayLayout';
          data: 'uint32[]';
        }
        export interface UInt32MultiArrayConstructor {
          new(other?: UInt32MultiArray): UInt32MultiArray;
        }
        export interface UInt64 {
          data: 'uint64';
        }
        export interface UInt64Constructor {
          new(other?: UInt64): UInt64;
        }
        export interface UInt64MultiArray {
          layout: 'std_msgs/msg/MultiArrayLayout';
          data: 'uint64[]';
        }
        export interface UInt64MultiArrayConstructor {
          new(other?: UInt64MultiArray): UInt64MultiArray;
        }
        export interface UInt8 {
          data: 'uint8';
        }
        export interface UInt8Constructor {
          new(other?: UInt8): UInt8;
        }
        export interface UInt8MultiArray {
          layout: 'std_msgs/msg/MultiArrayLayout';
          data: 'uint8[]';
        }
        export interface UInt8MultiArrayConstructor {
          new(other?: UInt8MultiArray): UInt8MultiArray;
        }
      }
    }
  }

  namespace std_srvs {
    namespace srv {
      export interface EmptyConstructor extends ROSService {
        readonly Request: Empty_RequestConstructor;
        readonly Response: Empty_ResponseConstructor;
      }
      export interface Empty_Request {
      }
      export interface Empty_RequestConstructor {
        new(other?: Empty_Request): Empty_Request;
      }
      export interface Empty_Response {
      }
      export interface Empty_ResponseConstructor {
        new(other?: Empty_Response): Empty_Response;
      }
      export interface SetBoolConstructor extends ROSService {
        readonly Request: SetBool_RequestConstructor;
        readonly Response: SetBool_ResponseConstructor;
      }
      export interface SetBool_Request {
        data: boolean;
      }
      export interface SetBool_RequestConstructor {
        new(other?: SetBool_Request): SetBool_Request;
      }
      export interface SetBool_Response {
        success: boolean;
        message: string;
      }
      export interface SetBool_ResponseConstructor {
        new(other?: SetBool_Response): SetBool_Response;
      }
      export interface TriggerConstructor extends ROSService {
        readonly Request: Trigger_RequestConstructor;
        readonly Response: Trigger_ResponseConstructor;
      }
      export interface Trigger_Request {
      }
      export interface Trigger_RequestConstructor {
        new(other?: Trigger_Request): Trigger_Request;
      }
      export interface Trigger_Response {
        success: boolean;
        message: string;
      }
      export interface Trigger_ResponseConstructor {
        new(other?: Trigger_Response): Trigger_Response;
      }
      namespace descriptor {
        export interface EmptyConstructor extends ROSService {
          readonly Request: Empty_RequestConstructor;
          readonly Response: Empty_ResponseConstructor;
        }
        export interface Empty_Request {
        }
        export interface Empty_RequestConstructor {
          new(other?: Empty_Request): Empty_Request;
        }
        export interface Empty_Response {
        }
        export interface Empty_ResponseConstructor {
          new(other?: Empty_Response): Empty_Response;
        }
        export interface SetBoolConstructor extends ROSService {
          readonly Request: SetBool_RequestConstructor;
          readonly Response: SetBool_ResponseConstructor;
        }
        export interface SetBool_Request {
          data: 'bool';
        }
        export interface SetBool_RequestConstructor {
          new(other?: SetBool_Request): SetBool_Request;
        }
        export interface SetBool_Response {
          success: 'bool';
          message: 'string';
        }
        export interface SetBool_ResponseConstructor {
          new(other?: SetBool_Response): SetBool_Response;
        }
        export interface TriggerConstructor extends ROSService {
          readonly Request: Trigger_RequestConstructor;
          readonly Response: Trigger_ResponseConstructor;
        }
        export interface Trigger_Request {
        }
        export interface Trigger_RequestConstructor {
          new(other?: Trigger_Request): Trigger_Request;
        }
        export interface Trigger_Response {
          success: 'bool';
          message: 'string';
        }
        export interface Trigger_ResponseConstructor {
          new(other?: Trigger_Response): Trigger_Response;
        }
      }
    }
  }

  namespace stereo_msgs {
    namespace msg {
      export interface DisparityImage {
        header: std_msgs.msg.Header;
        image: sensor_msgs.msg.Image;
        f: number;
        t: number;
        valid_window: sensor_msgs.msg.RegionOfInterest;
        min_disparity: number;
        max_disparity: number;
        delta_d: number;
      }
      export interface DisparityImageConstructor {
        new(other?: DisparityImage): DisparityImage;
      }
      namespace descriptor {
        export interface DisparityImage {
          header: 'std_msgs/msg/Header';
          image: 'sensor_msgs/msg/Image';
          f: 'float32';
          t: 'float32';
          valid_window: 'sensor_msgs/msg/RegionOfInterest';
          min_disparity: 'float32';
          max_disparity: 'float32';
          delta_d: 'float32';
        }
        export interface DisparityImageConstructor {
          new(other?: DisparityImage): DisparityImage;
        }
      }
    }
  }

  namespace test_msgs {
    namespace action {
      export interface FibonacciConstructor {
        readonly Goal: Fibonacci_GoalConstructor;
        readonly Result: Fibonacci_ResultConstructor;
        readonly Feedback: Fibonacci_FeedbackConstructor;
      }
      export interface Fibonacci_Feedback {
        sequence: number[] | Int32Array;
      }
      export interface Fibonacci_FeedbackConstructor {
        new(other?: Fibonacci_Feedback): Fibonacci_Feedback;
      }
      export interface Fibonacci_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: test_msgs.action.Fibonacci_Feedback;
      }
      export interface Fibonacci_FeedbackMessageConstructor {
        new(other?: Fibonacci_FeedbackMessage): Fibonacci_FeedbackMessage;
      }
      export interface Fibonacci_GetResultConstructor extends ROSService {
        readonly Request: Fibonacci_GetResult_RequestConstructor;
        readonly Response: Fibonacci_GetResult_ResponseConstructor;
      }
      export interface Fibonacci_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface Fibonacci_GetResult_RequestConstructor {
        new(other?: Fibonacci_GetResult_Request): Fibonacci_GetResult_Request;
      }
      export interface Fibonacci_GetResult_Response {
        status: number;
        result: test_msgs.action.Fibonacci_Result;
      }
      export interface Fibonacci_GetResult_ResponseConstructor {
        new(other?: Fibonacci_GetResult_Response): Fibonacci_GetResult_Response;
      }
      export interface Fibonacci_Goal {
        order: number;
      }
      export interface Fibonacci_GoalConstructor {
        new(other?: Fibonacci_Goal): Fibonacci_Goal;
      }
      export interface Fibonacci_Result {
        sequence: number[] | Int32Array;
      }
      export interface Fibonacci_ResultConstructor {
        new(other?: Fibonacci_Result): Fibonacci_Result;
      }
      export interface Fibonacci_SendGoalConstructor extends ROSService {
        readonly Request: Fibonacci_SendGoal_RequestConstructor;
        readonly Response: Fibonacci_SendGoal_ResponseConstructor;
      }
      export interface Fibonacci_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: test_msgs.action.Fibonacci_Goal;
      }
      export interface Fibonacci_SendGoal_RequestConstructor {
        new(other?: Fibonacci_SendGoal_Request): Fibonacci_SendGoal_Request;
      }
      export interface Fibonacci_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface Fibonacci_SendGoal_ResponseConstructor {
        new(other?: Fibonacci_SendGoal_Response): Fibonacci_SendGoal_Response;
      }
      export interface NestedMessageConstructor {
        readonly Goal: NestedMessage_GoalConstructor;
        readonly Result: NestedMessage_ResultConstructor;
        readonly Feedback: NestedMessage_FeedbackConstructor;
      }
      export interface NestedMessage_Feedback {
        nested_field_no_pkg: test_msgs.msg.Builtins;
        nested_field: test_msgs.msg.BasicTypes;
        nested_different_pkg: builtin_interfaces.msg.Time;
      }
      export interface NestedMessage_FeedbackConstructor {
        new(other?: NestedMessage_Feedback): NestedMessage_Feedback;
      }
      export interface NestedMessage_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: test_msgs.action.NestedMessage_Feedback;
      }
      export interface NestedMessage_FeedbackMessageConstructor {
        new(other?: NestedMessage_FeedbackMessage): NestedMessage_FeedbackMessage;
      }
      export interface NestedMessage_GetResultConstructor extends ROSService {
        readonly Request: NestedMessage_GetResult_RequestConstructor;
        readonly Response: NestedMessage_GetResult_ResponseConstructor;
      }
      export interface NestedMessage_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface NestedMessage_GetResult_RequestConstructor {
        new(other?: NestedMessage_GetResult_Request): NestedMessage_GetResult_Request;
      }
      export interface NestedMessage_GetResult_Response {
        status: number;
        result: test_msgs.action.NestedMessage_Result;
      }
      export interface NestedMessage_GetResult_ResponseConstructor {
        new(other?: NestedMessage_GetResult_Response): NestedMessage_GetResult_Response;
      }
      export interface NestedMessage_Goal {
        nested_field_no_pkg: test_msgs.msg.Builtins;
        nested_field: test_msgs.msg.BasicTypes;
        nested_different_pkg: builtin_interfaces.msg.Time;
      }
      export interface NestedMessage_GoalConstructor {
        new(other?: NestedMessage_Goal): NestedMessage_Goal;
      }
      export interface NestedMessage_Result {
        nested_field_no_pkg: test_msgs.msg.Builtins;
        nested_field: test_msgs.msg.BasicTypes;
        nested_different_pkg: builtin_interfaces.msg.Time;
      }
      export interface NestedMessage_ResultConstructor {
        new(other?: NestedMessage_Result): NestedMessage_Result;
      }
      export interface NestedMessage_SendGoalConstructor extends ROSService {
        readonly Request: NestedMessage_SendGoal_RequestConstructor;
        readonly Response: NestedMessage_SendGoal_ResponseConstructor;
      }
      export interface NestedMessage_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: test_msgs.action.NestedMessage_Goal;
      }
      export interface NestedMessage_SendGoal_RequestConstructor {
        new(other?: NestedMessage_SendGoal_Request): NestedMessage_SendGoal_Request;
      }
      export interface NestedMessage_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface NestedMessage_SendGoal_ResponseConstructor {
        new(other?: NestedMessage_SendGoal_Response): NestedMessage_SendGoal_Response;
      }
      namespace descriptor {
        export interface FibonacciConstructor {
          readonly Goal: Fibonacci_GoalConstructor;
          readonly Result: Fibonacci_ResultConstructor;
          readonly Feedback: Fibonacci_FeedbackConstructor;
        }
        export interface Fibonacci_Feedback {
          sequence: 'int32[]';
        }
        export interface Fibonacci_FeedbackConstructor {
          new(other?: Fibonacci_Feedback): Fibonacci_Feedback;
        }
        export interface Fibonacci_FeedbackMessage {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          feedback: 'test_msgs/action/Fibonacci_Feedback';
        }
        export interface Fibonacci_FeedbackMessageConstructor {
          new(other?: Fibonacci_FeedbackMessage): Fibonacci_FeedbackMessage;
        }
        export interface Fibonacci_GetResultConstructor extends ROSService {
          readonly Request: Fibonacci_GetResult_RequestConstructor;
          readonly Response: Fibonacci_GetResult_ResponseConstructor;
        }
        export interface Fibonacci_GetResult_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
        }
        export interface Fibonacci_GetResult_RequestConstructor {
          new(other?: Fibonacci_GetResult_Request): Fibonacci_GetResult_Request;
        }
        export interface Fibonacci_GetResult_Response {
          status: 'int8';
          result: 'test_msgs/action/Fibonacci_Result';
        }
        export interface Fibonacci_GetResult_ResponseConstructor {
          new(other?: Fibonacci_GetResult_Response): Fibonacci_GetResult_Response;
        }
        export interface Fibonacci_Goal {
          order: 'int32';
        }
        export interface Fibonacci_GoalConstructor {
          new(other?: Fibonacci_Goal): Fibonacci_Goal;
        }
        export interface Fibonacci_Result {
          sequence: 'int32[]';
        }
        export interface Fibonacci_ResultConstructor {
          new(other?: Fibonacci_Result): Fibonacci_Result;
        }
        export interface Fibonacci_SendGoalConstructor extends ROSService {
          readonly Request: Fibonacci_SendGoal_RequestConstructor;
          readonly Response: Fibonacci_SendGoal_ResponseConstructor;
        }
        export interface Fibonacci_SendGoal_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          goal: 'test_msgs/action/Fibonacci_Goal';
        }
        export interface Fibonacci_SendGoal_RequestConstructor {
          new(other?: Fibonacci_SendGoal_Request): Fibonacci_SendGoal_Request;
        }
        export interface Fibonacci_SendGoal_Response {
          accepted: 'bool';
          stamp: 'builtin_interfaces/msg/Time';
        }
        export interface Fibonacci_SendGoal_ResponseConstructor {
          new(other?: Fibonacci_SendGoal_Response): Fibonacci_SendGoal_Response;
        }
        export interface NestedMessageConstructor {
          readonly Goal: NestedMessage_GoalConstructor;
          readonly Result: NestedMessage_ResultConstructor;
          readonly Feedback: NestedMessage_FeedbackConstructor;
        }
        export interface NestedMessage_Feedback {
          nested_field_no_pkg: 'test_msgs/msg/Builtins';
          nested_field: 'test_msgs/msg/BasicTypes';
          nested_different_pkg: 'builtin_interfaces/msg/Time';
        }
        export interface NestedMessage_FeedbackConstructor {
          new(other?: NestedMessage_Feedback): NestedMessage_Feedback;
        }
        export interface NestedMessage_FeedbackMessage {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          feedback: 'test_msgs/action/NestedMessage_Feedback';
        }
        export interface NestedMessage_FeedbackMessageConstructor {
          new(other?: NestedMessage_FeedbackMessage): NestedMessage_FeedbackMessage;
        }
        export interface NestedMessage_GetResultConstructor extends ROSService {
          readonly Request: NestedMessage_GetResult_RequestConstructor;
          readonly Response: NestedMessage_GetResult_ResponseConstructor;
        }
        export interface NestedMessage_GetResult_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
        }
        export interface NestedMessage_GetResult_RequestConstructor {
          new(other?: NestedMessage_GetResult_Request): NestedMessage_GetResult_Request;
        }
        export interface NestedMessage_GetResult_Response {
          status: 'int8';
          result: 'test_msgs/action/NestedMessage_Result';
        }
        export interface NestedMessage_GetResult_ResponseConstructor {
          new(other?: NestedMessage_GetResult_Response): NestedMessage_GetResult_Response;
        }
        export interface NestedMessage_Goal {
          nested_field_no_pkg: 'test_msgs/msg/Builtins';
          nested_field: 'test_msgs/msg/BasicTypes';
          nested_different_pkg: 'builtin_interfaces/msg/Time';
        }
        export interface NestedMessage_GoalConstructor {
          new(other?: NestedMessage_Goal): NestedMessage_Goal;
        }
        export interface NestedMessage_Result {
          nested_field_no_pkg: 'test_msgs/msg/Builtins';
          nested_field: 'test_msgs/msg/BasicTypes';
          nested_different_pkg: 'builtin_interfaces/msg/Time';
        }
        export interface NestedMessage_ResultConstructor {
          new(other?: NestedMessage_Result): NestedMessage_Result;
        }
        export interface NestedMessage_SendGoalConstructor extends ROSService {
          readonly Request: NestedMessage_SendGoal_RequestConstructor;
          readonly Response: NestedMessage_SendGoal_ResponseConstructor;
        }
        export interface NestedMessage_SendGoal_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          goal: 'test_msgs/action/NestedMessage_Goal';
        }
        export interface NestedMessage_SendGoal_RequestConstructor {
          new(other?: NestedMessage_SendGoal_Request): NestedMessage_SendGoal_Request;
        }
        export interface NestedMessage_SendGoal_Response {
          accepted: 'bool';
          stamp: 'builtin_interfaces/msg/Time';
        }
        export interface NestedMessage_SendGoal_ResponseConstructor {
          new(other?: NestedMessage_SendGoal_Response): NestedMessage_SendGoal_Response;
        }
      }
    }
    namespace msg {
      export interface Arrays {
        bool_values: boolean[];
        byte_values: number[] | Uint8Array;
        char_values: number[] | Int8Array;
        float32_values: number[] | Float32Array;
        float64_values: number[] | Float64Array;
        int8_values: number[] | Int8Array;
        uint8_values: number[] | Uint8Array;
        int16_values: number[] | Int16Array;
        uint16_values: number[] | Uint16Array;
        int32_values: number[] | Int32Array;
        uint32_values: number[] | Uint32Array;
        int64_values: bigint[];
        uint64_values: bigint[];
        string_values: string[];
        basic_types_values: test_msgs.msg.BasicTypes[];
        constants_values: test_msgs.msg.Constants[];
        defaults_values: test_msgs.msg.Defaults[];
        bool_values_default: boolean[];
        byte_values_default: number[] | Uint8Array;
        char_values_default: number[] | Int8Array;
        float32_values_default: number[] | Float32Array;
        float64_values_default: number[] | Float64Array;
        int8_values_default: number[] | Int8Array;
        uint8_values_default: number[] | Uint8Array;
        int16_values_default: number[] | Int16Array;
        uint16_values_default: number[] | Uint16Array;
        int32_values_default: number[] | Int32Array;
        uint32_values_default: number[] | Uint32Array;
        int64_values_default: bigint[];
        uint64_values_default: bigint[];
        string_values_default: string[];
        alignment_check: number;
      }
      export interface ArraysConstructor {
        new(other?: Arrays): Arrays;
      }
      export interface BasicTypes {
        bool_value: boolean;
        byte_value: number;
        char_value: number;
        float32_value: number;
        float64_value: number;
        int8_value: number;
        uint8_value: number;
        int16_value: number;
        uint16_value: number;
        int32_value: number;
        uint32_value: number;
        int64_value: bigint;
        uint64_value: bigint;
      }
      export interface BasicTypesConstructor {
        new(other?: BasicTypes): BasicTypes;
      }
      export interface BoundedPlainSequences {
        bool_values: boolean[];
        byte_values: number[] | Uint8Array;
        char_values: number[] | Int8Array;
        float32_values: number[] | Float32Array;
        float64_values: number[] | Float64Array;
        int8_values: number[] | Int8Array;
        uint8_values: number[] | Uint8Array;
        int16_values: number[] | Int16Array;
        uint16_values: number[] | Uint16Array;
        int32_values: number[] | Int32Array;
        uint32_values: number[] | Uint32Array;
        int64_values: bigint[];
        uint64_values: bigint[];
        basic_types_values: test_msgs.msg.BasicTypes[];
        constants_values: test_msgs.msg.Constants[];
        defaults_values: test_msgs.msg.Defaults[];
        bool_values_default: boolean[];
        byte_values_default: number[] | Uint8Array;
        char_values_default: number[] | Int8Array;
        float32_values_default: number[] | Float32Array;
        float64_values_default: number[] | Float64Array;
        int8_values_default: number[] | Int8Array;
        uint8_values_default: number[] | Uint8Array;
        int16_values_default: number[] | Int16Array;
        uint16_values_default: number[] | Uint16Array;
        int32_values_default: number[] | Int32Array;
        uint32_values_default: number[] | Uint32Array;
        int64_values_default: bigint[];
        uint64_values_default: bigint[];
        alignment_check: number;
      }
      export interface BoundedPlainSequencesConstructor {
        new(other?: BoundedPlainSequences): BoundedPlainSequences;
      }
      export interface BoundedSequences {
        bool_values: boolean[];
        byte_values: number[] | Uint8Array;
        char_values: number[] | Int8Array;
        float32_values: number[] | Float32Array;
        float64_values: number[] | Float64Array;
        int8_values: number[] | Int8Array;
        uint8_values: number[] | Uint8Array;
        int16_values: number[] | Int16Array;
        uint16_values: number[] | Uint16Array;
        int32_values: number[] | Int32Array;
        uint32_values: number[] | Uint32Array;
        int64_values: bigint[];
        uint64_values: bigint[];
        string_values: string[];
        basic_types_values: test_msgs.msg.BasicTypes[];
        constants_values: test_msgs.msg.Constants[];
        defaults_values: test_msgs.msg.Defaults[];
        bool_values_default: boolean[];
        byte_values_default: number[] | Uint8Array;
        char_values_default: number[] | Int8Array;
        float32_values_default: number[] | Float32Array;
        float64_values_default: number[] | Float64Array;
        int8_values_default: number[] | Int8Array;
        uint8_values_default: number[] | Uint8Array;
        int16_values_default: number[] | Int16Array;
        uint16_values_default: number[] | Uint16Array;
        int32_values_default: number[] | Int32Array;
        uint32_values_default: number[] | Uint32Array;
        int64_values_default: bigint[];
        uint64_values_default: bigint[];
        string_values_default: string[];
        alignment_check: number;
      }
      export interface BoundedSequencesConstructor {
        new(other?: BoundedSequences): BoundedSequences;
      }
      export interface Builtins {
        duration_value: builtin_interfaces.msg.Duration;
        time_value: builtin_interfaces.msg.Time;
      }
      export interface BuiltinsConstructor {
        new(other?: Builtins): Builtins;
      }
      export interface Constants {
      }
      export interface ConstantsConstructor {
        readonly BOOL_CONST: boolean;
        readonly BYTE_CONST: number;
        readonly CHAR_CONST: number;
        readonly FLOAT32_CONST: number;
        readonly FLOAT64_CONST: number;
        readonly INT8_CONST: number;
        readonly UINT8_CONST: number;
        readonly INT16_CONST: number;
        readonly UINT16_CONST: number;
        readonly INT32_CONST: number;
        readonly UINT32_CONST: number;
        readonly INT64_CONST: bigint;
        readonly UINT64_CONST: bigint;
        new(other?: Constants): Constants;
      }
      export interface Defaults {
        bool_value: boolean;
        byte_value: number;
        char_value: number;
        float32_value: number;
        float64_value: number;
        int8_value: number;
        uint8_value: number;
        int16_value: number;
        uint16_value: number;
        int32_value: number;
        uint32_value: number;
        int64_value: bigint;
        uint64_value: bigint;
      }
      export interface DefaultsConstructor {
        new(other?: Defaults): Defaults;
      }
      export interface Empty {
      }
      export interface EmptyConstructor {
        new(other?: Empty): Empty;
      }
      export interface MultiNested {
        array_of_arrays: test_msgs.msg.Arrays[];
        array_of_bounded_sequences: test_msgs.msg.BoundedSequences[];
        array_of_unbounded_sequences: test_msgs.msg.UnboundedSequences[];
        bounded_sequence_of_arrays: test_msgs.msg.Arrays[];
        bounded_sequence_of_bounded_sequences: test_msgs.msg.BoundedSequences[];
        bounded_sequence_of_unbounded_sequences: test_msgs.msg.UnboundedSequences[];
        unbounded_sequence_of_arrays: test_msgs.msg.Arrays[];
        unbounded_sequence_of_bounded_sequences: test_msgs.msg.BoundedSequences[];
        unbounded_sequence_of_unbounded_sequences: test_msgs.msg.UnboundedSequences[];
      }
      export interface MultiNestedConstructor {
        new(other?: MultiNested): MultiNested;
      }
      export interface Nested {
        basic_types_value: test_msgs.msg.BasicTypes;
      }
      export interface NestedConstructor {
        new(other?: Nested): Nested;
      }
      export interface Strings {
        string_value: string;
        string_value_default1: string;
        string_value_default2: string;
        string_value_default3: string;
        string_value_default4: string;
        string_value_default5: string;
        bounded_string_value: string;
        bounded_string_value_default1: string;
        bounded_string_value_default2: string;
        bounded_string_value_default3: string;
        bounded_string_value_default4: string;
        bounded_string_value_default5: string;
      }
      export interface StringsConstructor {
        readonly STRING_CONST: string;
        new(other?: Strings): Strings;
      }
      export interface UnboundedSequences {
        bool_values: boolean[];
        byte_values: number[] | Uint8Array;
        char_values: number[] | Int8Array;
        float32_values: number[] | Float32Array;
        float64_values: number[] | Float64Array;
        int8_values: number[] | Int8Array;
        uint8_values: number[] | Uint8Array;
        int16_values: number[] | Int16Array;
        uint16_values: number[] | Uint16Array;
        int32_values: number[] | Int32Array;
        uint32_values: number[] | Uint32Array;
        int64_values: bigint[];
        uint64_values: bigint[];
        string_values: string[];
        basic_types_values: test_msgs.msg.BasicTypes[];
        constants_values: test_msgs.msg.Constants[];
        defaults_values: test_msgs.msg.Defaults[];
        bool_values_default: boolean[];
        byte_values_default: number[] | Uint8Array;
        char_values_default: number[] | Int8Array;
        float32_values_default: number[] | Float32Array;
        float64_values_default: number[] | Float64Array;
        int8_values_default: number[] | Int8Array;
        uint8_values_default: number[] | Uint8Array;
        int16_values_default: number[] | Int16Array;
        uint16_values_default: number[] | Uint16Array;
        int32_values_default: number[] | Int32Array;
        uint32_values_default: number[] | Uint32Array;
        int64_values_default: bigint[];
        uint64_values_default: bigint[];
        string_values_default: string[];
        alignment_check: number;
      }
      export interface UnboundedSequencesConstructor {
        new(other?: UnboundedSequences): UnboundedSequences;
      }
      export interface WStrings {
        wstring_value: string;
        wstring_value_default1: string;
        wstring_value_default2: string;
        wstring_value_default3: string;
        array_of_wstrings: string[];
        bounded_sequence_of_wstrings: string[];
        unbounded_sequence_of_wstrings: string[];
      }
      export interface WStringsConstructor {
        new(other?: WStrings): WStrings;
      }
      namespace descriptor {
        export interface Arrays {
          bool_values: 'bool[3]';
          byte_values: 'byte[3]';
          char_values: 'char[3]';
          float32_values: 'float32[3]';
          float64_values: 'float64[3]';
          int8_values: 'int8[3]';
          uint8_values: 'uint8[3]';
          int16_values: 'int16[3]';
          uint16_values: 'uint16[3]';
          int32_values: 'int32[3]';
          uint32_values: 'uint32[3]';
          int64_values: 'int64[3]';
          uint64_values: 'uint64[3]';
          string_values: 'string[3]';
          basic_types_values: 'test_msgs/msg/BasicTypes[3]';
          constants_values: 'test_msgs/msg/Constants[3]';
          defaults_values: 'test_msgs/msg/Defaults[3]';
          bool_values_default: 'bool[3]';
          byte_values_default: 'byte[3]';
          char_values_default: 'char[3]';
          float32_values_default: 'float32[3]';
          float64_values_default: 'float64[3]';
          int8_values_default: 'int8[3]';
          uint8_values_default: 'uint8[3]';
          int16_values_default: 'int16[3]';
          uint16_values_default: 'uint16[3]';
          int32_values_default: 'int32[3]';
          uint32_values_default: 'uint32[3]';
          int64_values_default: 'int64[3]';
          uint64_values_default: 'uint64[3]';
          string_values_default: 'string[3]';
          alignment_check: 'int32';
        }
        export interface ArraysConstructor {
          new(other?: Arrays): Arrays;
        }
        export interface BasicTypes {
          bool_value: 'bool';
          byte_value: 'byte';
          char_value: 'char';
          float32_value: 'float32';
          float64_value: 'float64';
          int8_value: 'int8';
          uint8_value: 'uint8';
          int16_value: 'int16';
          uint16_value: 'uint16';
          int32_value: 'int32';
          uint32_value: 'uint32';
          int64_value: 'int64';
          uint64_value: 'uint64';
        }
        export interface BasicTypesConstructor {
          new(other?: BasicTypes): BasicTypes;
        }
        export interface BoundedPlainSequences {
          bool_values: 'bool[]';
          byte_values: 'byte[]';
          char_values: 'char[]';
          float32_values: 'float32[]';
          float64_values: 'float64[]';
          int8_values: 'int8[]';
          uint8_values: 'uint8[]';
          int16_values: 'int16[]';
          uint16_values: 'uint16[]';
          int32_values: 'int32[]';
          uint32_values: 'uint32[]';
          int64_values: 'int64[]';
          uint64_values: 'uint64[]';
          basic_types_values: 'test_msgs/msg/BasicTypes[]';
          constants_values: 'test_msgs/msg/Constants[]';
          defaults_values: 'test_msgs/msg/Defaults[]';
          bool_values_default: 'bool[]';
          byte_values_default: 'byte[]';
          char_values_default: 'char[]';
          float32_values_default: 'float32[]';
          float64_values_default: 'float64[]';
          int8_values_default: 'int8[]';
          uint8_values_default: 'uint8[]';
          int16_values_default: 'int16[]';
          uint16_values_default: 'uint16[]';
          int32_values_default: 'int32[]';
          uint32_values_default: 'uint32[]';
          int64_values_default: 'int64[]';
          uint64_values_default: 'uint64[]';
          alignment_check: 'int32';
        }
        export interface BoundedPlainSequencesConstructor {
          new(other?: BoundedPlainSequences): BoundedPlainSequences;
        }
        export interface BoundedSequences {
          bool_values: 'bool[]';
          byte_values: 'byte[]';
          char_values: 'char[]';
          float32_values: 'float32[]';
          float64_values: 'float64[]';
          int8_values: 'int8[]';
          uint8_values: 'uint8[]';
          int16_values: 'int16[]';
          uint16_values: 'uint16[]';
          int32_values: 'int32[]';
          uint32_values: 'uint32[]';
          int64_values: 'int64[]';
          uint64_values: 'uint64[]';
          string_values: 'string[]';
          basic_types_values: 'test_msgs/msg/BasicTypes[]';
          constants_values: 'test_msgs/msg/Constants[]';
          defaults_values: 'test_msgs/msg/Defaults[]';
          bool_values_default: 'bool[]';
          byte_values_default: 'byte[]';
          char_values_default: 'char[]';
          float32_values_default: 'float32[]';
          float64_values_default: 'float64[]';
          int8_values_default: 'int8[]';
          uint8_values_default: 'uint8[]';
          int16_values_default: 'int16[]';
          uint16_values_default: 'uint16[]';
          int32_values_default: 'int32[]';
          uint32_values_default: 'uint32[]';
          int64_values_default: 'int64[]';
          uint64_values_default: 'uint64[]';
          string_values_default: 'string[]';
          alignment_check: 'int32';
        }
        export interface BoundedSequencesConstructor {
          new(other?: BoundedSequences): BoundedSequences;
        }
        export interface Builtins {
          duration_value: 'builtin_interfaces/msg/Duration';
          time_value: 'builtin_interfaces/msg/Time';
        }
        export interface BuiltinsConstructor {
          new(other?: Builtins): Builtins;
        }
        export interface Constants {
        }
        export interface ConstantsConstructor {
          readonly BOOL_CONST: boolean;
          readonly BYTE_CONST: number;
          readonly CHAR_CONST: number;
          readonly FLOAT32_CONST: number;
          readonly FLOAT64_CONST: number;
          readonly INT8_CONST: number;
          readonly UINT8_CONST: number;
          readonly INT16_CONST: number;
          readonly UINT16_CONST: number;
          readonly INT32_CONST: number;
          readonly UINT32_CONST: number;
          readonly INT64_CONST: bigint;
          readonly UINT64_CONST: bigint;
          new(other?: Constants): Constants;
        }
        export interface Defaults {
          bool_value: 'bool';
          byte_value: 'byte';
          char_value: 'char';
          float32_value: 'float32';
          float64_value: 'float64';
          int8_value: 'int8';
          uint8_value: 'uint8';
          int16_value: 'int16';
          uint16_value: 'uint16';
          int32_value: 'int32';
          uint32_value: 'uint32';
          int64_value: 'int64';
          uint64_value: 'uint64';
        }
        export interface DefaultsConstructor {
          new(other?: Defaults): Defaults;
        }
        export interface Empty {
        }
        export interface EmptyConstructor {
          new(other?: Empty): Empty;
        }
        export interface MultiNested {
          array_of_arrays: 'test_msgs/msg/Arrays[3]';
          array_of_bounded_sequences: 'test_msgs/msg/BoundedSequences[3]';
          array_of_unbounded_sequences: 'test_msgs/msg/UnboundedSequences[3]';
          bounded_sequence_of_arrays: 'test_msgs/msg/Arrays[]';
          bounded_sequence_of_bounded_sequences: 'test_msgs/msg/BoundedSequences[]';
          bounded_sequence_of_unbounded_sequences: 'test_msgs/msg/UnboundedSequences[]';
          unbounded_sequence_of_arrays: 'test_msgs/msg/Arrays[]';
          unbounded_sequence_of_bounded_sequences: 'test_msgs/msg/BoundedSequences[]';
          unbounded_sequence_of_unbounded_sequences: 'test_msgs/msg/UnboundedSequences[]';
        }
        export interface MultiNestedConstructor {
          new(other?: MultiNested): MultiNested;
        }
        export interface Nested {
          basic_types_value: 'test_msgs/msg/BasicTypes';
        }
        export interface NestedConstructor {
          new(other?: Nested): Nested;
        }
        export interface Strings {
          string_value: 'string';
          string_value_default1: 'string';
          string_value_default2: 'string';
          string_value_default3: 'string';
          string_value_default4: 'string';
          string_value_default5: 'string';
          bounded_string_value: 'string';
          bounded_string_value_default1: 'string';
          bounded_string_value_default2: 'string';
          bounded_string_value_default3: 'string';
          bounded_string_value_default4: 'string';
          bounded_string_value_default5: 'string';
        }
        export interface StringsConstructor {
          readonly STRING_CONST: string;
          new(other?: Strings): Strings;
        }
        export interface UnboundedSequences {
          bool_values: 'bool[]';
          byte_values: 'byte[]';
          char_values: 'char[]';
          float32_values: 'float32[]';
          float64_values: 'float64[]';
          int8_values: 'int8[]';
          uint8_values: 'uint8[]';
          int16_values: 'int16[]';
          uint16_values: 'uint16[]';
          int32_values: 'int32[]';
          uint32_values: 'uint32[]';
          int64_values: 'int64[]';
          uint64_values: 'uint64[]';
          string_values: 'string[]';
          basic_types_values: 'test_msgs/msg/BasicTypes[]';
          constants_values: 'test_msgs/msg/Constants[]';
          defaults_values: 'test_msgs/msg/Defaults[]';
          bool_values_default: 'bool[]';
          byte_values_default: 'byte[]';
          char_values_default: 'char[]';
          float32_values_default: 'float32[]';
          float64_values_default: 'float64[]';
          int8_values_default: 'int8[]';
          uint8_values_default: 'uint8[]';
          int16_values_default: 'int16[]';
          uint16_values_default: 'uint16[]';
          int32_values_default: 'int32[]';
          uint32_values_default: 'uint32[]';
          int64_values_default: 'int64[]';
          uint64_values_default: 'uint64[]';
          string_values_default: 'string[]';
          alignment_check: 'int32';
        }
        export interface UnboundedSequencesConstructor {
          new(other?: UnboundedSequences): UnboundedSequences;
        }
        export interface WStrings {
          wstring_value: 'wstring';
          wstring_value_default1: 'wstring';
          wstring_value_default2: 'wstring';
          wstring_value_default3: 'wstring';
          array_of_wstrings: 'wstring[3]';
          bounded_sequence_of_wstrings: 'wstring[]';
          unbounded_sequence_of_wstrings: 'wstring[]';
        }
        export interface WStringsConstructor {
          new(other?: WStrings): WStrings;
        }
      }
    }
    namespace srv {
      export interface ArraysConstructor extends ROSService {
        readonly Request: Arrays_RequestConstructor;
        readonly Response: Arrays_ResponseConstructor;
      }
      export interface Arrays_Request {
        bool_values: boolean[];
        byte_values: number[] | Uint8Array;
        char_values: number[] | Int8Array;
        float32_values: number[] | Float32Array;
        float64_values: number[] | Float64Array;
        int8_values: number[] | Int8Array;
        uint8_values: number[] | Uint8Array;
        int16_values: number[] | Int16Array;
        uint16_values: number[] | Uint16Array;
        int32_values: number[] | Int32Array;
        uint32_values: number[] | Uint32Array;
        int64_values: bigint[];
        uint64_values: bigint[];
        string_values: string[];
        basic_types_values: test_msgs.msg.BasicTypes[];
        constants_values: test_msgs.msg.Constants[];
        defaults_values: test_msgs.msg.Defaults[];
        bool_values_default: boolean[];
        byte_values_default: number[] | Uint8Array;
        char_values_default: number[] | Int8Array;
        float32_values_default: number[] | Float32Array;
        float64_values_default: number[] | Float64Array;
        int8_values_default: number[] | Int8Array;
        uint8_values_default: number[] | Uint8Array;
        int16_values_default: number[] | Int16Array;
        uint16_values_default: number[] | Uint16Array;
        int32_values_default: number[] | Int32Array;
        uint32_values_default: number[] | Uint32Array;
        int64_values_default: bigint[];
        uint64_values_default: bigint[];
        string_values_default: string[];
      }
      export interface Arrays_RequestConstructor {
        new(other?: Arrays_Request): Arrays_Request;
      }
      export interface Arrays_Response {
        bool_values: boolean[];
        byte_values: number[] | Uint8Array;
        char_values: number[] | Int8Array;
        float32_values: number[] | Float32Array;
        float64_values: number[] | Float64Array;
        int8_values: number[] | Int8Array;
        uint8_values: number[] | Uint8Array;
        int16_values: number[] | Int16Array;
        uint16_values: number[] | Uint16Array;
        int32_values: number[] | Int32Array;
        uint32_values: number[] | Uint32Array;
        int64_values: bigint[];
        uint64_values: bigint[];
        string_values: string[];
        basic_types_values: test_msgs.msg.BasicTypes[];
        constants_values: test_msgs.msg.Constants[];
        defaults_values: test_msgs.msg.Defaults[];
        bool_values_default: boolean[];
        byte_values_default: number[] | Uint8Array;
        char_values_default: number[] | Int8Array;
        float32_values_default: number[] | Float32Array;
        float64_values_default: number[] | Float64Array;
        int8_values_default: number[] | Int8Array;
        uint8_values_default: number[] | Uint8Array;
        int16_values_default: number[] | Int16Array;
        uint16_values_default: number[] | Uint16Array;
        int32_values_default: number[] | Int32Array;
        uint32_values_default: number[] | Uint32Array;
        int64_values_default: bigint[];
        uint64_values_default: bigint[];
        string_values_default: string[];
      }
      export interface Arrays_ResponseConstructor {
        new(other?: Arrays_Response): Arrays_Response;
      }
      export interface BasicTypesConstructor extends ROSService {
        readonly Request: BasicTypes_RequestConstructor;
        readonly Response: BasicTypes_ResponseConstructor;
      }
      export interface BasicTypes_Request {
        bool_value: boolean;
        byte_value: number;
        char_value: number;
        float32_value: number;
        float64_value: number;
        int8_value: number;
        uint8_value: number;
        int16_value: number;
        uint16_value: number;
        int32_value: number;
        uint32_value: number;
        int64_value: bigint;
        uint64_value: bigint;
        string_value: string;
      }
      export interface BasicTypes_RequestConstructor {
        new(other?: BasicTypes_Request): BasicTypes_Request;
      }
      export interface BasicTypes_Response {
        bool_value: boolean;
        byte_value: number;
        char_value: number;
        float32_value: number;
        float64_value: number;
        int8_value: number;
        uint8_value: number;
        int16_value: number;
        uint16_value: number;
        int32_value: number;
        uint32_value: number;
        int64_value: bigint;
        uint64_value: bigint;
        string_value: string;
      }
      export interface BasicTypes_ResponseConstructor {
        new(other?: BasicTypes_Response): BasicTypes_Response;
      }
      export interface EmptyConstructor extends ROSService {
        readonly Request: Empty_RequestConstructor;
        readonly Response: Empty_ResponseConstructor;
      }
      export interface Empty_Request {
      }
      export interface Empty_RequestConstructor {
        new(other?: Empty_Request): Empty_Request;
      }
      export interface Empty_Response {
      }
      export interface Empty_ResponseConstructor {
        new(other?: Empty_Response): Empty_Response;
      }
      namespace descriptor {
        export interface ArraysConstructor extends ROSService {
          readonly Request: Arrays_RequestConstructor;
          readonly Response: Arrays_ResponseConstructor;
        }
        export interface Arrays_Request {
          bool_values: 'bool[3]';
          byte_values: 'byte[3]';
          char_values: 'char[3]';
          float32_values: 'float32[3]';
          float64_values: 'float64[3]';
          int8_values: 'int8[3]';
          uint8_values: 'uint8[3]';
          int16_values: 'int16[3]';
          uint16_values: 'uint16[3]';
          int32_values: 'int32[3]';
          uint32_values: 'uint32[3]';
          int64_values: 'int64[3]';
          uint64_values: 'uint64[3]';
          string_values: 'string[3]';
          basic_types_values: 'test_msgs/msg/BasicTypes[3]';
          constants_values: 'test_msgs/msg/Constants[3]';
          defaults_values: 'test_msgs/msg/Defaults[3]';
          bool_values_default: 'bool[3]';
          byte_values_default: 'byte[3]';
          char_values_default: 'char[3]';
          float32_values_default: 'float32[3]';
          float64_values_default: 'float64[3]';
          int8_values_default: 'int8[3]';
          uint8_values_default: 'uint8[3]';
          int16_values_default: 'int16[3]';
          uint16_values_default: 'uint16[3]';
          int32_values_default: 'int32[3]';
          uint32_values_default: 'uint32[3]';
          int64_values_default: 'int64[3]';
          uint64_values_default: 'uint64[3]';
          string_values_default: 'string[3]';
        }
        export interface Arrays_RequestConstructor {
          new(other?: Arrays_Request): Arrays_Request;
        }
        export interface Arrays_Response {
          bool_values: 'bool[3]';
          byte_values: 'byte[3]';
          char_values: 'char[3]';
          float32_values: 'float32[3]';
          float64_values: 'float64[3]';
          int8_values: 'int8[3]';
          uint8_values: 'uint8[3]';
          int16_values: 'int16[3]';
          uint16_values: 'uint16[3]';
          int32_values: 'int32[3]';
          uint32_values: 'uint32[3]';
          int64_values: 'int64[3]';
          uint64_values: 'uint64[3]';
          string_values: 'string[3]';
          basic_types_values: 'test_msgs/msg/BasicTypes[3]';
          constants_values: 'test_msgs/msg/Constants[3]';
          defaults_values: 'test_msgs/msg/Defaults[3]';
          bool_values_default: 'bool[3]';
          byte_values_default: 'byte[3]';
          char_values_default: 'char[3]';
          float32_values_default: 'float32[3]';
          float64_values_default: 'float64[3]';
          int8_values_default: 'int8[3]';
          uint8_values_default: 'uint8[3]';
          int16_values_default: 'int16[3]';
          uint16_values_default: 'uint16[3]';
          int32_values_default: 'int32[3]';
          uint32_values_default: 'uint32[3]';
          int64_values_default: 'int64[3]';
          uint64_values_default: 'uint64[3]';
          string_values_default: 'string[3]';
        }
        export interface Arrays_ResponseConstructor {
          new(other?: Arrays_Response): Arrays_Response;
        }
        export interface BasicTypesConstructor extends ROSService {
          readonly Request: BasicTypes_RequestConstructor;
          readonly Response: BasicTypes_ResponseConstructor;
        }
        export interface BasicTypes_Request {
          bool_value: 'bool';
          byte_value: 'byte';
          char_value: 'char';
          float32_value: 'float32';
          float64_value: 'float64';
          int8_value: 'int8';
          uint8_value: 'uint8';
          int16_value: 'int16';
          uint16_value: 'uint16';
          int32_value: 'int32';
          uint32_value: 'uint32';
          int64_value: 'int64';
          uint64_value: 'uint64';
          string_value: 'string';
        }
        export interface BasicTypes_RequestConstructor {
          new(other?: BasicTypes_Request): BasicTypes_Request;
        }
        export interface BasicTypes_Response {
          bool_value: 'bool';
          byte_value: 'byte';
          char_value: 'char';
          float32_value: 'float32';
          float64_value: 'float64';
          int8_value: 'int8';
          uint8_value: 'uint8';
          int16_value: 'int16';
          uint16_value: 'uint16';
          int32_value: 'int32';
          uint32_value: 'uint32';
          int64_value: 'int64';
          uint64_value: 'uint64';
          string_value: 'string';
        }
        export interface BasicTypes_ResponseConstructor {
          new(other?: BasicTypes_Response): BasicTypes_Response;
        }
        export interface EmptyConstructor extends ROSService {
          readonly Request: Empty_RequestConstructor;
          readonly Response: Empty_ResponseConstructor;
        }
        export interface Empty_Request {
        }
        export interface Empty_RequestConstructor {
          new(other?: Empty_Request): Empty_Request;
        }
        export interface Empty_Response {
        }
        export interface Empty_ResponseConstructor {
          new(other?: Empty_Response): Empty_Response;
        }
      }
    }
  }

  namespace tf2_msgs {
    namespace action {
      export interface LookupTransformConstructor {
        readonly Goal: LookupTransform_GoalConstructor;
        readonly Result: LookupTransform_ResultConstructor;
        readonly Feedback: LookupTransform_FeedbackConstructor;
      }
      export interface LookupTransform_Feedback {
      }
      export interface LookupTransform_FeedbackConstructor {
        new(other?: LookupTransform_Feedback): LookupTransform_Feedback;
      }
      export interface LookupTransform_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: tf2_msgs.action.LookupTransform_Feedback;
      }
      export interface LookupTransform_FeedbackMessageConstructor {
        new(other?: LookupTransform_FeedbackMessage): LookupTransform_FeedbackMessage;
      }
      export interface LookupTransform_GetResultConstructor extends ROSService {
        readonly Request: LookupTransform_GetResult_RequestConstructor;
        readonly Response: LookupTransform_GetResult_ResponseConstructor;
      }
      export interface LookupTransform_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface LookupTransform_GetResult_RequestConstructor {
        new(other?: LookupTransform_GetResult_Request): LookupTransform_GetResult_Request;
      }
      export interface LookupTransform_GetResult_Response {
        status: number;
        result: tf2_msgs.action.LookupTransform_Result;
      }
      export interface LookupTransform_GetResult_ResponseConstructor {
        new(other?: LookupTransform_GetResult_Response): LookupTransform_GetResult_Response;
      }
      export interface LookupTransform_Goal {
        target_frame: string;
        source_frame: string;
        source_time: builtin_interfaces.msg.Time;
        timeout: builtin_interfaces.msg.Duration;
        target_time: builtin_interfaces.msg.Time;
        fixed_frame: string;
        advanced: boolean;
      }
      export interface LookupTransform_GoalConstructor {
        new(other?: LookupTransform_Goal): LookupTransform_Goal;
      }
      export interface LookupTransform_Result {
        transform: geometry_msgs.msg.TransformStamped;
        error: tf2_msgs.msg.TF2Error;
      }
      export interface LookupTransform_ResultConstructor {
        new(other?: LookupTransform_Result): LookupTransform_Result;
      }
      export interface LookupTransform_SendGoalConstructor extends ROSService {
        readonly Request: LookupTransform_SendGoal_RequestConstructor;
        readonly Response: LookupTransform_SendGoal_ResponseConstructor;
      }
      export interface LookupTransform_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: tf2_msgs.action.LookupTransform_Goal;
      }
      export interface LookupTransform_SendGoal_RequestConstructor {
        new(other?: LookupTransform_SendGoal_Request): LookupTransform_SendGoal_Request;
      }
      export interface LookupTransform_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface LookupTransform_SendGoal_ResponseConstructor {
        new(other?: LookupTransform_SendGoal_Response): LookupTransform_SendGoal_Response;
      }
      namespace descriptor {
        export interface LookupTransformConstructor {
          readonly Goal: LookupTransform_GoalConstructor;
          readonly Result: LookupTransform_ResultConstructor;
          readonly Feedback: LookupTransform_FeedbackConstructor;
        }
        export interface LookupTransform_Feedback {
        }
        export interface LookupTransform_FeedbackConstructor {
          new(other?: LookupTransform_Feedback): LookupTransform_Feedback;
        }
        export interface LookupTransform_FeedbackMessage {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          feedback: 'tf2_msgs/action/LookupTransform_Feedback';
        }
        export interface LookupTransform_FeedbackMessageConstructor {
          new(other?: LookupTransform_FeedbackMessage): LookupTransform_FeedbackMessage;
        }
        export interface LookupTransform_GetResultConstructor extends ROSService {
          readonly Request: LookupTransform_GetResult_RequestConstructor;
          readonly Response: LookupTransform_GetResult_ResponseConstructor;
        }
        export interface LookupTransform_GetResult_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
        }
        export interface LookupTransform_GetResult_RequestConstructor {
          new(other?: LookupTransform_GetResult_Request): LookupTransform_GetResult_Request;
        }
        export interface LookupTransform_GetResult_Response {
          status: 'int8';
          result: 'tf2_msgs/action/LookupTransform_Result';
        }
        export interface LookupTransform_GetResult_ResponseConstructor {
          new(other?: LookupTransform_GetResult_Response): LookupTransform_GetResult_Response;
        }
        export interface LookupTransform_Goal {
          target_frame: 'string';
          source_frame: 'string';
          source_time: 'builtin_interfaces/msg/Time';
          timeout: 'builtin_interfaces/msg/Duration';
          target_time: 'builtin_interfaces/msg/Time';
          fixed_frame: 'string';
          advanced: 'bool';
        }
        export interface LookupTransform_GoalConstructor {
          new(other?: LookupTransform_Goal): LookupTransform_Goal;
        }
        export interface LookupTransform_Result {
          transform: 'geometry_msgs/msg/TransformStamped';
          error: 'tf2_msgs/msg/TF2Error';
        }
        export interface LookupTransform_ResultConstructor {
          new(other?: LookupTransform_Result): LookupTransform_Result;
        }
        export interface LookupTransform_SendGoalConstructor extends ROSService {
          readonly Request: LookupTransform_SendGoal_RequestConstructor;
          readonly Response: LookupTransform_SendGoal_ResponseConstructor;
        }
        export interface LookupTransform_SendGoal_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          goal: 'tf2_msgs/action/LookupTransform_Goal';
        }
        export interface LookupTransform_SendGoal_RequestConstructor {
          new(other?: LookupTransform_SendGoal_Request): LookupTransform_SendGoal_Request;
        }
        export interface LookupTransform_SendGoal_Response {
          accepted: 'bool';
          stamp: 'builtin_interfaces/msg/Time';
        }
        export interface LookupTransform_SendGoal_ResponseConstructor {
          new(other?: LookupTransform_SendGoal_Response): LookupTransform_SendGoal_Response;
        }
      }
    }
    namespace msg {
      export interface TF2Error {
        error: number;
        error_string: string;
      }
      export interface TF2ErrorConstructor {
        readonly NO_ERROR: number;
        readonly LOOKUP_ERROR: number;
        readonly CONNECTIVITY_ERROR: number;
        readonly EXTRAPOLATION_ERROR: number;
        readonly INVALID_ARGUMENT_ERROR: number;
        readonly TIMEOUT_ERROR: number;
        readonly TRANSFORM_ERROR: number;
        new(other?: TF2Error): TF2Error;
      }
      export interface TFMessage {
        transforms: geometry_msgs.msg.TransformStamped[];
      }
      export interface TFMessageConstructor {
        new(other?: TFMessage): TFMessage;
      }
      namespace descriptor {
        export interface TF2Error {
          error: 'uint8';
          error_string: 'string';
        }
        export interface TF2ErrorConstructor {
          readonly NO_ERROR: number;
          readonly LOOKUP_ERROR: number;
          readonly CONNECTIVITY_ERROR: number;
          readonly EXTRAPOLATION_ERROR: number;
          readonly INVALID_ARGUMENT_ERROR: number;
          readonly TIMEOUT_ERROR: number;
          readonly TRANSFORM_ERROR: number;
          new(other?: TF2Error): TF2Error;
        }
        export interface TFMessage {
          transforms: 'geometry_msgs/msg/TransformStamped[]';
        }
        export interface TFMessageConstructor {
          new(other?: TFMessage): TFMessage;
        }
      }
    }
    namespace srv {
      export interface FrameGraphConstructor extends ROSService {
        readonly Request: FrameGraph_RequestConstructor;
        readonly Response: FrameGraph_ResponseConstructor;
      }
      export interface FrameGraph_Request {
      }
      export interface FrameGraph_RequestConstructor {
        new(other?: FrameGraph_Request): FrameGraph_Request;
      }
      export interface FrameGraph_Response {
        frame_yaml: string;
      }
      export interface FrameGraph_ResponseConstructor {
        new(other?: FrameGraph_Response): FrameGraph_Response;
      }
      namespace descriptor {
        export interface FrameGraphConstructor extends ROSService {
          readonly Request: FrameGraph_RequestConstructor;
          readonly Response: FrameGraph_ResponseConstructor;
        }
        export interface FrameGraph_Request {
        }
        export interface FrameGraph_RequestConstructor {
          new(other?: FrameGraph_Request): FrameGraph_Request;
        }
        export interface FrameGraph_Response {
          frame_yaml: 'string';
        }
        export interface FrameGraph_ResponseConstructor {
          new(other?: FrameGraph_Response): FrameGraph_Response;
        }
      }
    }
  }

  namespace trajectory_msgs {
    namespace msg {
      export interface JointTrajectory {
        header: std_msgs.msg.Header;
        joint_names: string[];
        points: trajectory_msgs.msg.JointTrajectoryPoint[];
      }
      export interface JointTrajectoryConstructor {
        new(other?: JointTrajectory): JointTrajectory;
      }
      export interface JointTrajectoryPoint {
        positions: number[] | Float64Array;
        velocities: number[] | Float64Array;
        accelerations: number[] | Float64Array;
        effort: number[] | Float64Array;
        time_from_start: builtin_interfaces.msg.Duration;
      }
      export interface JointTrajectoryPointConstructor {
        new(other?: JointTrajectoryPoint): JointTrajectoryPoint;
      }
      export interface MultiDOFJointTrajectory {
        header: std_msgs.msg.Header;
        joint_names: string[];
        points: trajectory_msgs.msg.MultiDOFJointTrajectoryPoint[];
      }
      export interface MultiDOFJointTrajectoryConstructor {
        new(other?: MultiDOFJointTrajectory): MultiDOFJointTrajectory;
      }
      export interface MultiDOFJointTrajectoryPoint {
        transforms: geometry_msgs.msg.Transform[];
        velocities: geometry_msgs.msg.Twist[];
        accelerations: geometry_msgs.msg.Twist[];
        time_from_start: builtin_interfaces.msg.Duration;
      }
      export interface MultiDOFJointTrajectoryPointConstructor {
        new(other?: MultiDOFJointTrajectoryPoint): MultiDOFJointTrajectoryPoint;
      }
      namespace descriptor {
        export interface JointTrajectory {
          header: 'std_msgs/msg/Header';
          joint_names: 'string[]';
          points: 'trajectory_msgs/msg/JointTrajectoryPoint[]';
        }
        export interface JointTrajectoryConstructor {
          new(other?: JointTrajectory): JointTrajectory;
        }
        export interface JointTrajectoryPoint {
          positions: 'float64[]';
          velocities: 'float64[]';
          accelerations: 'float64[]';
          effort: 'float64[]';
          time_from_start: 'builtin_interfaces/msg/Duration';
        }
        export interface JointTrajectoryPointConstructor {
          new(other?: JointTrajectoryPoint): JointTrajectoryPoint;
        }
        export interface MultiDOFJointTrajectory {
          header: 'std_msgs/msg/Header';
          joint_names: 'string[]';
          points: 'trajectory_msgs/msg/MultiDOFJointTrajectoryPoint[]';
        }
        export interface MultiDOFJointTrajectoryConstructor {
          new(other?: MultiDOFJointTrajectory): MultiDOFJointTrajectory;
        }
        export interface MultiDOFJointTrajectoryPoint {
          transforms: 'geometry_msgs/msg/Transform[]';
          velocities: 'geometry_msgs/msg/Twist[]';
          accelerations: 'geometry_msgs/msg/Twist[]';
          time_from_start: 'builtin_interfaces/msg/Duration';
        }
        export interface MultiDOFJointTrajectoryPointConstructor {
          new(other?: MultiDOFJointTrajectoryPoint): MultiDOFJointTrajectoryPoint;
        }
      }
    }
  }

  namespace turtlesim {
    namespace action {
      export interface RotateAbsoluteConstructor {
        readonly Goal: RotateAbsolute_GoalConstructor;
        readonly Result: RotateAbsolute_ResultConstructor;
        readonly Feedback: RotateAbsolute_FeedbackConstructor;
      }
      export interface RotateAbsolute_Feedback {
        remaining: number;
      }
      export interface RotateAbsolute_FeedbackConstructor {
        new(other?: RotateAbsolute_Feedback): RotateAbsolute_Feedback;
      }
      export interface RotateAbsolute_FeedbackMessage {
        goal_id: unique_identifier_msgs.msg.UUID;
        feedback: turtlesim.action.RotateAbsolute_Feedback;
      }
      export interface RotateAbsolute_FeedbackMessageConstructor {
        new(other?: RotateAbsolute_FeedbackMessage): RotateAbsolute_FeedbackMessage;
      }
      export interface RotateAbsolute_GetResultConstructor extends ROSService {
        readonly Request: RotateAbsolute_GetResult_RequestConstructor;
        readonly Response: RotateAbsolute_GetResult_ResponseConstructor;
      }
      export interface RotateAbsolute_GetResult_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
      }
      export interface RotateAbsolute_GetResult_RequestConstructor {
        new(other?: RotateAbsolute_GetResult_Request): RotateAbsolute_GetResult_Request;
      }
      export interface RotateAbsolute_GetResult_Response {
        status: number;
        result: turtlesim.action.RotateAbsolute_Result;
      }
      export interface RotateAbsolute_GetResult_ResponseConstructor {
        new(other?: RotateAbsolute_GetResult_Response): RotateAbsolute_GetResult_Response;
      }
      export interface RotateAbsolute_Goal {
        theta: number;
      }
      export interface RotateAbsolute_GoalConstructor {
        new(other?: RotateAbsolute_Goal): RotateAbsolute_Goal;
      }
      export interface RotateAbsolute_Result {
        delta: number;
      }
      export interface RotateAbsolute_ResultConstructor {
        new(other?: RotateAbsolute_Result): RotateAbsolute_Result;
      }
      export interface RotateAbsolute_SendGoalConstructor extends ROSService {
        readonly Request: RotateAbsolute_SendGoal_RequestConstructor;
        readonly Response: RotateAbsolute_SendGoal_ResponseConstructor;
      }
      export interface RotateAbsolute_SendGoal_Request {
        goal_id: unique_identifier_msgs.msg.UUID;
        goal: turtlesim.action.RotateAbsolute_Goal;
      }
      export interface RotateAbsolute_SendGoal_RequestConstructor {
        new(other?: RotateAbsolute_SendGoal_Request): RotateAbsolute_SendGoal_Request;
      }
      export interface RotateAbsolute_SendGoal_Response {
        accepted: boolean;
        stamp: builtin_interfaces.msg.Time;
      }
      export interface RotateAbsolute_SendGoal_ResponseConstructor {
        new(other?: RotateAbsolute_SendGoal_Response): RotateAbsolute_SendGoal_Response;
      }
      namespace descriptor {
        export interface RotateAbsoluteConstructor {
          readonly Goal: RotateAbsolute_GoalConstructor;
          readonly Result: RotateAbsolute_ResultConstructor;
          readonly Feedback: RotateAbsolute_FeedbackConstructor;
        }
        export interface RotateAbsolute_Feedback {
          remaining: 'float32';
        }
        export interface RotateAbsolute_FeedbackConstructor {
          new(other?: RotateAbsolute_Feedback): RotateAbsolute_Feedback;
        }
        export interface RotateAbsolute_FeedbackMessage {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          feedback: 'turtlesim/action/RotateAbsolute_Feedback';
        }
        export interface RotateAbsolute_FeedbackMessageConstructor {
          new(other?: RotateAbsolute_FeedbackMessage): RotateAbsolute_FeedbackMessage;
        }
        export interface RotateAbsolute_GetResultConstructor extends ROSService {
          readonly Request: RotateAbsolute_GetResult_RequestConstructor;
          readonly Response: RotateAbsolute_GetResult_ResponseConstructor;
        }
        export interface RotateAbsolute_GetResult_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
        }
        export interface RotateAbsolute_GetResult_RequestConstructor {
          new(other?: RotateAbsolute_GetResult_Request): RotateAbsolute_GetResult_Request;
        }
        export interface RotateAbsolute_GetResult_Response {
          status: 'int8';
          result: 'turtlesim/action/RotateAbsolute_Result';
        }
        export interface RotateAbsolute_GetResult_ResponseConstructor {
          new(other?: RotateAbsolute_GetResult_Response): RotateAbsolute_GetResult_Response;
        }
        export interface RotateAbsolute_Goal {
          theta: 'float32';
        }
        export interface RotateAbsolute_GoalConstructor {
          new(other?: RotateAbsolute_Goal): RotateAbsolute_Goal;
        }
        export interface RotateAbsolute_Result {
          delta: 'float32';
        }
        export interface RotateAbsolute_ResultConstructor {
          new(other?: RotateAbsolute_Result): RotateAbsolute_Result;
        }
        export interface RotateAbsolute_SendGoalConstructor extends ROSService {
          readonly Request: RotateAbsolute_SendGoal_RequestConstructor;
          readonly Response: RotateAbsolute_SendGoal_ResponseConstructor;
        }
        export interface RotateAbsolute_SendGoal_Request {
          goal_id: 'unique_identifier_msgs/msg/UUID';
          goal: 'turtlesim/action/RotateAbsolute_Goal';
        }
        export interface RotateAbsolute_SendGoal_RequestConstructor {
          new(other?: RotateAbsolute_SendGoal_Request): RotateAbsolute_SendGoal_Request;
        }
        export interface RotateAbsolute_SendGoal_Response {
          accepted: 'bool';
          stamp: 'builtin_interfaces/msg/Time';
        }
        export interface RotateAbsolute_SendGoal_ResponseConstructor {
          new(other?: RotateAbsolute_SendGoal_Response): RotateAbsolute_SendGoal_Response;
        }
      }
    }
    namespace msg {
      export interface Color {
        r: number;
        g: number;
        b: number;
      }
      export interface ColorConstructor {
        new(other?: Color): Color;
      }
      export interface Pose {
        x: number;
        y: number;
        theta: number;
        linear_velocity: number;
        angular_velocity: number;
      }
      export interface PoseConstructor {
        new(other?: Pose): Pose;
      }
      namespace descriptor {
        export interface Color {
          r: 'uint8';
          g: 'uint8';
          b: 'uint8';
        }
        export interface ColorConstructor {
          new(other?: Color): Color;
        }
        export interface Pose {
          x: 'float32';
          y: 'float32';
          theta: 'float32';
          linear_velocity: 'float32';
          angular_velocity: 'float32';
        }
        export interface PoseConstructor {
          new(other?: Pose): Pose;
        }
      }
    }
    namespace srv {
      export interface KillConstructor extends ROSService {
        readonly Request: Kill_RequestConstructor;
        readonly Response: Kill_ResponseConstructor;
      }
      export interface Kill_Request {
        name: string;
      }
      export interface Kill_RequestConstructor {
        new(other?: Kill_Request): Kill_Request;
      }
      export interface Kill_Response {
      }
      export interface Kill_ResponseConstructor {
        new(other?: Kill_Response): Kill_Response;
      }
      export interface SetPenConstructor extends ROSService {
        readonly Request: SetPen_RequestConstructor;
        readonly Response: SetPen_ResponseConstructor;
      }
      export interface SetPen_Request {
        r: number;
        g: number;
        b: number;
        width: number;
        off: number;
      }
      export interface SetPen_RequestConstructor {
        new(other?: SetPen_Request): SetPen_Request;
      }
      export interface SetPen_Response {
      }
      export interface SetPen_ResponseConstructor {
        new(other?: SetPen_Response): SetPen_Response;
      }
      export interface SpawnConstructor extends ROSService {
        readonly Request: Spawn_RequestConstructor;
        readonly Response: Spawn_ResponseConstructor;
      }
      export interface Spawn_Request {
        x: number;
        y: number;
        theta: number;
        name: string;
      }
      export interface Spawn_RequestConstructor {
        new(other?: Spawn_Request): Spawn_Request;
      }
      export interface Spawn_Response {
        name: string;
      }
      export interface Spawn_ResponseConstructor {
        new(other?: Spawn_Response): Spawn_Response;
      }
      export interface TeleportAbsoluteConstructor extends ROSService {
        readonly Request: TeleportAbsolute_RequestConstructor;
        readonly Response: TeleportAbsolute_ResponseConstructor;
      }
      export interface TeleportAbsolute_Request {
        x: number;
        y: number;
        theta: number;
      }
      export interface TeleportAbsolute_RequestConstructor {
        new(other?: TeleportAbsolute_Request): TeleportAbsolute_Request;
      }
      export interface TeleportAbsolute_Response {
      }
      export interface TeleportAbsolute_ResponseConstructor {
        new(other?: TeleportAbsolute_Response): TeleportAbsolute_Response;
      }
      export interface TeleportRelativeConstructor extends ROSService {
        readonly Request: TeleportRelative_RequestConstructor;
        readonly Response: TeleportRelative_ResponseConstructor;
      }
      export interface TeleportRelative_Request {
        linear: number;
        angular: number;
      }
      export interface TeleportRelative_RequestConstructor {
        new(other?: TeleportRelative_Request): TeleportRelative_Request;
      }
      export interface TeleportRelative_Response {
      }
      export interface TeleportRelative_ResponseConstructor {
        new(other?: TeleportRelative_Response): TeleportRelative_Response;
      }
      namespace descriptor {
        export interface KillConstructor extends ROSService {
          readonly Request: Kill_RequestConstructor;
          readonly Response: Kill_ResponseConstructor;
        }
        export interface Kill_Request {
          name: 'string';
        }
        export interface Kill_RequestConstructor {
          new(other?: Kill_Request): Kill_Request;
        }
        export interface Kill_Response {
        }
        export interface Kill_ResponseConstructor {
          new(other?: Kill_Response): Kill_Response;
        }
        export interface SetPenConstructor extends ROSService {
          readonly Request: SetPen_RequestConstructor;
          readonly Response: SetPen_ResponseConstructor;
        }
        export interface SetPen_Request {
          r: 'uint8';
          g: 'uint8';
          b: 'uint8';
          width: 'uint8';
          off: 'uint8';
        }
        export interface SetPen_RequestConstructor {
          new(other?: SetPen_Request): SetPen_Request;
        }
        export interface SetPen_Response {
        }
        export interface SetPen_ResponseConstructor {
          new(other?: SetPen_Response): SetPen_Response;
        }
        export interface SpawnConstructor extends ROSService {
          readonly Request: Spawn_RequestConstructor;
          readonly Response: Spawn_ResponseConstructor;
        }
        export interface Spawn_Request {
          x: 'float32';
          y: 'float32';
          theta: 'float32';
          name: 'string';
        }
        export interface Spawn_RequestConstructor {
          new(other?: Spawn_Request): Spawn_Request;
        }
        export interface Spawn_Response {
          name: 'string';
        }
        export interface Spawn_ResponseConstructor {
          new(other?: Spawn_Response): Spawn_Response;
        }
        export interface TeleportAbsoluteConstructor extends ROSService {
          readonly Request: TeleportAbsolute_RequestConstructor;
          readonly Response: TeleportAbsolute_ResponseConstructor;
        }
        export interface TeleportAbsolute_Request {
          x: 'float32';
          y: 'float32';
          theta: 'float32';
        }
        export interface TeleportAbsolute_RequestConstructor {
          new(other?: TeleportAbsolute_Request): TeleportAbsolute_Request;
        }
        export interface TeleportAbsolute_Response {
        }
        export interface TeleportAbsolute_ResponseConstructor {
          new(other?: TeleportAbsolute_Response): TeleportAbsolute_Response;
        }
        export interface TeleportRelativeConstructor extends ROSService {
          readonly Request: TeleportRelative_RequestConstructor;
          readonly Response: TeleportRelative_ResponseConstructor;
        }
        export interface TeleportRelative_Request {
          linear: 'float32';
          angular: 'float32';
        }
        export interface TeleportRelative_RequestConstructor {
          new(other?: TeleportRelative_Request): TeleportRelative_Request;
        }
        export interface TeleportRelative_Response {
        }
        export interface TeleportRelative_ResponseConstructor {
          new(other?: TeleportRelative_Response): TeleportRelative_Response;
        }
      }
    }
  }

  namespace unique_identifier_msgs {
    namespace msg {
      export interface UUID {
        uuid: number[] | Uint8Array;
      }
      export interface UUIDConstructor {
        new(other?: UUID): UUID;
      }
      namespace descriptor {
        export interface UUID {
          uuid: 'uint8[16]';
        }
        export interface UUIDConstructor {
          new(other?: UUID): UUID;
        }
      }
    }
  }

  namespace visualization_msgs {
    namespace msg {
      export interface ImageMarker {
        header: std_msgs.msg.Header;
        ns: string;
        id: number;
        type: number;
        action: number;
        position: geometry_msgs.msg.Point;
        scale: number;
        outline_color: std_msgs.msg.ColorRGBA;
        filled: number;
        fill_color: std_msgs.msg.ColorRGBA;
        lifetime: builtin_interfaces.msg.Duration;
        points: geometry_msgs.msg.Point[];
        outline_colors: std_msgs.msg.ColorRGBA[];
      }
      export interface ImageMarkerConstructor {
        readonly CIRCLE: number;
        readonly LINE_STRIP: number;
        readonly LINE_LIST: number;
        readonly POLYGON: number;
        readonly POINTS: number;
        readonly ADD: number;
        readonly REMOVE: number;
        new(other?: ImageMarker): ImageMarker;
      }
      export interface InteractiveMarker {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
        name: string;
        description: string;
        scale: number;
        menu_entries: visualization_msgs.msg.MenuEntry[];
        controls: visualization_msgs.msg.InteractiveMarkerControl[];
      }
      export interface InteractiveMarkerConstructor {
        new(other?: InteractiveMarker): InteractiveMarker;
      }
      export interface InteractiveMarkerControl {
        name: string;
        orientation: geometry_msgs.msg.Quaternion;
        orientation_mode: number;
        interaction_mode: number;
        always_visible: boolean;
        markers: visualization_msgs.msg.Marker[];
        independent_marker_orientation: boolean;
        description: string;
      }
      export interface InteractiveMarkerControlConstructor {
        readonly INHERIT: number;
        readonly FIXED: number;
        readonly VIEW_FACING: number;
        readonly NONE: number;
        readonly MENU: number;
        readonly BUTTON: number;
        readonly MOVE_AXIS: number;
        readonly MOVE_PLANE: number;
        readonly ROTATE_AXIS: number;
        readonly MOVE_ROTATE: number;
        readonly MOVE_3D: number;
        readonly ROTATE_3D: number;
        readonly MOVE_ROTATE_3D: number;
        new(other?: InteractiveMarkerControl): InteractiveMarkerControl;
      }
      export interface InteractiveMarkerFeedback {
        header: std_msgs.msg.Header;
        client_id: string;
        marker_name: string;
        control_name: string;
        event_type: number;
        pose: geometry_msgs.msg.Pose;
        menu_entry_id: number;
        mouse_point: geometry_msgs.msg.Point;
        mouse_point_valid: boolean;
      }
      export interface InteractiveMarkerFeedbackConstructor {
        readonly KEEP_ALIVE: number;
        readonly POSE_UPDATE: number;
        readonly MENU_SELECT: number;
        readonly BUTTON_CLICK: number;
        readonly MOUSE_DOWN: number;
        readonly MOUSE_UP: number;
        new(other?: InteractiveMarkerFeedback): InteractiveMarkerFeedback;
      }
      export interface InteractiveMarkerInit {
        server_id: string;
        seq_num: bigint;
        markers: visualization_msgs.msg.InteractiveMarker[];
      }
      export interface InteractiveMarkerInitConstructor {
        new(other?: InteractiveMarkerInit): InteractiveMarkerInit;
      }
      export interface InteractiveMarkerPose {
        header: std_msgs.msg.Header;
        pose: geometry_msgs.msg.Pose;
        name: string;
      }
      export interface InteractiveMarkerPoseConstructor {
        new(other?: InteractiveMarkerPose): InteractiveMarkerPose;
      }
      export interface InteractiveMarkerUpdate {
        server_id: string;
        seq_num: bigint;
        type: number;
        markers: visualization_msgs.msg.InteractiveMarker[];
        poses: visualization_msgs.msg.InteractiveMarkerPose[];
        erases: string[];
      }
      export interface InteractiveMarkerUpdateConstructor {
        readonly KEEP_ALIVE: number;
        readonly UPDATE: number;
        new(other?: InteractiveMarkerUpdate): InteractiveMarkerUpdate;
      }
      export interface Marker {
        header: std_msgs.msg.Header;
        ns: string;
        id: number;
        type: number;
        action: number;
        pose: geometry_msgs.msg.Pose;
        scale: geometry_msgs.msg.Vector3;
        color: std_msgs.msg.ColorRGBA;
        lifetime: builtin_interfaces.msg.Duration;
        frame_locked: boolean;
        points: geometry_msgs.msg.Point[];
        colors: std_msgs.msg.ColorRGBA[];
        texture_resource: string;
        texture: sensor_msgs.msg.CompressedImage;
        uv_coordinates: visualization_msgs.msg.UVCoordinate[];
        text: string;
        mesh_resource: string;
        mesh_file: visualization_msgs.msg.MeshFile;
        mesh_use_embedded_materials: boolean;
      }
      export interface MarkerConstructor {
        readonly ARROW: number;
        readonly CUBE: number;
        readonly SPHERE: number;
        readonly CYLINDER: number;
        readonly LINE_STRIP: number;
        readonly LINE_LIST: number;
        readonly CUBE_LIST: number;
        readonly SPHERE_LIST: number;
        readonly POINTS: number;
        readonly TEXT_VIEW_FACING: number;
        readonly MESH_RESOURCE: number;
        readonly TRIANGLE_LIST: number;
        readonly ADD: number;
        readonly MODIFY: number;
        readonly DELETE: number;
        readonly DELETEALL: number;
        new(other?: Marker): Marker;
      }
      export interface MarkerArray {
        markers: visualization_msgs.msg.Marker[];
      }
      export interface MarkerArrayConstructor {
        new(other?: MarkerArray): MarkerArray;
      }
      export interface MenuEntry {
        id: number;
        parent_id: number;
        title: string;
        command: string;
        command_type: number;
      }
      export interface MenuEntryConstructor {
        readonly FEEDBACK: number;
        readonly ROSRUN: number;
        readonly ROSLAUNCH: number;
        new(other?: MenuEntry): MenuEntry;
      }
      export interface MeshFile {
        filename: string;
        data: number[] | Uint8Array;
      }
      export interface MeshFileConstructor {
        new(other?: MeshFile): MeshFile;
      }
      export interface UVCoordinate {
        u: number;
        v: number;
      }
      export interface UVCoordinateConstructor {
        new(other?: UVCoordinate): UVCoordinate;
      }
      namespace descriptor {
        export interface ImageMarker {
          header: 'std_msgs/msg/Header';
          ns: 'string';
          id: 'int32';
          type: 'int32';
          action: 'int32';
          position: 'geometry_msgs/msg/Point';
          scale: 'float32';
          outline_color: 'std_msgs/msg/ColorRGBA';
          filled: 'uint8';
          fill_color: 'std_msgs/msg/ColorRGBA';
          lifetime: 'builtin_interfaces/msg/Duration';
          points: 'geometry_msgs/msg/Point[]';
          outline_colors: 'std_msgs/msg/ColorRGBA[]';
        }
        export interface ImageMarkerConstructor {
          readonly CIRCLE: number;
          readonly LINE_STRIP: number;
          readonly LINE_LIST: number;
          readonly POLYGON: number;
          readonly POINTS: number;
          readonly ADD: number;
          readonly REMOVE: number;
          new(other?: ImageMarker): ImageMarker;
        }
        export interface InteractiveMarker {
          header: 'std_msgs/msg/Header';
          pose: 'geometry_msgs/msg/Pose';
          name: 'string';
          description: 'string';
          scale: 'float32';
          menu_entries: 'visualization_msgs/msg/MenuEntry[]';
          controls: 'visualization_msgs/msg/InteractiveMarkerControl[]';
        }
        export interface InteractiveMarkerConstructor {
          new(other?: InteractiveMarker): InteractiveMarker;
        }
        export interface InteractiveMarkerControl {
          name: 'string';
          orientation: 'geometry_msgs/msg/Quaternion';
          orientation_mode: 'uint8';
          interaction_mode: 'uint8';
          always_visible: 'bool';
          markers: 'visualization_msgs/msg/Marker[]';
          independent_marker_orientation: 'bool';
          description: 'string';
        }
        export interface InteractiveMarkerControlConstructor {
          readonly INHERIT: number;
          readonly FIXED: number;
          readonly VIEW_FACING: number;
          readonly NONE: number;
          readonly MENU: number;
          readonly BUTTON: number;
          readonly MOVE_AXIS: number;
          readonly MOVE_PLANE: number;
          readonly ROTATE_AXIS: number;
          readonly MOVE_ROTATE: number;
          readonly MOVE_3D: number;
          readonly ROTATE_3D: number;
          readonly MOVE_ROTATE_3D: number;
          new(other?: InteractiveMarkerControl): InteractiveMarkerControl;
        }
        export interface InteractiveMarkerFeedback {
          header: 'std_msgs/msg/Header';
          client_id: 'string';
          marker_name: 'string';
          control_name: 'string';
          event_type: 'uint8';
          pose: 'geometry_msgs/msg/Pose';
          menu_entry_id: 'uint32';
          mouse_point: 'geometry_msgs/msg/Point';
          mouse_point_valid: 'bool';
        }
        export interface InteractiveMarkerFeedbackConstructor {
          readonly KEEP_ALIVE: number;
          readonly POSE_UPDATE: number;
          readonly MENU_SELECT: number;
          readonly BUTTON_CLICK: number;
          readonly MOUSE_DOWN: number;
          readonly MOUSE_UP: number;
          new(other?: InteractiveMarkerFeedback): InteractiveMarkerFeedback;
        }
        export interface InteractiveMarkerInit {
          server_id: 'string';
          seq_num: 'uint64';
          markers: 'visualization_msgs/msg/InteractiveMarker[]';
        }
        export interface InteractiveMarkerInitConstructor {
          new(other?: InteractiveMarkerInit): InteractiveMarkerInit;
        }
        export interface InteractiveMarkerPose {
          header: 'std_msgs/msg/Header';
          pose: 'geometry_msgs/msg/Pose';
          name: 'string';
        }
        export interface InteractiveMarkerPoseConstructor {
          new(other?: InteractiveMarkerPose): InteractiveMarkerPose;
        }
        export interface InteractiveMarkerUpdate {
          server_id: 'string';
          seq_num: 'uint64';
          type: 'uint8';
          markers: 'visualization_msgs/msg/InteractiveMarker[]';
          poses: 'visualization_msgs/msg/InteractiveMarkerPose[]';
          erases: 'string[]';
        }
        export interface InteractiveMarkerUpdateConstructor {
          readonly KEEP_ALIVE: number;
          readonly UPDATE: number;
          new(other?: InteractiveMarkerUpdate): InteractiveMarkerUpdate;
        }
        export interface Marker {
          header: 'std_msgs/msg/Header';
          ns: 'string';
          id: 'int32';
          type: 'int32';
          action: 'int32';
          pose: 'geometry_msgs/msg/Pose';
          scale: 'geometry_msgs/msg/Vector3';
          color: 'std_msgs/msg/ColorRGBA';
          lifetime: 'builtin_interfaces/msg/Duration';
          frame_locked: 'bool';
          points: 'geometry_msgs/msg/Point[]';
          colors: 'std_msgs/msg/ColorRGBA[]';
          texture_resource: 'string';
          texture: 'sensor_msgs/msg/CompressedImage';
          uv_coordinates: 'visualization_msgs/msg/UVCoordinate[]';
          text: 'string';
          mesh_resource: 'string';
          mesh_file: 'visualization_msgs/msg/MeshFile';
          mesh_use_embedded_materials: 'bool';
        }
        export interface MarkerConstructor {
          readonly ARROW: number;
          readonly CUBE: number;
          readonly SPHERE: number;
          readonly CYLINDER: number;
          readonly LINE_STRIP: number;
          readonly LINE_LIST: number;
          readonly CUBE_LIST: number;
          readonly SPHERE_LIST: number;
          readonly POINTS: number;
          readonly TEXT_VIEW_FACING: number;
          readonly MESH_RESOURCE: number;
          readonly TRIANGLE_LIST: number;
          readonly ADD: number;
          readonly MODIFY: number;
          readonly DELETE: number;
          readonly DELETEALL: number;
          new(other?: Marker): Marker;
        }
        export interface MarkerArray {
          markers: 'visualization_msgs/msg/Marker[]';
        }
        export interface MarkerArrayConstructor {
          new(other?: MarkerArray): MarkerArray;
        }
        export interface MenuEntry {
          id: 'uint32';
          parent_id: 'uint32';
          title: 'string';
          command: 'string';
          command_type: 'uint8';
        }
        export interface MenuEntryConstructor {
          readonly FEEDBACK: number;
          readonly ROSRUN: number;
          readonly ROSLAUNCH: number;
          new(other?: MenuEntry): MenuEntry;
        }
        export interface MeshFile {
          filename: 'string';
          data: 'uint8[]';
        }
        export interface MeshFileConstructor {
          new(other?: MeshFile): MeshFile;
        }
        export interface UVCoordinate {
          u: 'float32';
          v: 'float32';
        }
        export interface UVCoordinateConstructor {
          new(other?: UVCoordinate): UVCoordinate;
        }
      }
    }
    namespace srv {
      export interface GetInteractiveMarkersConstructor extends ROSService {
        readonly Request: GetInteractiveMarkers_RequestConstructor;
        readonly Response: GetInteractiveMarkers_ResponseConstructor;
      }
      export interface GetInteractiveMarkers_Request {
      }
      export interface GetInteractiveMarkers_RequestConstructor {
        new(other?: GetInteractiveMarkers_Request): GetInteractiveMarkers_Request;
      }
      export interface GetInteractiveMarkers_Response {
        sequence_number: bigint;
        markers: visualization_msgs.msg.InteractiveMarker[];
      }
      export interface GetInteractiveMarkers_ResponseConstructor {
        new(other?: GetInteractiveMarkers_Response): GetInteractiveMarkers_Response;
      }
      namespace descriptor {
        export interface GetInteractiveMarkersConstructor extends ROSService {
          readonly Request: GetInteractiveMarkers_RequestConstructor;
          readonly Response: GetInteractiveMarkers_ResponseConstructor;
        }
        export interface GetInteractiveMarkers_Request {
        }
        export interface GetInteractiveMarkers_RequestConstructor {
          new(other?: GetInteractiveMarkers_Request): GetInteractiveMarkers_Request;
        }
        export interface GetInteractiveMarkers_Response {
          sequence_number: 'uint64';
          markers: 'visualization_msgs/msg/InteractiveMarker[]';
        }
        export interface GetInteractiveMarkers_ResponseConstructor {
          new(other?: GetInteractiveMarkers_Response): GetInteractiveMarkers_Response;
        }
      }
    }
  }

  type MessagesMap = {
    'string': string,
    'action_msgs/msg/GoalInfo': action_msgs.msg.GoalInfo,
    'action_msgs/msg/GoalStatus': action_msgs.msg.GoalStatus,
    'action_msgs/msg/GoalStatusArray': action_msgs.msg.GoalStatusArray,
    'action_msgs/msg/descriptor/GoalInfo': action_msgs.msg.descriptor.GoalInfo,
    'action_msgs/msg/descriptor/GoalStatus': action_msgs.msg.descriptor.GoalStatus,
    'action_msgs/msg/descriptor/GoalStatusArray': action_msgs.msg.descriptor.GoalStatusArray,
    'action_msgs/srv/CancelGoal_Request': action_msgs.srv.CancelGoal_Request,
    'action_msgs/srv/CancelGoal_Response': action_msgs.srv.CancelGoal_Response,
    'action_msgs/srv/descriptor/CancelGoal_Request': action_msgs.srv.descriptor.CancelGoal_Request,
    'action_msgs/srv/descriptor/CancelGoal_Response': action_msgs.srv.descriptor.CancelGoal_Response,
    'action_tutorials_interfaces/action/Fibonacci_Feedback': action_tutorials_interfaces.action.Fibonacci_Feedback,
    'action_tutorials_interfaces/action/Fibonacci_FeedbackMessage': action_tutorials_interfaces.action.Fibonacci_FeedbackMessage,
    'action_tutorials_interfaces/action/Fibonacci_GetResult_Request': action_tutorials_interfaces.action.Fibonacci_GetResult_Request,
    'action_tutorials_interfaces/action/Fibonacci_GetResult_Response': action_tutorials_interfaces.action.Fibonacci_GetResult_Response,
    'action_tutorials_interfaces/action/Fibonacci_Goal': action_tutorials_interfaces.action.Fibonacci_Goal,
    'action_tutorials_interfaces/action/Fibonacci_Result': action_tutorials_interfaces.action.Fibonacci_Result,
    'action_tutorials_interfaces/action/Fibonacci_SendGoal_Request': action_tutorials_interfaces.action.Fibonacci_SendGoal_Request,
    'action_tutorials_interfaces/action/Fibonacci_SendGoal_Response': action_tutorials_interfaces.action.Fibonacci_SendGoal_Response,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_Feedback': action_tutorials_interfaces.action.descriptor.Fibonacci_Feedback,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_FeedbackMessage': action_tutorials_interfaces.action.descriptor.Fibonacci_FeedbackMessage,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_GetResult_Request': action_tutorials_interfaces.action.descriptor.Fibonacci_GetResult_Request,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_GetResult_Response': action_tutorials_interfaces.action.descriptor.Fibonacci_GetResult_Response,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_Goal': action_tutorials_interfaces.action.descriptor.Fibonacci_Goal,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_Result': action_tutorials_interfaces.action.descriptor.Fibonacci_Result,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_SendGoal_Request': action_tutorials_interfaces.action.descriptor.Fibonacci_SendGoal_Request,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_SendGoal_Response': action_tutorials_interfaces.action.descriptor.Fibonacci_SendGoal_Response,
    'actionlib_msgs/msg/GoalID': actionlib_msgs.msg.GoalID,
    'actionlib_msgs/msg/GoalStatus': actionlib_msgs.msg.GoalStatus,
    'actionlib_msgs/msg/GoalStatusArray': actionlib_msgs.msg.GoalStatusArray,
    'actionlib_msgs/msg/descriptor/GoalID': actionlib_msgs.msg.descriptor.GoalID,
    'actionlib_msgs/msg/descriptor/GoalStatus': actionlib_msgs.msg.descriptor.GoalStatus,
    'actionlib_msgs/msg/descriptor/GoalStatusArray': actionlib_msgs.msg.descriptor.GoalStatusArray,
    'builtin_interfaces/msg/Duration': builtin_interfaces.msg.Duration,
    'builtin_interfaces/msg/Time': builtin_interfaces.msg.Time,
    'builtin_interfaces/msg/descriptor/Duration': builtin_interfaces.msg.descriptor.Duration,
    'builtin_interfaces/msg/descriptor/Time': builtin_interfaces.msg.descriptor.Time,
    'composition_interfaces/srv/ListNodes_Request': composition_interfaces.srv.ListNodes_Request,
    'composition_interfaces/srv/ListNodes_Response': composition_interfaces.srv.ListNodes_Response,
    'composition_interfaces/srv/LoadNode_Request': composition_interfaces.srv.LoadNode_Request,
    'composition_interfaces/srv/LoadNode_Response': composition_interfaces.srv.LoadNode_Response,
    'composition_interfaces/srv/UnloadNode_Request': composition_interfaces.srv.UnloadNode_Request,
    'composition_interfaces/srv/UnloadNode_Response': composition_interfaces.srv.UnloadNode_Response,
    'composition_interfaces/srv/descriptor/ListNodes_Request': composition_interfaces.srv.descriptor.ListNodes_Request,
    'composition_interfaces/srv/descriptor/ListNodes_Response': composition_interfaces.srv.descriptor.ListNodes_Response,
    'composition_interfaces/srv/descriptor/LoadNode_Request': composition_interfaces.srv.descriptor.LoadNode_Request,
    'composition_interfaces/srv/descriptor/LoadNode_Response': composition_interfaces.srv.descriptor.LoadNode_Response,
    'composition_interfaces/srv/descriptor/UnloadNode_Request': composition_interfaces.srv.descriptor.UnloadNode_Request,
    'composition_interfaces/srv/descriptor/UnloadNode_Response': composition_interfaces.srv.descriptor.UnloadNode_Response,
    'diagnostic_msgs/msg/DiagnosticArray': diagnostic_msgs.msg.DiagnosticArray,
    'diagnostic_msgs/msg/DiagnosticStatus': diagnostic_msgs.msg.DiagnosticStatus,
    'diagnostic_msgs/msg/KeyValue': diagnostic_msgs.msg.KeyValue,
    'diagnostic_msgs/msg/descriptor/DiagnosticArray': diagnostic_msgs.msg.descriptor.DiagnosticArray,
    'diagnostic_msgs/msg/descriptor/DiagnosticStatus': diagnostic_msgs.msg.descriptor.DiagnosticStatus,
    'diagnostic_msgs/msg/descriptor/KeyValue': diagnostic_msgs.msg.descriptor.KeyValue,
    'diagnostic_msgs/srv/AddDiagnostics_Request': diagnostic_msgs.srv.AddDiagnostics_Request,
    'diagnostic_msgs/srv/AddDiagnostics_Response': diagnostic_msgs.srv.AddDiagnostics_Response,
    'diagnostic_msgs/srv/SelfTest_Request': diagnostic_msgs.srv.SelfTest_Request,
    'diagnostic_msgs/srv/SelfTest_Response': diagnostic_msgs.srv.SelfTest_Response,
    'diagnostic_msgs/srv/descriptor/AddDiagnostics_Request': diagnostic_msgs.srv.descriptor.AddDiagnostics_Request,
    'diagnostic_msgs/srv/descriptor/AddDiagnostics_Response': diagnostic_msgs.srv.descriptor.AddDiagnostics_Response,
    'diagnostic_msgs/srv/descriptor/SelfTest_Request': diagnostic_msgs.srv.descriptor.SelfTest_Request,
    'diagnostic_msgs/srv/descriptor/SelfTest_Response': diagnostic_msgs.srv.descriptor.SelfTest_Response,
    'example_interfaces/action/Fibonacci_Feedback': example_interfaces.action.Fibonacci_Feedback,
    'example_interfaces/action/Fibonacci_FeedbackMessage': example_interfaces.action.Fibonacci_FeedbackMessage,
    'example_interfaces/action/Fibonacci_GetResult_Request': example_interfaces.action.Fibonacci_GetResult_Request,
    'example_interfaces/action/Fibonacci_GetResult_Response': example_interfaces.action.Fibonacci_GetResult_Response,
    'example_interfaces/action/Fibonacci_Goal': example_interfaces.action.Fibonacci_Goal,
    'example_interfaces/action/Fibonacci_Result': example_interfaces.action.Fibonacci_Result,
    'example_interfaces/action/Fibonacci_SendGoal_Request': example_interfaces.action.Fibonacci_SendGoal_Request,
    'example_interfaces/action/Fibonacci_SendGoal_Response': example_interfaces.action.Fibonacci_SendGoal_Response,
    'example_interfaces/action/descriptor/Fibonacci_Feedback': example_interfaces.action.descriptor.Fibonacci_Feedback,
    'example_interfaces/action/descriptor/Fibonacci_FeedbackMessage': example_interfaces.action.descriptor.Fibonacci_FeedbackMessage,
    'example_interfaces/action/descriptor/Fibonacci_GetResult_Request': example_interfaces.action.descriptor.Fibonacci_GetResult_Request,
    'example_interfaces/action/descriptor/Fibonacci_GetResult_Response': example_interfaces.action.descriptor.Fibonacci_GetResult_Response,
    'example_interfaces/action/descriptor/Fibonacci_Goal': example_interfaces.action.descriptor.Fibonacci_Goal,
    'example_interfaces/action/descriptor/Fibonacci_Result': example_interfaces.action.descriptor.Fibonacci_Result,
    'example_interfaces/action/descriptor/Fibonacci_SendGoal_Request': example_interfaces.action.descriptor.Fibonacci_SendGoal_Request,
    'example_interfaces/action/descriptor/Fibonacci_SendGoal_Response': example_interfaces.action.descriptor.Fibonacci_SendGoal_Response,
    'example_interfaces/msg/Bool': example_interfaces.msg.Bool,
    'example_interfaces/msg/Byte': example_interfaces.msg.Byte,
    'example_interfaces/msg/ByteMultiArray': example_interfaces.msg.ByteMultiArray,
    'example_interfaces/msg/Char': example_interfaces.msg.Char,
    'example_interfaces/msg/Empty': example_interfaces.msg.Empty,
    'example_interfaces/msg/Float32': example_interfaces.msg.Float32,
    'example_interfaces/msg/Float32MultiArray': example_interfaces.msg.Float32MultiArray,
    'example_interfaces/msg/Float64': example_interfaces.msg.Float64,
    'example_interfaces/msg/Float64MultiArray': example_interfaces.msg.Float64MultiArray,
    'example_interfaces/msg/Int16': example_interfaces.msg.Int16,
    'example_interfaces/msg/Int16MultiArray': example_interfaces.msg.Int16MultiArray,
    'example_interfaces/msg/Int32': example_interfaces.msg.Int32,
    'example_interfaces/msg/Int32MultiArray': example_interfaces.msg.Int32MultiArray,
    'example_interfaces/msg/Int64': example_interfaces.msg.Int64,
    'example_interfaces/msg/Int64MultiArray': example_interfaces.msg.Int64MultiArray,
    'example_interfaces/msg/Int8': example_interfaces.msg.Int8,
    'example_interfaces/msg/Int8MultiArray': example_interfaces.msg.Int8MultiArray,
    'example_interfaces/msg/MultiArrayDimension': example_interfaces.msg.MultiArrayDimension,
    'example_interfaces/msg/MultiArrayLayout': example_interfaces.msg.MultiArrayLayout,
    'example_interfaces/msg/String': example_interfaces.msg.String,
    'example_interfaces/msg/UInt16': example_interfaces.msg.UInt16,
    'example_interfaces/msg/UInt16MultiArray': example_interfaces.msg.UInt16MultiArray,
    'example_interfaces/msg/UInt32': example_interfaces.msg.UInt32,
    'example_interfaces/msg/UInt32MultiArray': example_interfaces.msg.UInt32MultiArray,
    'example_interfaces/msg/UInt64': example_interfaces.msg.UInt64,
    'example_interfaces/msg/UInt64MultiArray': example_interfaces.msg.UInt64MultiArray,
    'example_interfaces/msg/UInt8': example_interfaces.msg.UInt8,
    'example_interfaces/msg/UInt8MultiArray': example_interfaces.msg.UInt8MultiArray,
    'example_interfaces/msg/WString': example_interfaces.msg.WString,
    'example_interfaces/msg/descriptor/Bool': example_interfaces.msg.descriptor.Bool,
    'example_interfaces/msg/descriptor/Byte': example_interfaces.msg.descriptor.Byte,
    'example_interfaces/msg/descriptor/ByteMultiArray': example_interfaces.msg.descriptor.ByteMultiArray,
    'example_interfaces/msg/descriptor/Char': example_interfaces.msg.descriptor.Char,
    'example_interfaces/msg/descriptor/Empty': example_interfaces.msg.descriptor.Empty,
    'example_interfaces/msg/descriptor/Float32': example_interfaces.msg.descriptor.Float32,
    'example_interfaces/msg/descriptor/Float32MultiArray': example_interfaces.msg.descriptor.Float32MultiArray,
    'example_interfaces/msg/descriptor/Float64': example_interfaces.msg.descriptor.Float64,
    'example_interfaces/msg/descriptor/Float64MultiArray': example_interfaces.msg.descriptor.Float64MultiArray,
    'example_interfaces/msg/descriptor/Int16': example_interfaces.msg.descriptor.Int16,
    'example_interfaces/msg/descriptor/Int16MultiArray': example_interfaces.msg.descriptor.Int16MultiArray,
    'example_interfaces/msg/descriptor/Int32': example_interfaces.msg.descriptor.Int32,
    'example_interfaces/msg/descriptor/Int32MultiArray': example_interfaces.msg.descriptor.Int32MultiArray,
    'example_interfaces/msg/descriptor/Int64': example_interfaces.msg.descriptor.Int64,
    'example_interfaces/msg/descriptor/Int64MultiArray': example_interfaces.msg.descriptor.Int64MultiArray,
    'example_interfaces/msg/descriptor/Int8': example_interfaces.msg.descriptor.Int8,
    'example_interfaces/msg/descriptor/Int8MultiArray': example_interfaces.msg.descriptor.Int8MultiArray,
    'example_interfaces/msg/descriptor/MultiArrayDimension': example_interfaces.msg.descriptor.MultiArrayDimension,
    'example_interfaces/msg/descriptor/MultiArrayLayout': example_interfaces.msg.descriptor.MultiArrayLayout,
    'example_interfaces/msg/descriptor/String': example_interfaces.msg.descriptor.String,
    'example_interfaces/msg/descriptor/UInt16': example_interfaces.msg.descriptor.UInt16,
    'example_interfaces/msg/descriptor/UInt16MultiArray': example_interfaces.msg.descriptor.UInt16MultiArray,
    'example_interfaces/msg/descriptor/UInt32': example_interfaces.msg.descriptor.UInt32,
    'example_interfaces/msg/descriptor/UInt32MultiArray': example_interfaces.msg.descriptor.UInt32MultiArray,
    'example_interfaces/msg/descriptor/UInt64': example_interfaces.msg.descriptor.UInt64,
    'example_interfaces/msg/descriptor/UInt64MultiArray': example_interfaces.msg.descriptor.UInt64MultiArray,
    'example_interfaces/msg/descriptor/UInt8': example_interfaces.msg.descriptor.UInt8,
    'example_interfaces/msg/descriptor/UInt8MultiArray': example_interfaces.msg.descriptor.UInt8MultiArray,
    'example_interfaces/msg/descriptor/WString': example_interfaces.msg.descriptor.WString,
    'example_interfaces/srv/AddTwoInts_Request': example_interfaces.srv.AddTwoInts_Request,
    'example_interfaces/srv/AddTwoInts_Response': example_interfaces.srv.AddTwoInts_Response,
    'example_interfaces/srv/SetBool_Request': example_interfaces.srv.SetBool_Request,
    'example_interfaces/srv/SetBool_Response': example_interfaces.srv.SetBool_Response,
    'example_interfaces/srv/Trigger_Request': example_interfaces.srv.Trigger_Request,
    'example_interfaces/srv/Trigger_Response': example_interfaces.srv.Trigger_Response,
    'example_interfaces/srv/descriptor/AddTwoInts_Request': example_interfaces.srv.descriptor.AddTwoInts_Request,
    'example_interfaces/srv/descriptor/AddTwoInts_Response': example_interfaces.srv.descriptor.AddTwoInts_Response,
    'example_interfaces/srv/descriptor/SetBool_Request': example_interfaces.srv.descriptor.SetBool_Request,
    'example_interfaces/srv/descriptor/SetBool_Response': example_interfaces.srv.descriptor.SetBool_Response,
    'example_interfaces/srv/descriptor/Trigger_Request': example_interfaces.srv.descriptor.Trigger_Request,
    'example_interfaces/srv/descriptor/Trigger_Response': example_interfaces.srv.descriptor.Trigger_Response,
    'geometry_msgs/msg/Accel': geometry_msgs.msg.Accel,
    'geometry_msgs/msg/AccelStamped': geometry_msgs.msg.AccelStamped,
    'geometry_msgs/msg/AccelWithCovariance': geometry_msgs.msg.AccelWithCovariance,
    'geometry_msgs/msg/AccelWithCovarianceStamped': geometry_msgs.msg.AccelWithCovarianceStamped,
    'geometry_msgs/msg/Inertia': geometry_msgs.msg.Inertia,
    'geometry_msgs/msg/InertiaStamped': geometry_msgs.msg.InertiaStamped,
    'geometry_msgs/msg/Point': geometry_msgs.msg.Point,
    'geometry_msgs/msg/Point32': geometry_msgs.msg.Point32,
    'geometry_msgs/msg/PointStamped': geometry_msgs.msg.PointStamped,
    'geometry_msgs/msg/Polygon': geometry_msgs.msg.Polygon,
    'geometry_msgs/msg/PolygonStamped': geometry_msgs.msg.PolygonStamped,
    'geometry_msgs/msg/Pose': geometry_msgs.msg.Pose,
    'geometry_msgs/msg/Pose2D': geometry_msgs.msg.Pose2D,
    'geometry_msgs/msg/PoseArray': geometry_msgs.msg.PoseArray,
    'geometry_msgs/msg/PoseStamped': geometry_msgs.msg.PoseStamped,
    'geometry_msgs/msg/PoseWithCovariance': geometry_msgs.msg.PoseWithCovariance,
    'geometry_msgs/msg/PoseWithCovarianceStamped': geometry_msgs.msg.PoseWithCovarianceStamped,
    'geometry_msgs/msg/Quaternion': geometry_msgs.msg.Quaternion,
    'geometry_msgs/msg/QuaternionStamped': geometry_msgs.msg.QuaternionStamped,
    'geometry_msgs/msg/Transform': geometry_msgs.msg.Transform,
    'geometry_msgs/msg/TransformStamped': geometry_msgs.msg.TransformStamped,
    'geometry_msgs/msg/Twist': geometry_msgs.msg.Twist,
    'geometry_msgs/msg/TwistStamped': geometry_msgs.msg.TwistStamped,
    'geometry_msgs/msg/TwistWithCovariance': geometry_msgs.msg.TwistWithCovariance,
    'geometry_msgs/msg/TwistWithCovarianceStamped': geometry_msgs.msg.TwistWithCovarianceStamped,
    'geometry_msgs/msg/Vector3': geometry_msgs.msg.Vector3,
    'geometry_msgs/msg/Vector3Stamped': geometry_msgs.msg.Vector3Stamped,
    'geometry_msgs/msg/VelocityStamped': geometry_msgs.msg.VelocityStamped,
    'geometry_msgs/msg/Wrench': geometry_msgs.msg.Wrench,
    'geometry_msgs/msg/WrenchStamped': geometry_msgs.msg.WrenchStamped,
    'geometry_msgs/msg/descriptor/Accel': geometry_msgs.msg.descriptor.Accel,
    'geometry_msgs/msg/descriptor/AccelStamped': geometry_msgs.msg.descriptor.AccelStamped,
    'geometry_msgs/msg/descriptor/AccelWithCovariance': geometry_msgs.msg.descriptor.AccelWithCovariance,
    'geometry_msgs/msg/descriptor/AccelWithCovarianceStamped': geometry_msgs.msg.descriptor.AccelWithCovarianceStamped,
    'geometry_msgs/msg/descriptor/Inertia': geometry_msgs.msg.descriptor.Inertia,
    'geometry_msgs/msg/descriptor/InertiaStamped': geometry_msgs.msg.descriptor.InertiaStamped,
    'geometry_msgs/msg/descriptor/Point': geometry_msgs.msg.descriptor.Point,
    'geometry_msgs/msg/descriptor/Point32': geometry_msgs.msg.descriptor.Point32,
    'geometry_msgs/msg/descriptor/PointStamped': geometry_msgs.msg.descriptor.PointStamped,
    'geometry_msgs/msg/descriptor/Polygon': geometry_msgs.msg.descriptor.Polygon,
    'geometry_msgs/msg/descriptor/PolygonStamped': geometry_msgs.msg.descriptor.PolygonStamped,
    'geometry_msgs/msg/descriptor/Pose': geometry_msgs.msg.descriptor.Pose,
    'geometry_msgs/msg/descriptor/Pose2D': geometry_msgs.msg.descriptor.Pose2D,
    'geometry_msgs/msg/descriptor/PoseArray': geometry_msgs.msg.descriptor.PoseArray,
    'geometry_msgs/msg/descriptor/PoseStamped': geometry_msgs.msg.descriptor.PoseStamped,
    'geometry_msgs/msg/descriptor/PoseWithCovariance': geometry_msgs.msg.descriptor.PoseWithCovariance,
    'geometry_msgs/msg/descriptor/PoseWithCovarianceStamped': geometry_msgs.msg.descriptor.PoseWithCovarianceStamped,
    'geometry_msgs/msg/descriptor/Quaternion': geometry_msgs.msg.descriptor.Quaternion,
    'geometry_msgs/msg/descriptor/QuaternionStamped': geometry_msgs.msg.descriptor.QuaternionStamped,
    'geometry_msgs/msg/descriptor/Transform': geometry_msgs.msg.descriptor.Transform,
    'geometry_msgs/msg/descriptor/TransformStamped': geometry_msgs.msg.descriptor.TransformStamped,
    'geometry_msgs/msg/descriptor/Twist': geometry_msgs.msg.descriptor.Twist,
    'geometry_msgs/msg/descriptor/TwistStamped': geometry_msgs.msg.descriptor.TwistStamped,
    'geometry_msgs/msg/descriptor/TwistWithCovariance': geometry_msgs.msg.descriptor.TwistWithCovariance,
    'geometry_msgs/msg/descriptor/TwistWithCovarianceStamped': geometry_msgs.msg.descriptor.TwistWithCovarianceStamped,
    'geometry_msgs/msg/descriptor/Vector3': geometry_msgs.msg.descriptor.Vector3,
    'geometry_msgs/msg/descriptor/Vector3Stamped': geometry_msgs.msg.descriptor.Vector3Stamped,
    'geometry_msgs/msg/descriptor/VelocityStamped': geometry_msgs.msg.descriptor.VelocityStamped,
    'geometry_msgs/msg/descriptor/Wrench': geometry_msgs.msg.descriptor.Wrench,
    'geometry_msgs/msg/descriptor/WrenchStamped': geometry_msgs.msg.descriptor.WrenchStamped,
    'lifecycle_msgs/msg/State': lifecycle_msgs.msg.State,
    'lifecycle_msgs/msg/Transition': lifecycle_msgs.msg.Transition,
    'lifecycle_msgs/msg/TransitionDescription': lifecycle_msgs.msg.TransitionDescription,
    'lifecycle_msgs/msg/TransitionEvent': lifecycle_msgs.msg.TransitionEvent,
    'lifecycle_msgs/msg/descriptor/State': lifecycle_msgs.msg.descriptor.State,
    'lifecycle_msgs/msg/descriptor/Transition': lifecycle_msgs.msg.descriptor.Transition,
    'lifecycle_msgs/msg/descriptor/TransitionDescription': lifecycle_msgs.msg.descriptor.TransitionDescription,
    'lifecycle_msgs/msg/descriptor/TransitionEvent': lifecycle_msgs.msg.descriptor.TransitionEvent,
    'lifecycle_msgs/srv/ChangeState_Request': lifecycle_msgs.srv.ChangeState_Request,
    'lifecycle_msgs/srv/ChangeState_Response': lifecycle_msgs.srv.ChangeState_Response,
    'lifecycle_msgs/srv/GetAvailableStates_Request': lifecycle_msgs.srv.GetAvailableStates_Request,
    'lifecycle_msgs/srv/GetAvailableStates_Response': lifecycle_msgs.srv.GetAvailableStates_Response,
    'lifecycle_msgs/srv/GetAvailableTransitions_Request': lifecycle_msgs.srv.GetAvailableTransitions_Request,
    'lifecycle_msgs/srv/GetAvailableTransitions_Response': lifecycle_msgs.srv.GetAvailableTransitions_Response,
    'lifecycle_msgs/srv/GetState_Request': lifecycle_msgs.srv.GetState_Request,
    'lifecycle_msgs/srv/GetState_Response': lifecycle_msgs.srv.GetState_Response,
    'lifecycle_msgs/srv/descriptor/ChangeState_Request': lifecycle_msgs.srv.descriptor.ChangeState_Request,
    'lifecycle_msgs/srv/descriptor/ChangeState_Response': lifecycle_msgs.srv.descriptor.ChangeState_Response,
    'lifecycle_msgs/srv/descriptor/GetAvailableStates_Request': lifecycle_msgs.srv.descriptor.GetAvailableStates_Request,
    'lifecycle_msgs/srv/descriptor/GetAvailableStates_Response': lifecycle_msgs.srv.descriptor.GetAvailableStates_Response,
    'lifecycle_msgs/srv/descriptor/GetAvailableTransitions_Request': lifecycle_msgs.srv.descriptor.GetAvailableTransitions_Request,
    'lifecycle_msgs/srv/descriptor/GetAvailableTransitions_Response': lifecycle_msgs.srv.descriptor.GetAvailableTransitions_Response,
    'lifecycle_msgs/srv/descriptor/GetState_Request': lifecycle_msgs.srv.descriptor.GetState_Request,
    'lifecycle_msgs/srv/descriptor/GetState_Response': lifecycle_msgs.srv.descriptor.GetState_Response,
    'logging_demo/srv/ConfigLogger_Request': logging_demo.srv.ConfigLogger_Request,
    'logging_demo/srv/ConfigLogger_Response': logging_demo.srv.ConfigLogger_Response,
    'logging_demo/srv/descriptor/ConfigLogger_Request': logging_demo.srv.descriptor.ConfigLogger_Request,
    'logging_demo/srv/descriptor/ConfigLogger_Response': logging_demo.srv.descriptor.ConfigLogger_Response,
    'map_msgs/msg/OccupancyGridUpdate': map_msgs.msg.OccupancyGridUpdate,
    'map_msgs/msg/PointCloud2Update': map_msgs.msg.PointCloud2Update,
    'map_msgs/msg/ProjectedMap': map_msgs.msg.ProjectedMap,
    'map_msgs/msg/ProjectedMapInfo': map_msgs.msg.ProjectedMapInfo,
    'map_msgs/msg/descriptor/OccupancyGridUpdate': map_msgs.msg.descriptor.OccupancyGridUpdate,
    'map_msgs/msg/descriptor/PointCloud2Update': map_msgs.msg.descriptor.PointCloud2Update,
    'map_msgs/msg/descriptor/ProjectedMap': map_msgs.msg.descriptor.ProjectedMap,
    'map_msgs/msg/descriptor/ProjectedMapInfo': map_msgs.msg.descriptor.ProjectedMapInfo,
    'map_msgs/srv/GetMapROI_Request': map_msgs.srv.GetMapROI_Request,
    'map_msgs/srv/GetMapROI_Response': map_msgs.srv.GetMapROI_Response,
    'map_msgs/srv/GetPointMapROI_Request': map_msgs.srv.GetPointMapROI_Request,
    'map_msgs/srv/GetPointMapROI_Response': map_msgs.srv.GetPointMapROI_Response,
    'map_msgs/srv/GetPointMap_Request': map_msgs.srv.GetPointMap_Request,
    'map_msgs/srv/GetPointMap_Response': map_msgs.srv.GetPointMap_Response,
    'map_msgs/srv/ProjectedMapsInfo_Request': map_msgs.srv.ProjectedMapsInfo_Request,
    'map_msgs/srv/ProjectedMapsInfo_Response': map_msgs.srv.ProjectedMapsInfo_Response,
    'map_msgs/srv/SaveMap_Request': map_msgs.srv.SaveMap_Request,
    'map_msgs/srv/SaveMap_Response': map_msgs.srv.SaveMap_Response,
    'map_msgs/srv/SetMapProjections_Request': map_msgs.srv.SetMapProjections_Request,
    'map_msgs/srv/SetMapProjections_Response': map_msgs.srv.SetMapProjections_Response,
    'map_msgs/srv/descriptor/GetMapROI_Request': map_msgs.srv.descriptor.GetMapROI_Request,
    'map_msgs/srv/descriptor/GetMapROI_Response': map_msgs.srv.descriptor.GetMapROI_Response,
    'map_msgs/srv/descriptor/GetPointMapROI_Request': map_msgs.srv.descriptor.GetPointMapROI_Request,
    'map_msgs/srv/descriptor/GetPointMapROI_Response': map_msgs.srv.descriptor.GetPointMapROI_Response,
    'map_msgs/srv/descriptor/GetPointMap_Request': map_msgs.srv.descriptor.GetPointMap_Request,
    'map_msgs/srv/descriptor/GetPointMap_Response': map_msgs.srv.descriptor.GetPointMap_Response,
    'map_msgs/srv/descriptor/ProjectedMapsInfo_Request': map_msgs.srv.descriptor.ProjectedMapsInfo_Request,
    'map_msgs/srv/descriptor/ProjectedMapsInfo_Response': map_msgs.srv.descriptor.ProjectedMapsInfo_Response,
    'map_msgs/srv/descriptor/SaveMap_Request': map_msgs.srv.descriptor.SaveMap_Request,
    'map_msgs/srv/descriptor/SaveMap_Response': map_msgs.srv.descriptor.SaveMap_Response,
    'map_msgs/srv/descriptor/SetMapProjections_Request': map_msgs.srv.descriptor.SetMapProjections_Request,
    'map_msgs/srv/descriptor/SetMapProjections_Response': map_msgs.srv.descriptor.SetMapProjections_Response,
    'nav_msgs/msg/Goals': nav_msgs.msg.Goals,
    'nav_msgs/msg/GridCells': nav_msgs.msg.GridCells,
    'nav_msgs/msg/MapMetaData': nav_msgs.msg.MapMetaData,
    'nav_msgs/msg/OccupancyGrid': nav_msgs.msg.OccupancyGrid,
    'nav_msgs/msg/Odometry': nav_msgs.msg.Odometry,
    'nav_msgs/msg/Path': nav_msgs.msg.Path,
    'nav_msgs/msg/descriptor/Goals': nav_msgs.msg.descriptor.Goals,
    'nav_msgs/msg/descriptor/GridCells': nav_msgs.msg.descriptor.GridCells,
    'nav_msgs/msg/descriptor/MapMetaData': nav_msgs.msg.descriptor.MapMetaData,
    'nav_msgs/msg/descriptor/OccupancyGrid': nav_msgs.msg.descriptor.OccupancyGrid,
    'nav_msgs/msg/descriptor/Odometry': nav_msgs.msg.descriptor.Odometry,
    'nav_msgs/msg/descriptor/Path': nav_msgs.msg.descriptor.Path,
    'nav_msgs/srv/GetMap_Request': nav_msgs.srv.GetMap_Request,
    'nav_msgs/srv/GetMap_Response': nav_msgs.srv.GetMap_Response,
    'nav_msgs/srv/GetPlan_Request': nav_msgs.srv.GetPlan_Request,
    'nav_msgs/srv/GetPlan_Response': nav_msgs.srv.GetPlan_Response,
    'nav_msgs/srv/LoadMap_Request': nav_msgs.srv.LoadMap_Request,
    'nav_msgs/srv/LoadMap_Response': nav_msgs.srv.LoadMap_Response,
    'nav_msgs/srv/SetMap_Request': nav_msgs.srv.SetMap_Request,
    'nav_msgs/srv/SetMap_Response': nav_msgs.srv.SetMap_Response,
    'nav_msgs/srv/descriptor/GetMap_Request': nav_msgs.srv.descriptor.GetMap_Request,
    'nav_msgs/srv/descriptor/GetMap_Response': nav_msgs.srv.descriptor.GetMap_Response,
    'nav_msgs/srv/descriptor/GetPlan_Request': nav_msgs.srv.descriptor.GetPlan_Request,
    'nav_msgs/srv/descriptor/GetPlan_Response': nav_msgs.srv.descriptor.GetPlan_Response,
    'nav_msgs/srv/descriptor/LoadMap_Request': nav_msgs.srv.descriptor.LoadMap_Request,
    'nav_msgs/srv/descriptor/LoadMap_Response': nav_msgs.srv.descriptor.LoadMap_Response,
    'nav_msgs/srv/descriptor/SetMap_Request': nav_msgs.srv.descriptor.SetMap_Request,
    'nav_msgs/srv/descriptor/SetMap_Response': nav_msgs.srv.descriptor.SetMap_Response,
    'pendulum_msgs/msg/JointCommand': pendulum_msgs.msg.JointCommand,
    'pendulum_msgs/msg/JointState': pendulum_msgs.msg.JointState,
    'pendulum_msgs/msg/RttestResults': pendulum_msgs.msg.RttestResults,
    'pendulum_msgs/msg/descriptor/JointCommand': pendulum_msgs.msg.descriptor.JointCommand,
    'pendulum_msgs/msg/descriptor/JointState': pendulum_msgs.msg.descriptor.JointState,
    'pendulum_msgs/msg/descriptor/RttestResults': pendulum_msgs.msg.descriptor.RttestResults,
    'rcl_interfaces/msg/FloatingPointRange': rcl_interfaces.msg.FloatingPointRange,
    'rcl_interfaces/msg/IntegerRange': rcl_interfaces.msg.IntegerRange,
    'rcl_interfaces/msg/ListParametersResult': rcl_interfaces.msg.ListParametersResult,
    'rcl_interfaces/msg/Log': rcl_interfaces.msg.Log,
    'rcl_interfaces/msg/Parameter': rcl_interfaces.msg.Parameter,
    'rcl_interfaces/msg/ParameterDescriptor': rcl_interfaces.msg.ParameterDescriptor,
    'rcl_interfaces/msg/ParameterEvent': rcl_interfaces.msg.ParameterEvent,
    'rcl_interfaces/msg/ParameterEventDescriptors': rcl_interfaces.msg.ParameterEventDescriptors,
    'rcl_interfaces/msg/ParameterType': rcl_interfaces.msg.ParameterType,
    'rcl_interfaces/msg/ParameterValue': rcl_interfaces.msg.ParameterValue,
    'rcl_interfaces/msg/SetParametersResult': rcl_interfaces.msg.SetParametersResult,
    'rcl_interfaces/msg/descriptor/FloatingPointRange': rcl_interfaces.msg.descriptor.FloatingPointRange,
    'rcl_interfaces/msg/descriptor/IntegerRange': rcl_interfaces.msg.descriptor.IntegerRange,
    'rcl_interfaces/msg/descriptor/ListParametersResult': rcl_interfaces.msg.descriptor.ListParametersResult,
    'rcl_interfaces/msg/descriptor/Log': rcl_interfaces.msg.descriptor.Log,
    'rcl_interfaces/msg/descriptor/Parameter': rcl_interfaces.msg.descriptor.Parameter,
    'rcl_interfaces/msg/descriptor/ParameterDescriptor': rcl_interfaces.msg.descriptor.ParameterDescriptor,
    'rcl_interfaces/msg/descriptor/ParameterEvent': rcl_interfaces.msg.descriptor.ParameterEvent,
    'rcl_interfaces/msg/descriptor/ParameterEventDescriptors': rcl_interfaces.msg.descriptor.ParameterEventDescriptors,
    'rcl_interfaces/msg/descriptor/ParameterType': rcl_interfaces.msg.descriptor.ParameterType,
    'rcl_interfaces/msg/descriptor/ParameterValue': rcl_interfaces.msg.descriptor.ParameterValue,
    'rcl_interfaces/msg/descriptor/SetParametersResult': rcl_interfaces.msg.descriptor.SetParametersResult,
    'rcl_interfaces/srv/DescribeParameters_Request': rcl_interfaces.srv.DescribeParameters_Request,
    'rcl_interfaces/srv/DescribeParameters_Response': rcl_interfaces.srv.DescribeParameters_Response,
    'rcl_interfaces/srv/GetParameterTypes_Request': rcl_interfaces.srv.GetParameterTypes_Request,
    'rcl_interfaces/srv/GetParameterTypes_Response': rcl_interfaces.srv.GetParameterTypes_Response,
    'rcl_interfaces/srv/GetParameters_Request': rcl_interfaces.srv.GetParameters_Request,
    'rcl_interfaces/srv/GetParameters_Response': rcl_interfaces.srv.GetParameters_Response,
    'rcl_interfaces/srv/ListParameters_Request': rcl_interfaces.srv.ListParameters_Request,
    'rcl_interfaces/srv/ListParameters_Response': rcl_interfaces.srv.ListParameters_Response,
    'rcl_interfaces/srv/SetParametersAtomically_Request': rcl_interfaces.srv.SetParametersAtomically_Request,
    'rcl_interfaces/srv/SetParametersAtomically_Response': rcl_interfaces.srv.SetParametersAtomically_Response,
    'rcl_interfaces/srv/SetParameters_Request': rcl_interfaces.srv.SetParameters_Request,
    'rcl_interfaces/srv/SetParameters_Response': rcl_interfaces.srv.SetParameters_Response,
    'rcl_interfaces/srv/descriptor/DescribeParameters_Request': rcl_interfaces.srv.descriptor.DescribeParameters_Request,
    'rcl_interfaces/srv/descriptor/DescribeParameters_Response': rcl_interfaces.srv.descriptor.DescribeParameters_Response,
    'rcl_interfaces/srv/descriptor/GetParameterTypes_Request': rcl_interfaces.srv.descriptor.GetParameterTypes_Request,
    'rcl_interfaces/srv/descriptor/GetParameterTypes_Response': rcl_interfaces.srv.descriptor.GetParameterTypes_Response,
    'rcl_interfaces/srv/descriptor/GetParameters_Request': rcl_interfaces.srv.descriptor.GetParameters_Request,
    'rcl_interfaces/srv/descriptor/GetParameters_Response': rcl_interfaces.srv.descriptor.GetParameters_Response,
    'rcl_interfaces/srv/descriptor/ListParameters_Request': rcl_interfaces.srv.descriptor.ListParameters_Request,
    'rcl_interfaces/srv/descriptor/ListParameters_Response': rcl_interfaces.srv.descriptor.ListParameters_Response,
    'rcl_interfaces/srv/descriptor/SetParametersAtomically_Request': rcl_interfaces.srv.descriptor.SetParametersAtomically_Request,
    'rcl_interfaces/srv/descriptor/SetParametersAtomically_Response': rcl_interfaces.srv.descriptor.SetParametersAtomically_Response,
    'rcl_interfaces/srv/descriptor/SetParameters_Request': rcl_interfaces.srv.descriptor.SetParameters_Request,
    'rcl_interfaces/srv/descriptor/SetParameters_Response': rcl_interfaces.srv.descriptor.SetParameters_Response,
    'rmw_dds_common/msg/Gid': rmw_dds_common.msg.Gid,
    'rmw_dds_common/msg/NodeEntitiesInfo': rmw_dds_common.msg.NodeEntitiesInfo,
    'rmw_dds_common/msg/ParticipantEntitiesInfo': rmw_dds_common.msg.ParticipantEntitiesInfo,
    'rmw_dds_common/msg/descriptor/Gid': rmw_dds_common.msg.descriptor.Gid,
    'rmw_dds_common/msg/descriptor/NodeEntitiesInfo': rmw_dds_common.msg.descriptor.NodeEntitiesInfo,
    'rmw_dds_common/msg/descriptor/ParticipantEntitiesInfo': rmw_dds_common.msg.descriptor.ParticipantEntitiesInfo,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_Feedback': ros2cli_test_interfaces.action.ShortVariedMultiNested_Feedback,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_FeedbackMessage': ros2cli_test_interfaces.action.ShortVariedMultiNested_FeedbackMessage,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_GetResult_Request': ros2cli_test_interfaces.action.ShortVariedMultiNested_GetResult_Request,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_GetResult_Response': ros2cli_test_interfaces.action.ShortVariedMultiNested_GetResult_Response,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_Goal': ros2cli_test_interfaces.action.ShortVariedMultiNested_Goal,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_Result': ros2cli_test_interfaces.action.ShortVariedMultiNested_Result,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_SendGoal_Request': ros2cli_test_interfaces.action.ShortVariedMultiNested_SendGoal_Request,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_SendGoal_Response': ros2cli_test_interfaces.action.ShortVariedMultiNested_SendGoal_Response,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_Feedback': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_Feedback,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_FeedbackMessage': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_FeedbackMessage,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_GetResult_Request': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_GetResult_Request,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_GetResult_Response': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_GetResult_Response,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_Goal': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_Goal,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_Result': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_Result,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_SendGoal_Request': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_SendGoal_Request,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_SendGoal_Response': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_SendGoal_Response,
    'ros2cli_test_interfaces/msg/ShortVaried': ros2cli_test_interfaces.msg.ShortVaried,
    'ros2cli_test_interfaces/msg/ShortVariedMultiNested': ros2cli_test_interfaces.msg.ShortVariedMultiNested,
    'ros2cli_test_interfaces/msg/ShortVariedNested': ros2cli_test_interfaces.msg.ShortVariedNested,
    'ros2cli_test_interfaces/msg/descriptor/ShortVaried': ros2cli_test_interfaces.msg.descriptor.ShortVaried,
    'ros2cli_test_interfaces/msg/descriptor/ShortVariedMultiNested': ros2cli_test_interfaces.msg.descriptor.ShortVariedMultiNested,
    'ros2cli_test_interfaces/msg/descriptor/ShortVariedNested': ros2cli_test_interfaces.msg.descriptor.ShortVariedNested,
    'ros2cli_test_interfaces/srv/ShortVariedMultiNested_Request': ros2cli_test_interfaces.srv.ShortVariedMultiNested_Request,
    'ros2cli_test_interfaces/srv/ShortVariedMultiNested_Response': ros2cli_test_interfaces.srv.ShortVariedMultiNested_Response,
    'ros2cli_test_interfaces/srv/descriptor/ShortVariedMultiNested_Request': ros2cli_test_interfaces.srv.descriptor.ShortVariedMultiNested_Request,
    'ros2cli_test_interfaces/srv/descriptor/ShortVariedMultiNested_Response': ros2cli_test_interfaces.srv.descriptor.ShortVariedMultiNested_Response,
    'rosbag2_interfaces/msg/ReadSplitEvent': rosbag2_interfaces.msg.ReadSplitEvent,
    'rosbag2_interfaces/msg/WriteSplitEvent': rosbag2_interfaces.msg.WriteSplitEvent,
    'rosbag2_interfaces/msg/descriptor/ReadSplitEvent': rosbag2_interfaces.msg.descriptor.ReadSplitEvent,
    'rosbag2_interfaces/msg/descriptor/WriteSplitEvent': rosbag2_interfaces.msg.descriptor.WriteSplitEvent,
    'rosbag2_interfaces/srv/Burst_Request': rosbag2_interfaces.srv.Burst_Request,
    'rosbag2_interfaces/srv/Burst_Response': rosbag2_interfaces.srv.Burst_Response,
    'rosbag2_interfaces/srv/GetRate_Request': rosbag2_interfaces.srv.GetRate_Request,
    'rosbag2_interfaces/srv/GetRate_Response': rosbag2_interfaces.srv.GetRate_Response,
    'rosbag2_interfaces/srv/IsPaused_Request': rosbag2_interfaces.srv.IsPaused_Request,
    'rosbag2_interfaces/srv/IsPaused_Response': rosbag2_interfaces.srv.IsPaused_Response,
    'rosbag2_interfaces/srv/Pause_Request': rosbag2_interfaces.srv.Pause_Request,
    'rosbag2_interfaces/srv/Pause_Response': rosbag2_interfaces.srv.Pause_Response,
    'rosbag2_interfaces/srv/PlayNext_Request': rosbag2_interfaces.srv.PlayNext_Request,
    'rosbag2_interfaces/srv/PlayNext_Response': rosbag2_interfaces.srv.PlayNext_Response,
    'rosbag2_interfaces/srv/Resume_Request': rosbag2_interfaces.srv.Resume_Request,
    'rosbag2_interfaces/srv/Resume_Response': rosbag2_interfaces.srv.Resume_Response,
    'rosbag2_interfaces/srv/Seek_Request': rosbag2_interfaces.srv.Seek_Request,
    'rosbag2_interfaces/srv/Seek_Response': rosbag2_interfaces.srv.Seek_Response,
    'rosbag2_interfaces/srv/SetRate_Request': rosbag2_interfaces.srv.SetRate_Request,
    'rosbag2_interfaces/srv/SetRate_Response': rosbag2_interfaces.srv.SetRate_Response,
    'rosbag2_interfaces/srv/Snapshot_Request': rosbag2_interfaces.srv.Snapshot_Request,
    'rosbag2_interfaces/srv/Snapshot_Response': rosbag2_interfaces.srv.Snapshot_Response,
    'rosbag2_interfaces/srv/TogglePaused_Request': rosbag2_interfaces.srv.TogglePaused_Request,
    'rosbag2_interfaces/srv/TogglePaused_Response': rosbag2_interfaces.srv.TogglePaused_Response,
    'rosbag2_interfaces/srv/descriptor/Burst_Request': rosbag2_interfaces.srv.descriptor.Burst_Request,
    'rosbag2_interfaces/srv/descriptor/Burst_Response': rosbag2_interfaces.srv.descriptor.Burst_Response,
    'rosbag2_interfaces/srv/descriptor/GetRate_Request': rosbag2_interfaces.srv.descriptor.GetRate_Request,
    'rosbag2_interfaces/srv/descriptor/GetRate_Response': rosbag2_interfaces.srv.descriptor.GetRate_Response,
    'rosbag2_interfaces/srv/descriptor/IsPaused_Request': rosbag2_interfaces.srv.descriptor.IsPaused_Request,
    'rosbag2_interfaces/srv/descriptor/IsPaused_Response': rosbag2_interfaces.srv.descriptor.IsPaused_Response,
    'rosbag2_interfaces/srv/descriptor/Pause_Request': rosbag2_interfaces.srv.descriptor.Pause_Request,
    'rosbag2_interfaces/srv/descriptor/Pause_Response': rosbag2_interfaces.srv.descriptor.Pause_Response,
    'rosbag2_interfaces/srv/descriptor/PlayNext_Request': rosbag2_interfaces.srv.descriptor.PlayNext_Request,
    'rosbag2_interfaces/srv/descriptor/PlayNext_Response': rosbag2_interfaces.srv.descriptor.PlayNext_Response,
    'rosbag2_interfaces/srv/descriptor/Resume_Request': rosbag2_interfaces.srv.descriptor.Resume_Request,
    'rosbag2_interfaces/srv/descriptor/Resume_Response': rosbag2_interfaces.srv.descriptor.Resume_Response,
    'rosbag2_interfaces/srv/descriptor/Seek_Request': rosbag2_interfaces.srv.descriptor.Seek_Request,
    'rosbag2_interfaces/srv/descriptor/Seek_Response': rosbag2_interfaces.srv.descriptor.Seek_Response,
    'rosbag2_interfaces/srv/descriptor/SetRate_Request': rosbag2_interfaces.srv.descriptor.SetRate_Request,
    'rosbag2_interfaces/srv/descriptor/SetRate_Response': rosbag2_interfaces.srv.descriptor.SetRate_Response,
    'rosbag2_interfaces/srv/descriptor/Snapshot_Request': rosbag2_interfaces.srv.descriptor.Snapshot_Request,
    'rosbag2_interfaces/srv/descriptor/Snapshot_Response': rosbag2_interfaces.srv.descriptor.Snapshot_Response,
    'rosbag2_interfaces/srv/descriptor/TogglePaused_Request': rosbag2_interfaces.srv.descriptor.TogglePaused_Request,
    'rosbag2_interfaces/srv/descriptor/TogglePaused_Response': rosbag2_interfaces.srv.descriptor.TogglePaused_Response,
    'rosgraph_msgs/msg/Clock': rosgraph_msgs.msg.Clock,
    'rosgraph_msgs/msg/descriptor/Clock': rosgraph_msgs.msg.descriptor.Clock,
    'sensor_msgs/msg/BatteryState': sensor_msgs.msg.BatteryState,
    'sensor_msgs/msg/CameraInfo': sensor_msgs.msg.CameraInfo,
    'sensor_msgs/msg/ChannelFloat32': sensor_msgs.msg.ChannelFloat32,
    'sensor_msgs/msg/CompressedImage': sensor_msgs.msg.CompressedImage,
    'sensor_msgs/msg/FluidPressure': sensor_msgs.msg.FluidPressure,
    'sensor_msgs/msg/Illuminance': sensor_msgs.msg.Illuminance,
    'sensor_msgs/msg/Image': sensor_msgs.msg.Image,
    'sensor_msgs/msg/Imu': sensor_msgs.msg.Imu,
    'sensor_msgs/msg/JointState': sensor_msgs.msg.JointState,
    'sensor_msgs/msg/Joy': sensor_msgs.msg.Joy,
    'sensor_msgs/msg/JoyFeedback': sensor_msgs.msg.JoyFeedback,
    'sensor_msgs/msg/JoyFeedbackArray': sensor_msgs.msg.JoyFeedbackArray,
    'sensor_msgs/msg/LaserEcho': sensor_msgs.msg.LaserEcho,
    'sensor_msgs/msg/LaserScan': sensor_msgs.msg.LaserScan,
    'sensor_msgs/msg/MagneticField': sensor_msgs.msg.MagneticField,
    'sensor_msgs/msg/MultiDOFJointState': sensor_msgs.msg.MultiDOFJointState,
    'sensor_msgs/msg/MultiEchoLaserScan': sensor_msgs.msg.MultiEchoLaserScan,
    'sensor_msgs/msg/NavSatFix': sensor_msgs.msg.NavSatFix,
    'sensor_msgs/msg/NavSatStatus': sensor_msgs.msg.NavSatStatus,
    'sensor_msgs/msg/PointCloud': sensor_msgs.msg.PointCloud,
    'sensor_msgs/msg/PointCloud2': sensor_msgs.msg.PointCloud2,
    'sensor_msgs/msg/PointField': sensor_msgs.msg.PointField,
    'sensor_msgs/msg/Range': sensor_msgs.msg.Range,
    'sensor_msgs/msg/RegionOfInterest': sensor_msgs.msg.RegionOfInterest,
    'sensor_msgs/msg/RelativeHumidity': sensor_msgs.msg.RelativeHumidity,
    'sensor_msgs/msg/Temperature': sensor_msgs.msg.Temperature,
    'sensor_msgs/msg/TimeReference': sensor_msgs.msg.TimeReference,
    'sensor_msgs/msg/descriptor/BatteryState': sensor_msgs.msg.descriptor.BatteryState,
    'sensor_msgs/msg/descriptor/CameraInfo': sensor_msgs.msg.descriptor.CameraInfo,
    'sensor_msgs/msg/descriptor/ChannelFloat32': sensor_msgs.msg.descriptor.ChannelFloat32,
    'sensor_msgs/msg/descriptor/CompressedImage': sensor_msgs.msg.descriptor.CompressedImage,
    'sensor_msgs/msg/descriptor/FluidPressure': sensor_msgs.msg.descriptor.FluidPressure,
    'sensor_msgs/msg/descriptor/Illuminance': sensor_msgs.msg.descriptor.Illuminance,
    'sensor_msgs/msg/descriptor/Image': sensor_msgs.msg.descriptor.Image,
    'sensor_msgs/msg/descriptor/Imu': sensor_msgs.msg.descriptor.Imu,
    'sensor_msgs/msg/descriptor/JointState': sensor_msgs.msg.descriptor.JointState,
    'sensor_msgs/msg/descriptor/Joy': sensor_msgs.msg.descriptor.Joy,
    'sensor_msgs/msg/descriptor/JoyFeedback': sensor_msgs.msg.descriptor.JoyFeedback,
    'sensor_msgs/msg/descriptor/JoyFeedbackArray': sensor_msgs.msg.descriptor.JoyFeedbackArray,
    'sensor_msgs/msg/descriptor/LaserEcho': sensor_msgs.msg.descriptor.LaserEcho,
    'sensor_msgs/msg/descriptor/LaserScan': sensor_msgs.msg.descriptor.LaserScan,
    'sensor_msgs/msg/descriptor/MagneticField': sensor_msgs.msg.descriptor.MagneticField,
    'sensor_msgs/msg/descriptor/MultiDOFJointState': sensor_msgs.msg.descriptor.MultiDOFJointState,
    'sensor_msgs/msg/descriptor/MultiEchoLaserScan': sensor_msgs.msg.descriptor.MultiEchoLaserScan,
    'sensor_msgs/msg/descriptor/NavSatFix': sensor_msgs.msg.descriptor.NavSatFix,
    'sensor_msgs/msg/descriptor/NavSatStatus': sensor_msgs.msg.descriptor.NavSatStatus,
    'sensor_msgs/msg/descriptor/PointCloud': sensor_msgs.msg.descriptor.PointCloud,
    'sensor_msgs/msg/descriptor/PointCloud2': sensor_msgs.msg.descriptor.PointCloud2,
    'sensor_msgs/msg/descriptor/PointField': sensor_msgs.msg.descriptor.PointField,
    'sensor_msgs/msg/descriptor/Range': sensor_msgs.msg.descriptor.Range,
    'sensor_msgs/msg/descriptor/RegionOfInterest': sensor_msgs.msg.descriptor.RegionOfInterest,
    'sensor_msgs/msg/descriptor/RelativeHumidity': sensor_msgs.msg.descriptor.RelativeHumidity,
    'sensor_msgs/msg/descriptor/Temperature': sensor_msgs.msg.descriptor.Temperature,
    'sensor_msgs/msg/descriptor/TimeReference': sensor_msgs.msg.descriptor.TimeReference,
    'sensor_msgs/srv/SetCameraInfo_Request': sensor_msgs.srv.SetCameraInfo_Request,
    'sensor_msgs/srv/SetCameraInfo_Response': sensor_msgs.srv.SetCameraInfo_Response,
    'sensor_msgs/srv/descriptor/SetCameraInfo_Request': sensor_msgs.srv.descriptor.SetCameraInfo_Request,
    'sensor_msgs/srv/descriptor/SetCameraInfo_Response': sensor_msgs.srv.descriptor.SetCameraInfo_Response,
    'shape_msgs/msg/Mesh': shape_msgs.msg.Mesh,
    'shape_msgs/msg/MeshTriangle': shape_msgs.msg.MeshTriangle,
    'shape_msgs/msg/Plane': shape_msgs.msg.Plane,
    'shape_msgs/msg/SolidPrimitive': shape_msgs.msg.SolidPrimitive,
    'shape_msgs/msg/descriptor/Mesh': shape_msgs.msg.descriptor.Mesh,
    'shape_msgs/msg/descriptor/MeshTriangle': shape_msgs.msg.descriptor.MeshTriangle,
    'shape_msgs/msg/descriptor/Plane': shape_msgs.msg.descriptor.Plane,
    'shape_msgs/msg/descriptor/SolidPrimitive': shape_msgs.msg.descriptor.SolidPrimitive,
    'statistics_msgs/msg/MetricsMessage': statistics_msgs.msg.MetricsMessage,
    'statistics_msgs/msg/StatisticDataPoint': statistics_msgs.msg.StatisticDataPoint,
    'statistics_msgs/msg/StatisticDataType': statistics_msgs.msg.StatisticDataType,
    'statistics_msgs/msg/descriptor/MetricsMessage': statistics_msgs.msg.descriptor.MetricsMessage,
    'statistics_msgs/msg/descriptor/StatisticDataPoint': statistics_msgs.msg.descriptor.StatisticDataPoint,
    'statistics_msgs/msg/descriptor/StatisticDataType': statistics_msgs.msg.descriptor.StatisticDataType,
    'std_msgs/msg/Bool': std_msgs.msg.Bool,
    'std_msgs/msg/Byte': std_msgs.msg.Byte,
    'std_msgs/msg/ByteMultiArray': std_msgs.msg.ByteMultiArray,
    'std_msgs/msg/Char': std_msgs.msg.Char,
    'std_msgs/msg/ColorRGBA': std_msgs.msg.ColorRGBA,
    'std_msgs/msg/Empty': std_msgs.msg.Empty,
    'std_msgs/msg/Float32': std_msgs.msg.Float32,
    'std_msgs/msg/Float32MultiArray': std_msgs.msg.Float32MultiArray,
    'std_msgs/msg/Float64': std_msgs.msg.Float64,
    'std_msgs/msg/Float64MultiArray': std_msgs.msg.Float64MultiArray,
    'std_msgs/msg/Header': std_msgs.msg.Header,
    'std_msgs/msg/Int16': std_msgs.msg.Int16,
    'std_msgs/msg/Int16MultiArray': std_msgs.msg.Int16MultiArray,
    'std_msgs/msg/Int32': std_msgs.msg.Int32,
    'std_msgs/msg/Int32MultiArray': std_msgs.msg.Int32MultiArray,
    'std_msgs/msg/Int64': std_msgs.msg.Int64,
    'std_msgs/msg/Int64MultiArray': std_msgs.msg.Int64MultiArray,
    'std_msgs/msg/Int8': std_msgs.msg.Int8,
    'std_msgs/msg/Int8MultiArray': std_msgs.msg.Int8MultiArray,
    'std_msgs/msg/MultiArrayDimension': std_msgs.msg.MultiArrayDimension,
    'std_msgs/msg/MultiArrayLayout': std_msgs.msg.MultiArrayLayout,
    'std_msgs/msg/String': std_msgs.msg.String,
    'std_msgs/msg/UInt16': std_msgs.msg.UInt16,
    'std_msgs/msg/UInt16MultiArray': std_msgs.msg.UInt16MultiArray,
    'std_msgs/msg/UInt32': std_msgs.msg.UInt32,
    'std_msgs/msg/UInt32MultiArray': std_msgs.msg.UInt32MultiArray,
    'std_msgs/msg/UInt64': std_msgs.msg.UInt64,
    'std_msgs/msg/UInt64MultiArray': std_msgs.msg.UInt64MultiArray,
    'std_msgs/msg/UInt8': std_msgs.msg.UInt8,
    'std_msgs/msg/UInt8MultiArray': std_msgs.msg.UInt8MultiArray,
    'std_msgs/msg/descriptor/Bool': std_msgs.msg.descriptor.Bool,
    'std_msgs/msg/descriptor/Byte': std_msgs.msg.descriptor.Byte,
    'std_msgs/msg/descriptor/ByteMultiArray': std_msgs.msg.descriptor.ByteMultiArray,
    'std_msgs/msg/descriptor/Char': std_msgs.msg.descriptor.Char,
    'std_msgs/msg/descriptor/ColorRGBA': std_msgs.msg.descriptor.ColorRGBA,
    'std_msgs/msg/descriptor/Empty': std_msgs.msg.descriptor.Empty,
    'std_msgs/msg/descriptor/Float32': std_msgs.msg.descriptor.Float32,
    'std_msgs/msg/descriptor/Float32MultiArray': std_msgs.msg.descriptor.Float32MultiArray,
    'std_msgs/msg/descriptor/Float64': std_msgs.msg.descriptor.Float64,
    'std_msgs/msg/descriptor/Float64MultiArray': std_msgs.msg.descriptor.Float64MultiArray,
    'std_msgs/msg/descriptor/Header': std_msgs.msg.descriptor.Header,
    'std_msgs/msg/descriptor/Int16': std_msgs.msg.descriptor.Int16,
    'std_msgs/msg/descriptor/Int16MultiArray': std_msgs.msg.descriptor.Int16MultiArray,
    'std_msgs/msg/descriptor/Int32': std_msgs.msg.descriptor.Int32,
    'std_msgs/msg/descriptor/Int32MultiArray': std_msgs.msg.descriptor.Int32MultiArray,
    'std_msgs/msg/descriptor/Int64': std_msgs.msg.descriptor.Int64,
    'std_msgs/msg/descriptor/Int64MultiArray': std_msgs.msg.descriptor.Int64MultiArray,
    'std_msgs/msg/descriptor/Int8': std_msgs.msg.descriptor.Int8,
    'std_msgs/msg/descriptor/Int8MultiArray': std_msgs.msg.descriptor.Int8MultiArray,
    'std_msgs/msg/descriptor/MultiArrayDimension': std_msgs.msg.descriptor.MultiArrayDimension,
    'std_msgs/msg/descriptor/MultiArrayLayout': std_msgs.msg.descriptor.MultiArrayLayout,
    'std_msgs/msg/descriptor/String': std_msgs.msg.descriptor.String,
    'std_msgs/msg/descriptor/UInt16': std_msgs.msg.descriptor.UInt16,
    'std_msgs/msg/descriptor/UInt16MultiArray': std_msgs.msg.descriptor.UInt16MultiArray,
    'std_msgs/msg/descriptor/UInt32': std_msgs.msg.descriptor.UInt32,
    'std_msgs/msg/descriptor/UInt32MultiArray': std_msgs.msg.descriptor.UInt32MultiArray,
    'std_msgs/msg/descriptor/UInt64': std_msgs.msg.descriptor.UInt64,
    'std_msgs/msg/descriptor/UInt64MultiArray': std_msgs.msg.descriptor.UInt64MultiArray,
    'std_msgs/msg/descriptor/UInt8': std_msgs.msg.descriptor.UInt8,
    'std_msgs/msg/descriptor/UInt8MultiArray': std_msgs.msg.descriptor.UInt8MultiArray,
    'std_srvs/srv/Empty_Request': std_srvs.srv.Empty_Request,
    'std_srvs/srv/Empty_Response': std_srvs.srv.Empty_Response,
    'std_srvs/srv/SetBool_Request': std_srvs.srv.SetBool_Request,
    'std_srvs/srv/SetBool_Response': std_srvs.srv.SetBool_Response,
    'std_srvs/srv/Trigger_Request': std_srvs.srv.Trigger_Request,
    'std_srvs/srv/Trigger_Response': std_srvs.srv.Trigger_Response,
    'std_srvs/srv/descriptor/Empty_Request': std_srvs.srv.descriptor.Empty_Request,
    'std_srvs/srv/descriptor/Empty_Response': std_srvs.srv.descriptor.Empty_Response,
    'std_srvs/srv/descriptor/SetBool_Request': std_srvs.srv.descriptor.SetBool_Request,
    'std_srvs/srv/descriptor/SetBool_Response': std_srvs.srv.descriptor.SetBool_Response,
    'std_srvs/srv/descriptor/Trigger_Request': std_srvs.srv.descriptor.Trigger_Request,
    'std_srvs/srv/descriptor/Trigger_Response': std_srvs.srv.descriptor.Trigger_Response,
    'stereo_msgs/msg/DisparityImage': stereo_msgs.msg.DisparityImage,
    'stereo_msgs/msg/descriptor/DisparityImage': stereo_msgs.msg.descriptor.DisparityImage,
    'test_msgs/action/Fibonacci_Feedback': test_msgs.action.Fibonacci_Feedback,
    'test_msgs/action/Fibonacci_FeedbackMessage': test_msgs.action.Fibonacci_FeedbackMessage,
    'test_msgs/action/Fibonacci_GetResult_Request': test_msgs.action.Fibonacci_GetResult_Request,
    'test_msgs/action/Fibonacci_GetResult_Response': test_msgs.action.Fibonacci_GetResult_Response,
    'test_msgs/action/Fibonacci_Goal': test_msgs.action.Fibonacci_Goal,
    'test_msgs/action/Fibonacci_Result': test_msgs.action.Fibonacci_Result,
    'test_msgs/action/Fibonacci_SendGoal_Request': test_msgs.action.Fibonacci_SendGoal_Request,
    'test_msgs/action/Fibonacci_SendGoal_Response': test_msgs.action.Fibonacci_SendGoal_Response,
    'test_msgs/action/NestedMessage_Feedback': test_msgs.action.NestedMessage_Feedback,
    'test_msgs/action/NestedMessage_FeedbackMessage': test_msgs.action.NestedMessage_FeedbackMessage,
    'test_msgs/action/NestedMessage_GetResult_Request': test_msgs.action.NestedMessage_GetResult_Request,
    'test_msgs/action/NestedMessage_GetResult_Response': test_msgs.action.NestedMessage_GetResult_Response,
    'test_msgs/action/NestedMessage_Goal': test_msgs.action.NestedMessage_Goal,
    'test_msgs/action/NestedMessage_Result': test_msgs.action.NestedMessage_Result,
    'test_msgs/action/NestedMessage_SendGoal_Request': test_msgs.action.NestedMessage_SendGoal_Request,
    'test_msgs/action/NestedMessage_SendGoal_Response': test_msgs.action.NestedMessage_SendGoal_Response,
    'test_msgs/action/descriptor/Fibonacci_Feedback': test_msgs.action.descriptor.Fibonacci_Feedback,
    'test_msgs/action/descriptor/Fibonacci_FeedbackMessage': test_msgs.action.descriptor.Fibonacci_FeedbackMessage,
    'test_msgs/action/descriptor/Fibonacci_GetResult_Request': test_msgs.action.descriptor.Fibonacci_GetResult_Request,
    'test_msgs/action/descriptor/Fibonacci_GetResult_Response': test_msgs.action.descriptor.Fibonacci_GetResult_Response,
    'test_msgs/action/descriptor/Fibonacci_Goal': test_msgs.action.descriptor.Fibonacci_Goal,
    'test_msgs/action/descriptor/Fibonacci_Result': test_msgs.action.descriptor.Fibonacci_Result,
    'test_msgs/action/descriptor/Fibonacci_SendGoal_Request': test_msgs.action.descriptor.Fibonacci_SendGoal_Request,
    'test_msgs/action/descriptor/Fibonacci_SendGoal_Response': test_msgs.action.descriptor.Fibonacci_SendGoal_Response,
    'test_msgs/action/descriptor/NestedMessage_Feedback': test_msgs.action.descriptor.NestedMessage_Feedback,
    'test_msgs/action/descriptor/NestedMessage_FeedbackMessage': test_msgs.action.descriptor.NestedMessage_FeedbackMessage,
    'test_msgs/action/descriptor/NestedMessage_GetResult_Request': test_msgs.action.descriptor.NestedMessage_GetResult_Request,
    'test_msgs/action/descriptor/NestedMessage_GetResult_Response': test_msgs.action.descriptor.NestedMessage_GetResult_Response,
    'test_msgs/action/descriptor/NestedMessage_Goal': test_msgs.action.descriptor.NestedMessage_Goal,
    'test_msgs/action/descriptor/NestedMessage_Result': test_msgs.action.descriptor.NestedMessage_Result,
    'test_msgs/action/descriptor/NestedMessage_SendGoal_Request': test_msgs.action.descriptor.NestedMessage_SendGoal_Request,
    'test_msgs/action/descriptor/NestedMessage_SendGoal_Response': test_msgs.action.descriptor.NestedMessage_SendGoal_Response,
    'test_msgs/msg/Arrays': test_msgs.msg.Arrays,
    'test_msgs/msg/BasicTypes': test_msgs.msg.BasicTypes,
    'test_msgs/msg/BoundedPlainSequences': test_msgs.msg.BoundedPlainSequences,
    'test_msgs/msg/BoundedSequences': test_msgs.msg.BoundedSequences,
    'test_msgs/msg/Builtins': test_msgs.msg.Builtins,
    'test_msgs/msg/Constants': test_msgs.msg.Constants,
    'test_msgs/msg/Defaults': test_msgs.msg.Defaults,
    'test_msgs/msg/Empty': test_msgs.msg.Empty,
    'test_msgs/msg/MultiNested': test_msgs.msg.MultiNested,
    'test_msgs/msg/Nested': test_msgs.msg.Nested,
    'test_msgs/msg/Strings': test_msgs.msg.Strings,
    'test_msgs/msg/UnboundedSequences': test_msgs.msg.UnboundedSequences,
    'test_msgs/msg/WStrings': test_msgs.msg.WStrings,
    'test_msgs/msg/descriptor/Arrays': test_msgs.msg.descriptor.Arrays,
    'test_msgs/msg/descriptor/BasicTypes': test_msgs.msg.descriptor.BasicTypes,
    'test_msgs/msg/descriptor/BoundedPlainSequences': test_msgs.msg.descriptor.BoundedPlainSequences,
    'test_msgs/msg/descriptor/BoundedSequences': test_msgs.msg.descriptor.BoundedSequences,
    'test_msgs/msg/descriptor/Builtins': test_msgs.msg.descriptor.Builtins,
    'test_msgs/msg/descriptor/Constants': test_msgs.msg.descriptor.Constants,
    'test_msgs/msg/descriptor/Defaults': test_msgs.msg.descriptor.Defaults,
    'test_msgs/msg/descriptor/Empty': test_msgs.msg.descriptor.Empty,
    'test_msgs/msg/descriptor/MultiNested': test_msgs.msg.descriptor.MultiNested,
    'test_msgs/msg/descriptor/Nested': test_msgs.msg.descriptor.Nested,
    'test_msgs/msg/descriptor/Strings': test_msgs.msg.descriptor.Strings,
    'test_msgs/msg/descriptor/UnboundedSequences': test_msgs.msg.descriptor.UnboundedSequences,
    'test_msgs/msg/descriptor/WStrings': test_msgs.msg.descriptor.WStrings,
    'test_msgs/srv/Arrays_Request': test_msgs.srv.Arrays_Request,
    'test_msgs/srv/Arrays_Response': test_msgs.srv.Arrays_Response,
    'test_msgs/srv/BasicTypes_Request': test_msgs.srv.BasicTypes_Request,
    'test_msgs/srv/BasicTypes_Response': test_msgs.srv.BasicTypes_Response,
    'test_msgs/srv/Empty_Request': test_msgs.srv.Empty_Request,
    'test_msgs/srv/Empty_Response': test_msgs.srv.Empty_Response,
    'test_msgs/srv/descriptor/Arrays_Request': test_msgs.srv.descriptor.Arrays_Request,
    'test_msgs/srv/descriptor/Arrays_Response': test_msgs.srv.descriptor.Arrays_Response,
    'test_msgs/srv/descriptor/BasicTypes_Request': test_msgs.srv.descriptor.BasicTypes_Request,
    'test_msgs/srv/descriptor/BasicTypes_Response': test_msgs.srv.descriptor.BasicTypes_Response,
    'test_msgs/srv/descriptor/Empty_Request': test_msgs.srv.descriptor.Empty_Request,
    'test_msgs/srv/descriptor/Empty_Response': test_msgs.srv.descriptor.Empty_Response,
    'tf2_msgs/action/LookupTransform_Feedback': tf2_msgs.action.LookupTransform_Feedback,
    'tf2_msgs/action/LookupTransform_FeedbackMessage': tf2_msgs.action.LookupTransform_FeedbackMessage,
    'tf2_msgs/action/LookupTransform_GetResult_Request': tf2_msgs.action.LookupTransform_GetResult_Request,
    'tf2_msgs/action/LookupTransform_GetResult_Response': tf2_msgs.action.LookupTransform_GetResult_Response,
    'tf2_msgs/action/LookupTransform_Goal': tf2_msgs.action.LookupTransform_Goal,
    'tf2_msgs/action/LookupTransform_Result': tf2_msgs.action.LookupTransform_Result,
    'tf2_msgs/action/LookupTransform_SendGoal_Request': tf2_msgs.action.LookupTransform_SendGoal_Request,
    'tf2_msgs/action/LookupTransform_SendGoal_Response': tf2_msgs.action.LookupTransform_SendGoal_Response,
    'tf2_msgs/action/descriptor/LookupTransform_Feedback': tf2_msgs.action.descriptor.LookupTransform_Feedback,
    'tf2_msgs/action/descriptor/LookupTransform_FeedbackMessage': tf2_msgs.action.descriptor.LookupTransform_FeedbackMessage,
    'tf2_msgs/action/descriptor/LookupTransform_GetResult_Request': tf2_msgs.action.descriptor.LookupTransform_GetResult_Request,
    'tf2_msgs/action/descriptor/LookupTransform_GetResult_Response': tf2_msgs.action.descriptor.LookupTransform_GetResult_Response,
    'tf2_msgs/action/descriptor/LookupTransform_Goal': tf2_msgs.action.descriptor.LookupTransform_Goal,
    'tf2_msgs/action/descriptor/LookupTransform_Result': tf2_msgs.action.descriptor.LookupTransform_Result,
    'tf2_msgs/action/descriptor/LookupTransform_SendGoal_Request': tf2_msgs.action.descriptor.LookupTransform_SendGoal_Request,
    'tf2_msgs/action/descriptor/LookupTransform_SendGoal_Response': tf2_msgs.action.descriptor.LookupTransform_SendGoal_Response,
    'tf2_msgs/msg/TF2Error': tf2_msgs.msg.TF2Error,
    'tf2_msgs/msg/TFMessage': tf2_msgs.msg.TFMessage,
    'tf2_msgs/msg/descriptor/TF2Error': tf2_msgs.msg.descriptor.TF2Error,
    'tf2_msgs/msg/descriptor/TFMessage': tf2_msgs.msg.descriptor.TFMessage,
    'tf2_msgs/srv/FrameGraph_Request': tf2_msgs.srv.FrameGraph_Request,
    'tf2_msgs/srv/FrameGraph_Response': tf2_msgs.srv.FrameGraph_Response,
    'tf2_msgs/srv/descriptor/FrameGraph_Request': tf2_msgs.srv.descriptor.FrameGraph_Request,
    'tf2_msgs/srv/descriptor/FrameGraph_Response': tf2_msgs.srv.descriptor.FrameGraph_Response,
    'trajectory_msgs/msg/JointTrajectory': trajectory_msgs.msg.JointTrajectory,
    'trajectory_msgs/msg/JointTrajectoryPoint': trajectory_msgs.msg.JointTrajectoryPoint,
    'trajectory_msgs/msg/MultiDOFJointTrajectory': trajectory_msgs.msg.MultiDOFJointTrajectory,
    'trajectory_msgs/msg/MultiDOFJointTrajectoryPoint': trajectory_msgs.msg.MultiDOFJointTrajectoryPoint,
    'trajectory_msgs/msg/descriptor/JointTrajectory': trajectory_msgs.msg.descriptor.JointTrajectory,
    'trajectory_msgs/msg/descriptor/JointTrajectoryPoint': trajectory_msgs.msg.descriptor.JointTrajectoryPoint,
    'trajectory_msgs/msg/descriptor/MultiDOFJointTrajectory': trajectory_msgs.msg.descriptor.MultiDOFJointTrajectory,
    'trajectory_msgs/msg/descriptor/MultiDOFJointTrajectoryPoint': trajectory_msgs.msg.descriptor.MultiDOFJointTrajectoryPoint,
    'turtlesim/action/RotateAbsolute_Feedback': turtlesim.action.RotateAbsolute_Feedback,
    'turtlesim/action/RotateAbsolute_FeedbackMessage': turtlesim.action.RotateAbsolute_FeedbackMessage,
    'turtlesim/action/RotateAbsolute_GetResult_Request': turtlesim.action.RotateAbsolute_GetResult_Request,
    'turtlesim/action/RotateAbsolute_GetResult_Response': turtlesim.action.RotateAbsolute_GetResult_Response,
    'turtlesim/action/RotateAbsolute_Goal': turtlesim.action.RotateAbsolute_Goal,
    'turtlesim/action/RotateAbsolute_Result': turtlesim.action.RotateAbsolute_Result,
    'turtlesim/action/RotateAbsolute_SendGoal_Request': turtlesim.action.RotateAbsolute_SendGoal_Request,
    'turtlesim/action/RotateAbsolute_SendGoal_Response': turtlesim.action.RotateAbsolute_SendGoal_Response,
    'turtlesim/action/descriptor/RotateAbsolute_Feedback': turtlesim.action.descriptor.RotateAbsolute_Feedback,
    'turtlesim/action/descriptor/RotateAbsolute_FeedbackMessage': turtlesim.action.descriptor.RotateAbsolute_FeedbackMessage,
    'turtlesim/action/descriptor/RotateAbsolute_GetResult_Request': turtlesim.action.descriptor.RotateAbsolute_GetResult_Request,
    'turtlesim/action/descriptor/RotateAbsolute_GetResult_Response': turtlesim.action.descriptor.RotateAbsolute_GetResult_Response,
    'turtlesim/action/descriptor/RotateAbsolute_Goal': turtlesim.action.descriptor.RotateAbsolute_Goal,
    'turtlesim/action/descriptor/RotateAbsolute_Result': turtlesim.action.descriptor.RotateAbsolute_Result,
    'turtlesim/action/descriptor/RotateAbsolute_SendGoal_Request': turtlesim.action.descriptor.RotateAbsolute_SendGoal_Request,
    'turtlesim/action/descriptor/RotateAbsolute_SendGoal_Response': turtlesim.action.descriptor.RotateAbsolute_SendGoal_Response,
    'turtlesim/msg/Color': turtlesim.msg.Color,
    'turtlesim/msg/Pose': turtlesim.msg.Pose,
    'turtlesim/msg/descriptor/Color': turtlesim.msg.descriptor.Color,
    'turtlesim/msg/descriptor/Pose': turtlesim.msg.descriptor.Pose,
    'turtlesim/srv/Kill_Request': turtlesim.srv.Kill_Request,
    'turtlesim/srv/Kill_Response': turtlesim.srv.Kill_Response,
    'turtlesim/srv/SetPen_Request': turtlesim.srv.SetPen_Request,
    'turtlesim/srv/SetPen_Response': turtlesim.srv.SetPen_Response,
    'turtlesim/srv/Spawn_Request': turtlesim.srv.Spawn_Request,
    'turtlesim/srv/Spawn_Response': turtlesim.srv.Spawn_Response,
    'turtlesim/srv/TeleportAbsolute_Request': turtlesim.srv.TeleportAbsolute_Request,
    'turtlesim/srv/TeleportAbsolute_Response': turtlesim.srv.TeleportAbsolute_Response,
    'turtlesim/srv/TeleportRelative_Request': turtlesim.srv.TeleportRelative_Request,
    'turtlesim/srv/TeleportRelative_Response': turtlesim.srv.TeleportRelative_Response,
    'turtlesim/srv/descriptor/Kill_Request': turtlesim.srv.descriptor.Kill_Request,
    'turtlesim/srv/descriptor/Kill_Response': turtlesim.srv.descriptor.Kill_Response,
    'turtlesim/srv/descriptor/SetPen_Request': turtlesim.srv.descriptor.SetPen_Request,
    'turtlesim/srv/descriptor/SetPen_Response': turtlesim.srv.descriptor.SetPen_Response,
    'turtlesim/srv/descriptor/Spawn_Request': turtlesim.srv.descriptor.Spawn_Request,
    'turtlesim/srv/descriptor/Spawn_Response': turtlesim.srv.descriptor.Spawn_Response,
    'turtlesim/srv/descriptor/TeleportAbsolute_Request': turtlesim.srv.descriptor.TeleportAbsolute_Request,
    'turtlesim/srv/descriptor/TeleportAbsolute_Response': turtlesim.srv.descriptor.TeleportAbsolute_Response,
    'turtlesim/srv/descriptor/TeleportRelative_Request': turtlesim.srv.descriptor.TeleportRelative_Request,
    'turtlesim/srv/descriptor/TeleportRelative_Response': turtlesim.srv.descriptor.TeleportRelative_Response,
    'unique_identifier_msgs/msg/UUID': unique_identifier_msgs.msg.UUID,
    'unique_identifier_msgs/msg/descriptor/UUID': unique_identifier_msgs.msg.descriptor.UUID,
    'visualization_msgs/msg/ImageMarker': visualization_msgs.msg.ImageMarker,
    'visualization_msgs/msg/InteractiveMarker': visualization_msgs.msg.InteractiveMarker,
    'visualization_msgs/msg/InteractiveMarkerControl': visualization_msgs.msg.InteractiveMarkerControl,
    'visualization_msgs/msg/InteractiveMarkerFeedback': visualization_msgs.msg.InteractiveMarkerFeedback,
    'visualization_msgs/msg/InteractiveMarkerInit': visualization_msgs.msg.InteractiveMarkerInit,
    'visualization_msgs/msg/InteractiveMarkerPose': visualization_msgs.msg.InteractiveMarkerPose,
    'visualization_msgs/msg/InteractiveMarkerUpdate': visualization_msgs.msg.InteractiveMarkerUpdate,
    'visualization_msgs/msg/Marker': visualization_msgs.msg.Marker,
    'visualization_msgs/msg/MarkerArray': visualization_msgs.msg.MarkerArray,
    'visualization_msgs/msg/MenuEntry': visualization_msgs.msg.MenuEntry,
    'visualization_msgs/msg/MeshFile': visualization_msgs.msg.MeshFile,
    'visualization_msgs/msg/UVCoordinate': visualization_msgs.msg.UVCoordinate,
    'visualization_msgs/msg/descriptor/ImageMarker': visualization_msgs.msg.descriptor.ImageMarker,
    'visualization_msgs/msg/descriptor/InteractiveMarker': visualization_msgs.msg.descriptor.InteractiveMarker,
    'visualization_msgs/msg/descriptor/InteractiveMarkerControl': visualization_msgs.msg.descriptor.InteractiveMarkerControl,
    'visualization_msgs/msg/descriptor/InteractiveMarkerFeedback': visualization_msgs.msg.descriptor.InteractiveMarkerFeedback,
    'visualization_msgs/msg/descriptor/InteractiveMarkerInit': visualization_msgs.msg.descriptor.InteractiveMarkerInit,
    'visualization_msgs/msg/descriptor/InteractiveMarkerPose': visualization_msgs.msg.descriptor.InteractiveMarkerPose,
    'visualization_msgs/msg/descriptor/InteractiveMarkerUpdate': visualization_msgs.msg.descriptor.InteractiveMarkerUpdate,
    'visualization_msgs/msg/descriptor/Marker': visualization_msgs.msg.descriptor.Marker,
    'visualization_msgs/msg/descriptor/MarkerArray': visualization_msgs.msg.descriptor.MarkerArray,
    'visualization_msgs/msg/descriptor/MenuEntry': visualization_msgs.msg.descriptor.MenuEntry,
    'visualization_msgs/msg/descriptor/MeshFile': visualization_msgs.msg.descriptor.MeshFile,
    'visualization_msgs/msg/descriptor/UVCoordinate': visualization_msgs.msg.descriptor.UVCoordinate,
    'visualization_msgs/srv/GetInteractiveMarkers_Request': visualization_msgs.srv.GetInteractiveMarkers_Request,
    'visualization_msgs/srv/GetInteractiveMarkers_Response': visualization_msgs.srv.GetInteractiveMarkers_Response,
    'visualization_msgs/srv/descriptor/GetInteractiveMarkers_Request': visualization_msgs.srv.descriptor.GetInteractiveMarkers_Request,
    'visualization_msgs/srv/descriptor/GetInteractiveMarkers_Response': visualization_msgs.srv.descriptor.GetInteractiveMarkers_Response,
  };
  type MessageTypeClassName = keyof MessagesMap;
  type Message = MessagesMap[MessageTypeClassName];
  type MessageType<T> = T extends MessageTypeClassName ? MessagesMap[T] : object;

  type MessageTypeClassConstructorMap = {
    'string': never,
    'action_msgs/msg/GoalInfo': action_msgs.msg.GoalInfoConstructor,
    'action_msgs/msg/GoalStatus': action_msgs.msg.GoalStatusConstructor,
    'action_msgs/msg/GoalStatusArray': action_msgs.msg.GoalStatusArrayConstructor,
    'action_msgs/msg/descriptor/GoalInfo': action_msgs.msg.descriptor.GoalInfoConstructor,
    'action_msgs/msg/descriptor/GoalStatus': action_msgs.msg.descriptor.GoalStatusConstructor,
    'action_msgs/msg/descriptor/GoalStatusArray': action_msgs.msg.descriptor.GoalStatusArrayConstructor,
    'action_msgs/srv/CancelGoal_Request': action_msgs.srv.CancelGoal_RequestConstructor,
    'action_msgs/srv/CancelGoal_Response': action_msgs.srv.CancelGoal_ResponseConstructor,
    'action_msgs/srv/descriptor/CancelGoal_Request': action_msgs.srv.descriptor.CancelGoal_RequestConstructor,
    'action_msgs/srv/descriptor/CancelGoal_Response': action_msgs.srv.descriptor.CancelGoal_ResponseConstructor,
    'action_tutorials_interfaces/action/Fibonacci_Feedback': action_tutorials_interfaces.action.Fibonacci_FeedbackConstructor,
    'action_tutorials_interfaces/action/Fibonacci_FeedbackMessage': action_tutorials_interfaces.action.Fibonacci_FeedbackMessageConstructor,
    'action_tutorials_interfaces/action/Fibonacci_GetResult_Request': action_tutorials_interfaces.action.Fibonacci_GetResult_RequestConstructor,
    'action_tutorials_interfaces/action/Fibonacci_GetResult_Response': action_tutorials_interfaces.action.Fibonacci_GetResult_ResponseConstructor,
    'action_tutorials_interfaces/action/Fibonacci_Goal': action_tutorials_interfaces.action.Fibonacci_GoalConstructor,
    'action_tutorials_interfaces/action/Fibonacci_Result': action_tutorials_interfaces.action.Fibonacci_ResultConstructor,
    'action_tutorials_interfaces/action/Fibonacci_SendGoal_Request': action_tutorials_interfaces.action.Fibonacci_SendGoal_RequestConstructor,
    'action_tutorials_interfaces/action/Fibonacci_SendGoal_Response': action_tutorials_interfaces.action.Fibonacci_SendGoal_ResponseConstructor,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_Feedback': action_tutorials_interfaces.action.descriptor.Fibonacci_FeedbackConstructor,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_FeedbackMessage': action_tutorials_interfaces.action.descriptor.Fibonacci_FeedbackMessageConstructor,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_GetResult_Request': action_tutorials_interfaces.action.descriptor.Fibonacci_GetResult_RequestConstructor,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_GetResult_Response': action_tutorials_interfaces.action.descriptor.Fibonacci_GetResult_ResponseConstructor,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_Goal': action_tutorials_interfaces.action.descriptor.Fibonacci_GoalConstructor,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_Result': action_tutorials_interfaces.action.descriptor.Fibonacci_ResultConstructor,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_SendGoal_Request': action_tutorials_interfaces.action.descriptor.Fibonacci_SendGoal_RequestConstructor,
    'action_tutorials_interfaces/action/descriptor/Fibonacci_SendGoal_Response': action_tutorials_interfaces.action.descriptor.Fibonacci_SendGoal_ResponseConstructor,
    'actionlib_msgs/msg/GoalID': actionlib_msgs.msg.GoalIDConstructor,
    'actionlib_msgs/msg/GoalStatus': actionlib_msgs.msg.GoalStatusConstructor,
    'actionlib_msgs/msg/GoalStatusArray': actionlib_msgs.msg.GoalStatusArrayConstructor,
    'actionlib_msgs/msg/descriptor/GoalID': actionlib_msgs.msg.descriptor.GoalIDConstructor,
    'actionlib_msgs/msg/descriptor/GoalStatus': actionlib_msgs.msg.descriptor.GoalStatusConstructor,
    'actionlib_msgs/msg/descriptor/GoalStatusArray': actionlib_msgs.msg.descriptor.GoalStatusArrayConstructor,
    'builtin_interfaces/msg/Duration': builtin_interfaces.msg.DurationConstructor,
    'builtin_interfaces/msg/Time': builtin_interfaces.msg.TimeConstructor,
    'builtin_interfaces/msg/descriptor/Duration': builtin_interfaces.msg.descriptor.DurationConstructor,
    'builtin_interfaces/msg/descriptor/Time': builtin_interfaces.msg.descriptor.TimeConstructor,
    'composition_interfaces/srv/ListNodes_Request': composition_interfaces.srv.ListNodes_RequestConstructor,
    'composition_interfaces/srv/ListNodes_Response': composition_interfaces.srv.ListNodes_ResponseConstructor,
    'composition_interfaces/srv/LoadNode_Request': composition_interfaces.srv.LoadNode_RequestConstructor,
    'composition_interfaces/srv/LoadNode_Response': composition_interfaces.srv.LoadNode_ResponseConstructor,
    'composition_interfaces/srv/UnloadNode_Request': composition_interfaces.srv.UnloadNode_RequestConstructor,
    'composition_interfaces/srv/UnloadNode_Response': composition_interfaces.srv.UnloadNode_ResponseConstructor,
    'composition_interfaces/srv/descriptor/ListNodes_Request': composition_interfaces.srv.descriptor.ListNodes_RequestConstructor,
    'composition_interfaces/srv/descriptor/ListNodes_Response': composition_interfaces.srv.descriptor.ListNodes_ResponseConstructor,
    'composition_interfaces/srv/descriptor/LoadNode_Request': composition_interfaces.srv.descriptor.LoadNode_RequestConstructor,
    'composition_interfaces/srv/descriptor/LoadNode_Response': composition_interfaces.srv.descriptor.LoadNode_ResponseConstructor,
    'composition_interfaces/srv/descriptor/UnloadNode_Request': composition_interfaces.srv.descriptor.UnloadNode_RequestConstructor,
    'composition_interfaces/srv/descriptor/UnloadNode_Response': composition_interfaces.srv.descriptor.UnloadNode_ResponseConstructor,
    'diagnostic_msgs/msg/DiagnosticArray': diagnostic_msgs.msg.DiagnosticArrayConstructor,
    'diagnostic_msgs/msg/DiagnosticStatus': diagnostic_msgs.msg.DiagnosticStatusConstructor,
    'diagnostic_msgs/msg/KeyValue': diagnostic_msgs.msg.KeyValueConstructor,
    'diagnostic_msgs/msg/descriptor/DiagnosticArray': diagnostic_msgs.msg.descriptor.DiagnosticArrayConstructor,
    'diagnostic_msgs/msg/descriptor/DiagnosticStatus': diagnostic_msgs.msg.descriptor.DiagnosticStatusConstructor,
    'diagnostic_msgs/msg/descriptor/KeyValue': diagnostic_msgs.msg.descriptor.KeyValueConstructor,
    'diagnostic_msgs/srv/AddDiagnostics_Request': diagnostic_msgs.srv.AddDiagnostics_RequestConstructor,
    'diagnostic_msgs/srv/AddDiagnostics_Response': diagnostic_msgs.srv.AddDiagnostics_ResponseConstructor,
    'diagnostic_msgs/srv/SelfTest_Request': diagnostic_msgs.srv.SelfTest_RequestConstructor,
    'diagnostic_msgs/srv/SelfTest_Response': diagnostic_msgs.srv.SelfTest_ResponseConstructor,
    'diagnostic_msgs/srv/descriptor/AddDiagnostics_Request': diagnostic_msgs.srv.descriptor.AddDiagnostics_RequestConstructor,
    'diagnostic_msgs/srv/descriptor/AddDiagnostics_Response': diagnostic_msgs.srv.descriptor.AddDiagnostics_ResponseConstructor,
    'diagnostic_msgs/srv/descriptor/SelfTest_Request': diagnostic_msgs.srv.descriptor.SelfTest_RequestConstructor,
    'diagnostic_msgs/srv/descriptor/SelfTest_Response': diagnostic_msgs.srv.descriptor.SelfTest_ResponseConstructor,
    'example_interfaces/action/Fibonacci_Feedback': example_interfaces.action.Fibonacci_FeedbackConstructor,
    'example_interfaces/action/Fibonacci_FeedbackMessage': example_interfaces.action.Fibonacci_FeedbackMessageConstructor,
    'example_interfaces/action/Fibonacci_GetResult_Request': example_interfaces.action.Fibonacci_GetResult_RequestConstructor,
    'example_interfaces/action/Fibonacci_GetResult_Response': example_interfaces.action.Fibonacci_GetResult_ResponseConstructor,
    'example_interfaces/action/Fibonacci_Goal': example_interfaces.action.Fibonacci_GoalConstructor,
    'example_interfaces/action/Fibonacci_Result': example_interfaces.action.Fibonacci_ResultConstructor,
    'example_interfaces/action/Fibonacci_SendGoal_Request': example_interfaces.action.Fibonacci_SendGoal_RequestConstructor,
    'example_interfaces/action/Fibonacci_SendGoal_Response': example_interfaces.action.Fibonacci_SendGoal_ResponseConstructor,
    'example_interfaces/action/descriptor/Fibonacci_Feedback': example_interfaces.action.descriptor.Fibonacci_FeedbackConstructor,
    'example_interfaces/action/descriptor/Fibonacci_FeedbackMessage': example_interfaces.action.descriptor.Fibonacci_FeedbackMessageConstructor,
    'example_interfaces/action/descriptor/Fibonacci_GetResult_Request': example_interfaces.action.descriptor.Fibonacci_GetResult_RequestConstructor,
    'example_interfaces/action/descriptor/Fibonacci_GetResult_Response': example_interfaces.action.descriptor.Fibonacci_GetResult_ResponseConstructor,
    'example_interfaces/action/descriptor/Fibonacci_Goal': example_interfaces.action.descriptor.Fibonacci_GoalConstructor,
    'example_interfaces/action/descriptor/Fibonacci_Result': example_interfaces.action.descriptor.Fibonacci_ResultConstructor,
    'example_interfaces/action/descriptor/Fibonacci_SendGoal_Request': example_interfaces.action.descriptor.Fibonacci_SendGoal_RequestConstructor,
    'example_interfaces/action/descriptor/Fibonacci_SendGoal_Response': example_interfaces.action.descriptor.Fibonacci_SendGoal_ResponseConstructor,
    'example_interfaces/msg/Bool': example_interfaces.msg.BoolConstructor,
    'example_interfaces/msg/Byte': example_interfaces.msg.ByteConstructor,
    'example_interfaces/msg/ByteMultiArray': example_interfaces.msg.ByteMultiArrayConstructor,
    'example_interfaces/msg/Char': example_interfaces.msg.CharConstructor,
    'example_interfaces/msg/Empty': example_interfaces.msg.EmptyConstructor,
    'example_interfaces/msg/Float32': example_interfaces.msg.Float32Constructor,
    'example_interfaces/msg/Float32MultiArray': example_interfaces.msg.Float32MultiArrayConstructor,
    'example_interfaces/msg/Float64': example_interfaces.msg.Float64Constructor,
    'example_interfaces/msg/Float64MultiArray': example_interfaces.msg.Float64MultiArrayConstructor,
    'example_interfaces/msg/Int16': example_interfaces.msg.Int16Constructor,
    'example_interfaces/msg/Int16MultiArray': example_interfaces.msg.Int16MultiArrayConstructor,
    'example_interfaces/msg/Int32': example_interfaces.msg.Int32Constructor,
    'example_interfaces/msg/Int32MultiArray': example_interfaces.msg.Int32MultiArrayConstructor,
    'example_interfaces/msg/Int64': example_interfaces.msg.Int64Constructor,
    'example_interfaces/msg/Int64MultiArray': example_interfaces.msg.Int64MultiArrayConstructor,
    'example_interfaces/msg/Int8': example_interfaces.msg.Int8Constructor,
    'example_interfaces/msg/Int8MultiArray': example_interfaces.msg.Int8MultiArrayConstructor,
    'example_interfaces/msg/MultiArrayDimension': example_interfaces.msg.MultiArrayDimensionConstructor,
    'example_interfaces/msg/MultiArrayLayout': example_interfaces.msg.MultiArrayLayoutConstructor,
    'example_interfaces/msg/String': example_interfaces.msg.StringConstructor,
    'example_interfaces/msg/UInt16': example_interfaces.msg.UInt16Constructor,
    'example_interfaces/msg/UInt16MultiArray': example_interfaces.msg.UInt16MultiArrayConstructor,
    'example_interfaces/msg/UInt32': example_interfaces.msg.UInt32Constructor,
    'example_interfaces/msg/UInt32MultiArray': example_interfaces.msg.UInt32MultiArrayConstructor,
    'example_interfaces/msg/UInt64': example_interfaces.msg.UInt64Constructor,
    'example_interfaces/msg/UInt64MultiArray': example_interfaces.msg.UInt64MultiArrayConstructor,
    'example_interfaces/msg/UInt8': example_interfaces.msg.UInt8Constructor,
    'example_interfaces/msg/UInt8MultiArray': example_interfaces.msg.UInt8MultiArrayConstructor,
    'example_interfaces/msg/WString': example_interfaces.msg.WStringConstructor,
    'example_interfaces/msg/descriptor/Bool': example_interfaces.msg.descriptor.BoolConstructor,
    'example_interfaces/msg/descriptor/Byte': example_interfaces.msg.descriptor.ByteConstructor,
    'example_interfaces/msg/descriptor/ByteMultiArray': example_interfaces.msg.descriptor.ByteMultiArrayConstructor,
    'example_interfaces/msg/descriptor/Char': example_interfaces.msg.descriptor.CharConstructor,
    'example_interfaces/msg/descriptor/Empty': example_interfaces.msg.descriptor.EmptyConstructor,
    'example_interfaces/msg/descriptor/Float32': example_interfaces.msg.descriptor.Float32Constructor,
    'example_interfaces/msg/descriptor/Float32MultiArray': example_interfaces.msg.descriptor.Float32MultiArrayConstructor,
    'example_interfaces/msg/descriptor/Float64': example_interfaces.msg.descriptor.Float64Constructor,
    'example_interfaces/msg/descriptor/Float64MultiArray': example_interfaces.msg.descriptor.Float64MultiArrayConstructor,
    'example_interfaces/msg/descriptor/Int16': example_interfaces.msg.descriptor.Int16Constructor,
    'example_interfaces/msg/descriptor/Int16MultiArray': example_interfaces.msg.descriptor.Int16MultiArrayConstructor,
    'example_interfaces/msg/descriptor/Int32': example_interfaces.msg.descriptor.Int32Constructor,
    'example_interfaces/msg/descriptor/Int32MultiArray': example_interfaces.msg.descriptor.Int32MultiArrayConstructor,
    'example_interfaces/msg/descriptor/Int64': example_interfaces.msg.descriptor.Int64Constructor,
    'example_interfaces/msg/descriptor/Int64MultiArray': example_interfaces.msg.descriptor.Int64MultiArrayConstructor,
    'example_interfaces/msg/descriptor/Int8': example_interfaces.msg.descriptor.Int8Constructor,
    'example_interfaces/msg/descriptor/Int8MultiArray': example_interfaces.msg.descriptor.Int8MultiArrayConstructor,
    'example_interfaces/msg/descriptor/MultiArrayDimension': example_interfaces.msg.descriptor.MultiArrayDimensionConstructor,
    'example_interfaces/msg/descriptor/MultiArrayLayout': example_interfaces.msg.descriptor.MultiArrayLayoutConstructor,
    'example_interfaces/msg/descriptor/String': example_interfaces.msg.descriptor.StringConstructor,
    'example_interfaces/msg/descriptor/UInt16': example_interfaces.msg.descriptor.UInt16Constructor,
    'example_interfaces/msg/descriptor/UInt16MultiArray': example_interfaces.msg.descriptor.UInt16MultiArrayConstructor,
    'example_interfaces/msg/descriptor/UInt32': example_interfaces.msg.descriptor.UInt32Constructor,
    'example_interfaces/msg/descriptor/UInt32MultiArray': example_interfaces.msg.descriptor.UInt32MultiArrayConstructor,
    'example_interfaces/msg/descriptor/UInt64': example_interfaces.msg.descriptor.UInt64Constructor,
    'example_interfaces/msg/descriptor/UInt64MultiArray': example_interfaces.msg.descriptor.UInt64MultiArrayConstructor,
    'example_interfaces/msg/descriptor/UInt8': example_interfaces.msg.descriptor.UInt8Constructor,
    'example_interfaces/msg/descriptor/UInt8MultiArray': example_interfaces.msg.descriptor.UInt8MultiArrayConstructor,
    'example_interfaces/msg/descriptor/WString': example_interfaces.msg.descriptor.WStringConstructor,
    'example_interfaces/srv/AddTwoInts_Request': example_interfaces.srv.AddTwoInts_RequestConstructor,
    'example_interfaces/srv/AddTwoInts_Response': example_interfaces.srv.AddTwoInts_ResponseConstructor,
    'example_interfaces/srv/SetBool_Request': example_interfaces.srv.SetBool_RequestConstructor,
    'example_interfaces/srv/SetBool_Response': example_interfaces.srv.SetBool_ResponseConstructor,
    'example_interfaces/srv/Trigger_Request': example_interfaces.srv.Trigger_RequestConstructor,
    'example_interfaces/srv/Trigger_Response': example_interfaces.srv.Trigger_ResponseConstructor,
    'example_interfaces/srv/descriptor/AddTwoInts_Request': example_interfaces.srv.descriptor.AddTwoInts_RequestConstructor,
    'example_interfaces/srv/descriptor/AddTwoInts_Response': example_interfaces.srv.descriptor.AddTwoInts_ResponseConstructor,
    'example_interfaces/srv/descriptor/SetBool_Request': example_interfaces.srv.descriptor.SetBool_RequestConstructor,
    'example_interfaces/srv/descriptor/SetBool_Response': example_interfaces.srv.descriptor.SetBool_ResponseConstructor,
    'example_interfaces/srv/descriptor/Trigger_Request': example_interfaces.srv.descriptor.Trigger_RequestConstructor,
    'example_interfaces/srv/descriptor/Trigger_Response': example_interfaces.srv.descriptor.Trigger_ResponseConstructor,
    'geometry_msgs/msg/Accel': geometry_msgs.msg.AccelConstructor,
    'geometry_msgs/msg/AccelStamped': geometry_msgs.msg.AccelStampedConstructor,
    'geometry_msgs/msg/AccelWithCovariance': geometry_msgs.msg.AccelWithCovarianceConstructor,
    'geometry_msgs/msg/AccelWithCovarianceStamped': geometry_msgs.msg.AccelWithCovarianceStampedConstructor,
    'geometry_msgs/msg/Inertia': geometry_msgs.msg.InertiaConstructor,
    'geometry_msgs/msg/InertiaStamped': geometry_msgs.msg.InertiaStampedConstructor,
    'geometry_msgs/msg/Point': geometry_msgs.msg.PointConstructor,
    'geometry_msgs/msg/Point32': geometry_msgs.msg.Point32Constructor,
    'geometry_msgs/msg/PointStamped': geometry_msgs.msg.PointStampedConstructor,
    'geometry_msgs/msg/Polygon': geometry_msgs.msg.PolygonConstructor,
    'geometry_msgs/msg/PolygonStamped': geometry_msgs.msg.PolygonStampedConstructor,
    'geometry_msgs/msg/Pose': geometry_msgs.msg.PoseConstructor,
    'geometry_msgs/msg/Pose2D': geometry_msgs.msg.Pose2DConstructor,
    'geometry_msgs/msg/PoseArray': geometry_msgs.msg.PoseArrayConstructor,
    'geometry_msgs/msg/PoseStamped': geometry_msgs.msg.PoseStampedConstructor,
    'geometry_msgs/msg/PoseWithCovariance': geometry_msgs.msg.PoseWithCovarianceConstructor,
    'geometry_msgs/msg/PoseWithCovarianceStamped': geometry_msgs.msg.PoseWithCovarianceStampedConstructor,
    'geometry_msgs/msg/Quaternion': geometry_msgs.msg.QuaternionConstructor,
    'geometry_msgs/msg/QuaternionStamped': geometry_msgs.msg.QuaternionStampedConstructor,
    'geometry_msgs/msg/Transform': geometry_msgs.msg.TransformConstructor,
    'geometry_msgs/msg/TransformStamped': geometry_msgs.msg.TransformStampedConstructor,
    'geometry_msgs/msg/Twist': geometry_msgs.msg.TwistConstructor,
    'geometry_msgs/msg/TwistStamped': geometry_msgs.msg.TwistStampedConstructor,
    'geometry_msgs/msg/TwistWithCovariance': geometry_msgs.msg.TwistWithCovarianceConstructor,
    'geometry_msgs/msg/TwistWithCovarianceStamped': geometry_msgs.msg.TwistWithCovarianceStampedConstructor,
    'geometry_msgs/msg/Vector3': geometry_msgs.msg.Vector3Constructor,
    'geometry_msgs/msg/Vector3Stamped': geometry_msgs.msg.Vector3StampedConstructor,
    'geometry_msgs/msg/VelocityStamped': geometry_msgs.msg.VelocityStampedConstructor,
    'geometry_msgs/msg/Wrench': geometry_msgs.msg.WrenchConstructor,
    'geometry_msgs/msg/WrenchStamped': geometry_msgs.msg.WrenchStampedConstructor,
    'geometry_msgs/msg/descriptor/Accel': geometry_msgs.msg.descriptor.AccelConstructor,
    'geometry_msgs/msg/descriptor/AccelStamped': geometry_msgs.msg.descriptor.AccelStampedConstructor,
    'geometry_msgs/msg/descriptor/AccelWithCovariance': geometry_msgs.msg.descriptor.AccelWithCovarianceConstructor,
    'geometry_msgs/msg/descriptor/AccelWithCovarianceStamped': geometry_msgs.msg.descriptor.AccelWithCovarianceStampedConstructor,
    'geometry_msgs/msg/descriptor/Inertia': geometry_msgs.msg.descriptor.InertiaConstructor,
    'geometry_msgs/msg/descriptor/InertiaStamped': geometry_msgs.msg.descriptor.InertiaStampedConstructor,
    'geometry_msgs/msg/descriptor/Point': geometry_msgs.msg.descriptor.PointConstructor,
    'geometry_msgs/msg/descriptor/Point32': geometry_msgs.msg.descriptor.Point32Constructor,
    'geometry_msgs/msg/descriptor/PointStamped': geometry_msgs.msg.descriptor.PointStampedConstructor,
    'geometry_msgs/msg/descriptor/Polygon': geometry_msgs.msg.descriptor.PolygonConstructor,
    'geometry_msgs/msg/descriptor/PolygonStamped': geometry_msgs.msg.descriptor.PolygonStampedConstructor,
    'geometry_msgs/msg/descriptor/Pose': geometry_msgs.msg.descriptor.PoseConstructor,
    'geometry_msgs/msg/descriptor/Pose2D': geometry_msgs.msg.descriptor.Pose2DConstructor,
    'geometry_msgs/msg/descriptor/PoseArray': geometry_msgs.msg.descriptor.PoseArrayConstructor,
    'geometry_msgs/msg/descriptor/PoseStamped': geometry_msgs.msg.descriptor.PoseStampedConstructor,
    'geometry_msgs/msg/descriptor/PoseWithCovariance': geometry_msgs.msg.descriptor.PoseWithCovarianceConstructor,
    'geometry_msgs/msg/descriptor/PoseWithCovarianceStamped': geometry_msgs.msg.descriptor.PoseWithCovarianceStampedConstructor,
    'geometry_msgs/msg/descriptor/Quaternion': geometry_msgs.msg.descriptor.QuaternionConstructor,
    'geometry_msgs/msg/descriptor/QuaternionStamped': geometry_msgs.msg.descriptor.QuaternionStampedConstructor,
    'geometry_msgs/msg/descriptor/Transform': geometry_msgs.msg.descriptor.TransformConstructor,
    'geometry_msgs/msg/descriptor/TransformStamped': geometry_msgs.msg.descriptor.TransformStampedConstructor,
    'geometry_msgs/msg/descriptor/Twist': geometry_msgs.msg.descriptor.TwistConstructor,
    'geometry_msgs/msg/descriptor/TwistStamped': geometry_msgs.msg.descriptor.TwistStampedConstructor,
    'geometry_msgs/msg/descriptor/TwistWithCovariance': geometry_msgs.msg.descriptor.TwistWithCovarianceConstructor,
    'geometry_msgs/msg/descriptor/TwistWithCovarianceStamped': geometry_msgs.msg.descriptor.TwistWithCovarianceStampedConstructor,
    'geometry_msgs/msg/descriptor/Vector3': geometry_msgs.msg.descriptor.Vector3Constructor,
    'geometry_msgs/msg/descriptor/Vector3Stamped': geometry_msgs.msg.descriptor.Vector3StampedConstructor,
    'geometry_msgs/msg/descriptor/VelocityStamped': geometry_msgs.msg.descriptor.VelocityStampedConstructor,
    'geometry_msgs/msg/descriptor/Wrench': geometry_msgs.msg.descriptor.WrenchConstructor,
    'geometry_msgs/msg/descriptor/WrenchStamped': geometry_msgs.msg.descriptor.WrenchStampedConstructor,
    'lifecycle_msgs/msg/State': lifecycle_msgs.msg.StateConstructor,
    'lifecycle_msgs/msg/Transition': lifecycle_msgs.msg.TransitionConstructor,
    'lifecycle_msgs/msg/TransitionDescription': lifecycle_msgs.msg.TransitionDescriptionConstructor,
    'lifecycle_msgs/msg/TransitionEvent': lifecycle_msgs.msg.TransitionEventConstructor,
    'lifecycle_msgs/msg/descriptor/State': lifecycle_msgs.msg.descriptor.StateConstructor,
    'lifecycle_msgs/msg/descriptor/Transition': lifecycle_msgs.msg.descriptor.TransitionConstructor,
    'lifecycle_msgs/msg/descriptor/TransitionDescription': lifecycle_msgs.msg.descriptor.TransitionDescriptionConstructor,
    'lifecycle_msgs/msg/descriptor/TransitionEvent': lifecycle_msgs.msg.descriptor.TransitionEventConstructor,
    'lifecycle_msgs/srv/ChangeState_Request': lifecycle_msgs.srv.ChangeState_RequestConstructor,
    'lifecycle_msgs/srv/ChangeState_Response': lifecycle_msgs.srv.ChangeState_ResponseConstructor,
    'lifecycle_msgs/srv/GetAvailableStates_Request': lifecycle_msgs.srv.GetAvailableStates_RequestConstructor,
    'lifecycle_msgs/srv/GetAvailableStates_Response': lifecycle_msgs.srv.GetAvailableStates_ResponseConstructor,
    'lifecycle_msgs/srv/GetAvailableTransitions_Request': lifecycle_msgs.srv.GetAvailableTransitions_RequestConstructor,
    'lifecycle_msgs/srv/GetAvailableTransitions_Response': lifecycle_msgs.srv.GetAvailableTransitions_ResponseConstructor,
    'lifecycle_msgs/srv/GetState_Request': lifecycle_msgs.srv.GetState_RequestConstructor,
    'lifecycle_msgs/srv/GetState_Response': lifecycle_msgs.srv.GetState_ResponseConstructor,
    'lifecycle_msgs/srv/descriptor/ChangeState_Request': lifecycle_msgs.srv.descriptor.ChangeState_RequestConstructor,
    'lifecycle_msgs/srv/descriptor/ChangeState_Response': lifecycle_msgs.srv.descriptor.ChangeState_ResponseConstructor,
    'lifecycle_msgs/srv/descriptor/GetAvailableStates_Request': lifecycle_msgs.srv.descriptor.GetAvailableStates_RequestConstructor,
    'lifecycle_msgs/srv/descriptor/GetAvailableStates_Response': lifecycle_msgs.srv.descriptor.GetAvailableStates_ResponseConstructor,
    'lifecycle_msgs/srv/descriptor/GetAvailableTransitions_Request': lifecycle_msgs.srv.descriptor.GetAvailableTransitions_RequestConstructor,
    'lifecycle_msgs/srv/descriptor/GetAvailableTransitions_Response': lifecycle_msgs.srv.descriptor.GetAvailableTransitions_ResponseConstructor,
    'lifecycle_msgs/srv/descriptor/GetState_Request': lifecycle_msgs.srv.descriptor.GetState_RequestConstructor,
    'lifecycle_msgs/srv/descriptor/GetState_Response': lifecycle_msgs.srv.descriptor.GetState_ResponseConstructor,
    'logging_demo/srv/ConfigLogger_Request': logging_demo.srv.ConfigLogger_RequestConstructor,
    'logging_demo/srv/ConfigLogger_Response': logging_demo.srv.ConfigLogger_ResponseConstructor,
    'logging_demo/srv/descriptor/ConfigLogger_Request': logging_demo.srv.descriptor.ConfigLogger_RequestConstructor,
    'logging_demo/srv/descriptor/ConfigLogger_Response': logging_demo.srv.descriptor.ConfigLogger_ResponseConstructor,
    'map_msgs/msg/OccupancyGridUpdate': map_msgs.msg.OccupancyGridUpdateConstructor,
    'map_msgs/msg/PointCloud2Update': map_msgs.msg.PointCloud2UpdateConstructor,
    'map_msgs/msg/ProjectedMap': map_msgs.msg.ProjectedMapConstructor,
    'map_msgs/msg/ProjectedMapInfo': map_msgs.msg.ProjectedMapInfoConstructor,
    'map_msgs/msg/descriptor/OccupancyGridUpdate': map_msgs.msg.descriptor.OccupancyGridUpdateConstructor,
    'map_msgs/msg/descriptor/PointCloud2Update': map_msgs.msg.descriptor.PointCloud2UpdateConstructor,
    'map_msgs/msg/descriptor/ProjectedMap': map_msgs.msg.descriptor.ProjectedMapConstructor,
    'map_msgs/msg/descriptor/ProjectedMapInfo': map_msgs.msg.descriptor.ProjectedMapInfoConstructor,
    'map_msgs/srv/GetMapROI_Request': map_msgs.srv.GetMapROI_RequestConstructor,
    'map_msgs/srv/GetMapROI_Response': map_msgs.srv.GetMapROI_ResponseConstructor,
    'map_msgs/srv/GetPointMapROI_Request': map_msgs.srv.GetPointMapROI_RequestConstructor,
    'map_msgs/srv/GetPointMapROI_Response': map_msgs.srv.GetPointMapROI_ResponseConstructor,
    'map_msgs/srv/GetPointMap_Request': map_msgs.srv.GetPointMap_RequestConstructor,
    'map_msgs/srv/GetPointMap_Response': map_msgs.srv.GetPointMap_ResponseConstructor,
    'map_msgs/srv/ProjectedMapsInfo_Request': map_msgs.srv.ProjectedMapsInfo_RequestConstructor,
    'map_msgs/srv/ProjectedMapsInfo_Response': map_msgs.srv.ProjectedMapsInfo_ResponseConstructor,
    'map_msgs/srv/SaveMap_Request': map_msgs.srv.SaveMap_RequestConstructor,
    'map_msgs/srv/SaveMap_Response': map_msgs.srv.SaveMap_ResponseConstructor,
    'map_msgs/srv/SetMapProjections_Request': map_msgs.srv.SetMapProjections_RequestConstructor,
    'map_msgs/srv/SetMapProjections_Response': map_msgs.srv.SetMapProjections_ResponseConstructor,
    'map_msgs/srv/descriptor/GetMapROI_Request': map_msgs.srv.descriptor.GetMapROI_RequestConstructor,
    'map_msgs/srv/descriptor/GetMapROI_Response': map_msgs.srv.descriptor.GetMapROI_ResponseConstructor,
    'map_msgs/srv/descriptor/GetPointMapROI_Request': map_msgs.srv.descriptor.GetPointMapROI_RequestConstructor,
    'map_msgs/srv/descriptor/GetPointMapROI_Response': map_msgs.srv.descriptor.GetPointMapROI_ResponseConstructor,
    'map_msgs/srv/descriptor/GetPointMap_Request': map_msgs.srv.descriptor.GetPointMap_RequestConstructor,
    'map_msgs/srv/descriptor/GetPointMap_Response': map_msgs.srv.descriptor.GetPointMap_ResponseConstructor,
    'map_msgs/srv/descriptor/ProjectedMapsInfo_Request': map_msgs.srv.descriptor.ProjectedMapsInfo_RequestConstructor,
    'map_msgs/srv/descriptor/ProjectedMapsInfo_Response': map_msgs.srv.descriptor.ProjectedMapsInfo_ResponseConstructor,
    'map_msgs/srv/descriptor/SaveMap_Request': map_msgs.srv.descriptor.SaveMap_RequestConstructor,
    'map_msgs/srv/descriptor/SaveMap_Response': map_msgs.srv.descriptor.SaveMap_ResponseConstructor,
    'map_msgs/srv/descriptor/SetMapProjections_Request': map_msgs.srv.descriptor.SetMapProjections_RequestConstructor,
    'map_msgs/srv/descriptor/SetMapProjections_Response': map_msgs.srv.descriptor.SetMapProjections_ResponseConstructor,
    'nav_msgs/msg/Goals': nav_msgs.msg.GoalsConstructor,
    'nav_msgs/msg/GridCells': nav_msgs.msg.GridCellsConstructor,
    'nav_msgs/msg/MapMetaData': nav_msgs.msg.MapMetaDataConstructor,
    'nav_msgs/msg/OccupancyGrid': nav_msgs.msg.OccupancyGridConstructor,
    'nav_msgs/msg/Odometry': nav_msgs.msg.OdometryConstructor,
    'nav_msgs/msg/Path': nav_msgs.msg.PathConstructor,
    'nav_msgs/msg/descriptor/Goals': nav_msgs.msg.descriptor.GoalsConstructor,
    'nav_msgs/msg/descriptor/GridCells': nav_msgs.msg.descriptor.GridCellsConstructor,
    'nav_msgs/msg/descriptor/MapMetaData': nav_msgs.msg.descriptor.MapMetaDataConstructor,
    'nav_msgs/msg/descriptor/OccupancyGrid': nav_msgs.msg.descriptor.OccupancyGridConstructor,
    'nav_msgs/msg/descriptor/Odometry': nav_msgs.msg.descriptor.OdometryConstructor,
    'nav_msgs/msg/descriptor/Path': nav_msgs.msg.descriptor.PathConstructor,
    'nav_msgs/srv/GetMap_Request': nav_msgs.srv.GetMap_RequestConstructor,
    'nav_msgs/srv/GetMap_Response': nav_msgs.srv.GetMap_ResponseConstructor,
    'nav_msgs/srv/GetPlan_Request': nav_msgs.srv.GetPlan_RequestConstructor,
    'nav_msgs/srv/GetPlan_Response': nav_msgs.srv.GetPlan_ResponseConstructor,
    'nav_msgs/srv/LoadMap_Request': nav_msgs.srv.LoadMap_RequestConstructor,
    'nav_msgs/srv/LoadMap_Response': nav_msgs.srv.LoadMap_ResponseConstructor,
    'nav_msgs/srv/SetMap_Request': nav_msgs.srv.SetMap_RequestConstructor,
    'nav_msgs/srv/SetMap_Response': nav_msgs.srv.SetMap_ResponseConstructor,
    'nav_msgs/srv/descriptor/GetMap_Request': nav_msgs.srv.descriptor.GetMap_RequestConstructor,
    'nav_msgs/srv/descriptor/GetMap_Response': nav_msgs.srv.descriptor.GetMap_ResponseConstructor,
    'nav_msgs/srv/descriptor/GetPlan_Request': nav_msgs.srv.descriptor.GetPlan_RequestConstructor,
    'nav_msgs/srv/descriptor/GetPlan_Response': nav_msgs.srv.descriptor.GetPlan_ResponseConstructor,
    'nav_msgs/srv/descriptor/LoadMap_Request': nav_msgs.srv.descriptor.LoadMap_RequestConstructor,
    'nav_msgs/srv/descriptor/LoadMap_Response': nav_msgs.srv.descriptor.LoadMap_ResponseConstructor,
    'nav_msgs/srv/descriptor/SetMap_Request': nav_msgs.srv.descriptor.SetMap_RequestConstructor,
    'nav_msgs/srv/descriptor/SetMap_Response': nav_msgs.srv.descriptor.SetMap_ResponseConstructor,
    'pendulum_msgs/msg/JointCommand': pendulum_msgs.msg.JointCommandConstructor,
    'pendulum_msgs/msg/JointState': pendulum_msgs.msg.JointStateConstructor,
    'pendulum_msgs/msg/RttestResults': pendulum_msgs.msg.RttestResultsConstructor,
    'pendulum_msgs/msg/descriptor/JointCommand': pendulum_msgs.msg.descriptor.JointCommandConstructor,
    'pendulum_msgs/msg/descriptor/JointState': pendulum_msgs.msg.descriptor.JointStateConstructor,
    'pendulum_msgs/msg/descriptor/RttestResults': pendulum_msgs.msg.descriptor.RttestResultsConstructor,
    'rcl_interfaces/msg/FloatingPointRange': rcl_interfaces.msg.FloatingPointRangeConstructor,
    'rcl_interfaces/msg/IntegerRange': rcl_interfaces.msg.IntegerRangeConstructor,
    'rcl_interfaces/msg/ListParametersResult': rcl_interfaces.msg.ListParametersResultConstructor,
    'rcl_interfaces/msg/Log': rcl_interfaces.msg.LogConstructor,
    'rcl_interfaces/msg/Parameter': rcl_interfaces.msg.ParameterConstructor,
    'rcl_interfaces/msg/ParameterDescriptor': rcl_interfaces.msg.ParameterDescriptorConstructor,
    'rcl_interfaces/msg/ParameterEvent': rcl_interfaces.msg.ParameterEventConstructor,
    'rcl_interfaces/msg/ParameterEventDescriptors': rcl_interfaces.msg.ParameterEventDescriptorsConstructor,
    'rcl_interfaces/msg/ParameterType': rcl_interfaces.msg.ParameterTypeConstructor,
    'rcl_interfaces/msg/ParameterValue': rcl_interfaces.msg.ParameterValueConstructor,
    'rcl_interfaces/msg/SetParametersResult': rcl_interfaces.msg.SetParametersResultConstructor,
    'rcl_interfaces/msg/descriptor/FloatingPointRange': rcl_interfaces.msg.descriptor.FloatingPointRangeConstructor,
    'rcl_interfaces/msg/descriptor/IntegerRange': rcl_interfaces.msg.descriptor.IntegerRangeConstructor,
    'rcl_interfaces/msg/descriptor/ListParametersResult': rcl_interfaces.msg.descriptor.ListParametersResultConstructor,
    'rcl_interfaces/msg/descriptor/Log': rcl_interfaces.msg.descriptor.LogConstructor,
    'rcl_interfaces/msg/descriptor/Parameter': rcl_interfaces.msg.descriptor.ParameterConstructor,
    'rcl_interfaces/msg/descriptor/ParameterDescriptor': rcl_interfaces.msg.descriptor.ParameterDescriptorConstructor,
    'rcl_interfaces/msg/descriptor/ParameterEvent': rcl_interfaces.msg.descriptor.ParameterEventConstructor,
    'rcl_interfaces/msg/descriptor/ParameterEventDescriptors': rcl_interfaces.msg.descriptor.ParameterEventDescriptorsConstructor,
    'rcl_interfaces/msg/descriptor/ParameterType': rcl_interfaces.msg.descriptor.ParameterTypeConstructor,
    'rcl_interfaces/msg/descriptor/ParameterValue': rcl_interfaces.msg.descriptor.ParameterValueConstructor,
    'rcl_interfaces/msg/descriptor/SetParametersResult': rcl_interfaces.msg.descriptor.SetParametersResultConstructor,
    'rcl_interfaces/srv/DescribeParameters_Request': rcl_interfaces.srv.DescribeParameters_RequestConstructor,
    'rcl_interfaces/srv/DescribeParameters_Response': rcl_interfaces.srv.DescribeParameters_ResponseConstructor,
    'rcl_interfaces/srv/GetParameterTypes_Request': rcl_interfaces.srv.GetParameterTypes_RequestConstructor,
    'rcl_interfaces/srv/GetParameterTypes_Response': rcl_interfaces.srv.GetParameterTypes_ResponseConstructor,
    'rcl_interfaces/srv/GetParameters_Request': rcl_interfaces.srv.GetParameters_RequestConstructor,
    'rcl_interfaces/srv/GetParameters_Response': rcl_interfaces.srv.GetParameters_ResponseConstructor,
    'rcl_interfaces/srv/ListParameters_Request': rcl_interfaces.srv.ListParameters_RequestConstructor,
    'rcl_interfaces/srv/ListParameters_Response': rcl_interfaces.srv.ListParameters_ResponseConstructor,
    'rcl_interfaces/srv/SetParametersAtomically_Request': rcl_interfaces.srv.SetParametersAtomically_RequestConstructor,
    'rcl_interfaces/srv/SetParametersAtomically_Response': rcl_interfaces.srv.SetParametersAtomically_ResponseConstructor,
    'rcl_interfaces/srv/SetParameters_Request': rcl_interfaces.srv.SetParameters_RequestConstructor,
    'rcl_interfaces/srv/SetParameters_Response': rcl_interfaces.srv.SetParameters_ResponseConstructor,
    'rcl_interfaces/srv/descriptor/DescribeParameters_Request': rcl_interfaces.srv.descriptor.DescribeParameters_RequestConstructor,
    'rcl_interfaces/srv/descriptor/DescribeParameters_Response': rcl_interfaces.srv.descriptor.DescribeParameters_ResponseConstructor,
    'rcl_interfaces/srv/descriptor/GetParameterTypes_Request': rcl_interfaces.srv.descriptor.GetParameterTypes_RequestConstructor,
    'rcl_interfaces/srv/descriptor/GetParameterTypes_Response': rcl_interfaces.srv.descriptor.GetParameterTypes_ResponseConstructor,
    'rcl_interfaces/srv/descriptor/GetParameters_Request': rcl_interfaces.srv.descriptor.GetParameters_RequestConstructor,
    'rcl_interfaces/srv/descriptor/GetParameters_Response': rcl_interfaces.srv.descriptor.GetParameters_ResponseConstructor,
    'rcl_interfaces/srv/descriptor/ListParameters_Request': rcl_interfaces.srv.descriptor.ListParameters_RequestConstructor,
    'rcl_interfaces/srv/descriptor/ListParameters_Response': rcl_interfaces.srv.descriptor.ListParameters_ResponseConstructor,
    'rcl_interfaces/srv/descriptor/SetParametersAtomically_Request': rcl_interfaces.srv.descriptor.SetParametersAtomically_RequestConstructor,
    'rcl_interfaces/srv/descriptor/SetParametersAtomically_Response': rcl_interfaces.srv.descriptor.SetParametersAtomically_ResponseConstructor,
    'rcl_interfaces/srv/descriptor/SetParameters_Request': rcl_interfaces.srv.descriptor.SetParameters_RequestConstructor,
    'rcl_interfaces/srv/descriptor/SetParameters_Response': rcl_interfaces.srv.descriptor.SetParameters_ResponseConstructor,
    'rmw_dds_common/msg/Gid': rmw_dds_common.msg.GidConstructor,
    'rmw_dds_common/msg/NodeEntitiesInfo': rmw_dds_common.msg.NodeEntitiesInfoConstructor,
    'rmw_dds_common/msg/ParticipantEntitiesInfo': rmw_dds_common.msg.ParticipantEntitiesInfoConstructor,
    'rmw_dds_common/msg/descriptor/Gid': rmw_dds_common.msg.descriptor.GidConstructor,
    'rmw_dds_common/msg/descriptor/NodeEntitiesInfo': rmw_dds_common.msg.descriptor.NodeEntitiesInfoConstructor,
    'rmw_dds_common/msg/descriptor/ParticipantEntitiesInfo': rmw_dds_common.msg.descriptor.ParticipantEntitiesInfoConstructor,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_Feedback': ros2cli_test_interfaces.action.ShortVariedMultiNested_FeedbackConstructor,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_FeedbackMessage': ros2cli_test_interfaces.action.ShortVariedMultiNested_FeedbackMessageConstructor,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_GetResult_Request': ros2cli_test_interfaces.action.ShortVariedMultiNested_GetResult_RequestConstructor,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_GetResult_Response': ros2cli_test_interfaces.action.ShortVariedMultiNested_GetResult_ResponseConstructor,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_Goal': ros2cli_test_interfaces.action.ShortVariedMultiNested_GoalConstructor,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_Result': ros2cli_test_interfaces.action.ShortVariedMultiNested_ResultConstructor,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_SendGoal_Request': ros2cli_test_interfaces.action.ShortVariedMultiNested_SendGoal_RequestConstructor,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested_SendGoal_Response': ros2cli_test_interfaces.action.ShortVariedMultiNested_SendGoal_ResponseConstructor,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_Feedback': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_FeedbackConstructor,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_FeedbackMessage': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_FeedbackMessageConstructor,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_GetResult_Request': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_GetResult_RequestConstructor,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_GetResult_Response': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_GetResult_ResponseConstructor,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_Goal': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_GoalConstructor,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_Result': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_ResultConstructor,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_SendGoal_Request': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_SendGoal_RequestConstructor,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested_SendGoal_Response': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNested_SendGoal_ResponseConstructor,
    'ros2cli_test_interfaces/msg/ShortVaried': ros2cli_test_interfaces.msg.ShortVariedConstructor,
    'ros2cli_test_interfaces/msg/ShortVariedMultiNested': ros2cli_test_interfaces.msg.ShortVariedMultiNestedConstructor,
    'ros2cli_test_interfaces/msg/ShortVariedNested': ros2cli_test_interfaces.msg.ShortVariedNestedConstructor,
    'ros2cli_test_interfaces/msg/descriptor/ShortVaried': ros2cli_test_interfaces.msg.descriptor.ShortVariedConstructor,
    'ros2cli_test_interfaces/msg/descriptor/ShortVariedMultiNested': ros2cli_test_interfaces.msg.descriptor.ShortVariedMultiNestedConstructor,
    'ros2cli_test_interfaces/msg/descriptor/ShortVariedNested': ros2cli_test_interfaces.msg.descriptor.ShortVariedNestedConstructor,
    'ros2cli_test_interfaces/srv/ShortVariedMultiNested_Request': ros2cli_test_interfaces.srv.ShortVariedMultiNested_RequestConstructor,
    'ros2cli_test_interfaces/srv/ShortVariedMultiNested_Response': ros2cli_test_interfaces.srv.ShortVariedMultiNested_ResponseConstructor,
    'ros2cli_test_interfaces/srv/descriptor/ShortVariedMultiNested_Request': ros2cli_test_interfaces.srv.descriptor.ShortVariedMultiNested_RequestConstructor,
    'ros2cli_test_interfaces/srv/descriptor/ShortVariedMultiNested_Response': ros2cli_test_interfaces.srv.descriptor.ShortVariedMultiNested_ResponseConstructor,
    'rosbag2_interfaces/msg/ReadSplitEvent': rosbag2_interfaces.msg.ReadSplitEventConstructor,
    'rosbag2_interfaces/msg/WriteSplitEvent': rosbag2_interfaces.msg.WriteSplitEventConstructor,
    'rosbag2_interfaces/msg/descriptor/ReadSplitEvent': rosbag2_interfaces.msg.descriptor.ReadSplitEventConstructor,
    'rosbag2_interfaces/msg/descriptor/WriteSplitEvent': rosbag2_interfaces.msg.descriptor.WriteSplitEventConstructor,
    'rosbag2_interfaces/srv/Burst_Request': rosbag2_interfaces.srv.Burst_RequestConstructor,
    'rosbag2_interfaces/srv/Burst_Response': rosbag2_interfaces.srv.Burst_ResponseConstructor,
    'rosbag2_interfaces/srv/GetRate_Request': rosbag2_interfaces.srv.GetRate_RequestConstructor,
    'rosbag2_interfaces/srv/GetRate_Response': rosbag2_interfaces.srv.GetRate_ResponseConstructor,
    'rosbag2_interfaces/srv/IsPaused_Request': rosbag2_interfaces.srv.IsPaused_RequestConstructor,
    'rosbag2_interfaces/srv/IsPaused_Response': rosbag2_interfaces.srv.IsPaused_ResponseConstructor,
    'rosbag2_interfaces/srv/Pause_Request': rosbag2_interfaces.srv.Pause_RequestConstructor,
    'rosbag2_interfaces/srv/Pause_Response': rosbag2_interfaces.srv.Pause_ResponseConstructor,
    'rosbag2_interfaces/srv/PlayNext_Request': rosbag2_interfaces.srv.PlayNext_RequestConstructor,
    'rosbag2_interfaces/srv/PlayNext_Response': rosbag2_interfaces.srv.PlayNext_ResponseConstructor,
    'rosbag2_interfaces/srv/Resume_Request': rosbag2_interfaces.srv.Resume_RequestConstructor,
    'rosbag2_interfaces/srv/Resume_Response': rosbag2_interfaces.srv.Resume_ResponseConstructor,
    'rosbag2_interfaces/srv/Seek_Request': rosbag2_interfaces.srv.Seek_RequestConstructor,
    'rosbag2_interfaces/srv/Seek_Response': rosbag2_interfaces.srv.Seek_ResponseConstructor,
    'rosbag2_interfaces/srv/SetRate_Request': rosbag2_interfaces.srv.SetRate_RequestConstructor,
    'rosbag2_interfaces/srv/SetRate_Response': rosbag2_interfaces.srv.SetRate_ResponseConstructor,
    'rosbag2_interfaces/srv/Snapshot_Request': rosbag2_interfaces.srv.Snapshot_RequestConstructor,
    'rosbag2_interfaces/srv/Snapshot_Response': rosbag2_interfaces.srv.Snapshot_ResponseConstructor,
    'rosbag2_interfaces/srv/TogglePaused_Request': rosbag2_interfaces.srv.TogglePaused_RequestConstructor,
    'rosbag2_interfaces/srv/TogglePaused_Response': rosbag2_interfaces.srv.TogglePaused_ResponseConstructor,
    'rosbag2_interfaces/srv/descriptor/Burst_Request': rosbag2_interfaces.srv.descriptor.Burst_RequestConstructor,
    'rosbag2_interfaces/srv/descriptor/Burst_Response': rosbag2_interfaces.srv.descriptor.Burst_ResponseConstructor,
    'rosbag2_interfaces/srv/descriptor/GetRate_Request': rosbag2_interfaces.srv.descriptor.GetRate_RequestConstructor,
    'rosbag2_interfaces/srv/descriptor/GetRate_Response': rosbag2_interfaces.srv.descriptor.GetRate_ResponseConstructor,
    'rosbag2_interfaces/srv/descriptor/IsPaused_Request': rosbag2_interfaces.srv.descriptor.IsPaused_RequestConstructor,
    'rosbag2_interfaces/srv/descriptor/IsPaused_Response': rosbag2_interfaces.srv.descriptor.IsPaused_ResponseConstructor,
    'rosbag2_interfaces/srv/descriptor/Pause_Request': rosbag2_interfaces.srv.descriptor.Pause_RequestConstructor,
    'rosbag2_interfaces/srv/descriptor/Pause_Response': rosbag2_interfaces.srv.descriptor.Pause_ResponseConstructor,
    'rosbag2_interfaces/srv/descriptor/PlayNext_Request': rosbag2_interfaces.srv.descriptor.PlayNext_RequestConstructor,
    'rosbag2_interfaces/srv/descriptor/PlayNext_Response': rosbag2_interfaces.srv.descriptor.PlayNext_ResponseConstructor,
    'rosbag2_interfaces/srv/descriptor/Resume_Request': rosbag2_interfaces.srv.descriptor.Resume_RequestConstructor,
    'rosbag2_interfaces/srv/descriptor/Resume_Response': rosbag2_interfaces.srv.descriptor.Resume_ResponseConstructor,
    'rosbag2_interfaces/srv/descriptor/Seek_Request': rosbag2_interfaces.srv.descriptor.Seek_RequestConstructor,
    'rosbag2_interfaces/srv/descriptor/Seek_Response': rosbag2_interfaces.srv.descriptor.Seek_ResponseConstructor,
    'rosbag2_interfaces/srv/descriptor/SetRate_Request': rosbag2_interfaces.srv.descriptor.SetRate_RequestConstructor,
    'rosbag2_interfaces/srv/descriptor/SetRate_Response': rosbag2_interfaces.srv.descriptor.SetRate_ResponseConstructor,
    'rosbag2_interfaces/srv/descriptor/Snapshot_Request': rosbag2_interfaces.srv.descriptor.Snapshot_RequestConstructor,
    'rosbag2_interfaces/srv/descriptor/Snapshot_Response': rosbag2_interfaces.srv.descriptor.Snapshot_ResponseConstructor,
    'rosbag2_interfaces/srv/descriptor/TogglePaused_Request': rosbag2_interfaces.srv.descriptor.TogglePaused_RequestConstructor,
    'rosbag2_interfaces/srv/descriptor/TogglePaused_Response': rosbag2_interfaces.srv.descriptor.TogglePaused_ResponseConstructor,
    'rosgraph_msgs/msg/Clock': rosgraph_msgs.msg.ClockConstructor,
    'rosgraph_msgs/msg/descriptor/Clock': rosgraph_msgs.msg.descriptor.ClockConstructor,
    'sensor_msgs/msg/BatteryState': sensor_msgs.msg.BatteryStateConstructor,
    'sensor_msgs/msg/CameraInfo': sensor_msgs.msg.CameraInfoConstructor,
    'sensor_msgs/msg/ChannelFloat32': sensor_msgs.msg.ChannelFloat32Constructor,
    'sensor_msgs/msg/CompressedImage': sensor_msgs.msg.CompressedImageConstructor,
    'sensor_msgs/msg/FluidPressure': sensor_msgs.msg.FluidPressureConstructor,
    'sensor_msgs/msg/Illuminance': sensor_msgs.msg.IlluminanceConstructor,
    'sensor_msgs/msg/Image': sensor_msgs.msg.ImageConstructor,
    'sensor_msgs/msg/Imu': sensor_msgs.msg.ImuConstructor,
    'sensor_msgs/msg/JointState': sensor_msgs.msg.JointStateConstructor,
    'sensor_msgs/msg/Joy': sensor_msgs.msg.JoyConstructor,
    'sensor_msgs/msg/JoyFeedback': sensor_msgs.msg.JoyFeedbackConstructor,
    'sensor_msgs/msg/JoyFeedbackArray': sensor_msgs.msg.JoyFeedbackArrayConstructor,
    'sensor_msgs/msg/LaserEcho': sensor_msgs.msg.LaserEchoConstructor,
    'sensor_msgs/msg/LaserScan': sensor_msgs.msg.LaserScanConstructor,
    'sensor_msgs/msg/MagneticField': sensor_msgs.msg.MagneticFieldConstructor,
    'sensor_msgs/msg/MultiDOFJointState': sensor_msgs.msg.MultiDOFJointStateConstructor,
    'sensor_msgs/msg/MultiEchoLaserScan': sensor_msgs.msg.MultiEchoLaserScanConstructor,
    'sensor_msgs/msg/NavSatFix': sensor_msgs.msg.NavSatFixConstructor,
    'sensor_msgs/msg/NavSatStatus': sensor_msgs.msg.NavSatStatusConstructor,
    'sensor_msgs/msg/PointCloud': sensor_msgs.msg.PointCloudConstructor,
    'sensor_msgs/msg/PointCloud2': sensor_msgs.msg.PointCloud2Constructor,
    'sensor_msgs/msg/PointField': sensor_msgs.msg.PointFieldConstructor,
    'sensor_msgs/msg/Range': sensor_msgs.msg.RangeConstructor,
    'sensor_msgs/msg/RegionOfInterest': sensor_msgs.msg.RegionOfInterestConstructor,
    'sensor_msgs/msg/RelativeHumidity': sensor_msgs.msg.RelativeHumidityConstructor,
    'sensor_msgs/msg/Temperature': sensor_msgs.msg.TemperatureConstructor,
    'sensor_msgs/msg/TimeReference': sensor_msgs.msg.TimeReferenceConstructor,
    'sensor_msgs/msg/descriptor/BatteryState': sensor_msgs.msg.descriptor.BatteryStateConstructor,
    'sensor_msgs/msg/descriptor/CameraInfo': sensor_msgs.msg.descriptor.CameraInfoConstructor,
    'sensor_msgs/msg/descriptor/ChannelFloat32': sensor_msgs.msg.descriptor.ChannelFloat32Constructor,
    'sensor_msgs/msg/descriptor/CompressedImage': sensor_msgs.msg.descriptor.CompressedImageConstructor,
    'sensor_msgs/msg/descriptor/FluidPressure': sensor_msgs.msg.descriptor.FluidPressureConstructor,
    'sensor_msgs/msg/descriptor/Illuminance': sensor_msgs.msg.descriptor.IlluminanceConstructor,
    'sensor_msgs/msg/descriptor/Image': sensor_msgs.msg.descriptor.ImageConstructor,
    'sensor_msgs/msg/descriptor/Imu': sensor_msgs.msg.descriptor.ImuConstructor,
    'sensor_msgs/msg/descriptor/JointState': sensor_msgs.msg.descriptor.JointStateConstructor,
    'sensor_msgs/msg/descriptor/Joy': sensor_msgs.msg.descriptor.JoyConstructor,
    'sensor_msgs/msg/descriptor/JoyFeedback': sensor_msgs.msg.descriptor.JoyFeedbackConstructor,
    'sensor_msgs/msg/descriptor/JoyFeedbackArray': sensor_msgs.msg.descriptor.JoyFeedbackArrayConstructor,
    'sensor_msgs/msg/descriptor/LaserEcho': sensor_msgs.msg.descriptor.LaserEchoConstructor,
    'sensor_msgs/msg/descriptor/LaserScan': sensor_msgs.msg.descriptor.LaserScanConstructor,
    'sensor_msgs/msg/descriptor/MagneticField': sensor_msgs.msg.descriptor.MagneticFieldConstructor,
    'sensor_msgs/msg/descriptor/MultiDOFJointState': sensor_msgs.msg.descriptor.MultiDOFJointStateConstructor,
    'sensor_msgs/msg/descriptor/MultiEchoLaserScan': sensor_msgs.msg.descriptor.MultiEchoLaserScanConstructor,
    'sensor_msgs/msg/descriptor/NavSatFix': sensor_msgs.msg.descriptor.NavSatFixConstructor,
    'sensor_msgs/msg/descriptor/NavSatStatus': sensor_msgs.msg.descriptor.NavSatStatusConstructor,
    'sensor_msgs/msg/descriptor/PointCloud': sensor_msgs.msg.descriptor.PointCloudConstructor,
    'sensor_msgs/msg/descriptor/PointCloud2': sensor_msgs.msg.descriptor.PointCloud2Constructor,
    'sensor_msgs/msg/descriptor/PointField': sensor_msgs.msg.descriptor.PointFieldConstructor,
    'sensor_msgs/msg/descriptor/Range': sensor_msgs.msg.descriptor.RangeConstructor,
    'sensor_msgs/msg/descriptor/RegionOfInterest': sensor_msgs.msg.descriptor.RegionOfInterestConstructor,
    'sensor_msgs/msg/descriptor/RelativeHumidity': sensor_msgs.msg.descriptor.RelativeHumidityConstructor,
    'sensor_msgs/msg/descriptor/Temperature': sensor_msgs.msg.descriptor.TemperatureConstructor,
    'sensor_msgs/msg/descriptor/TimeReference': sensor_msgs.msg.descriptor.TimeReferenceConstructor,
    'sensor_msgs/srv/SetCameraInfo_Request': sensor_msgs.srv.SetCameraInfo_RequestConstructor,
    'sensor_msgs/srv/SetCameraInfo_Response': sensor_msgs.srv.SetCameraInfo_ResponseConstructor,
    'sensor_msgs/srv/descriptor/SetCameraInfo_Request': sensor_msgs.srv.descriptor.SetCameraInfo_RequestConstructor,
    'sensor_msgs/srv/descriptor/SetCameraInfo_Response': sensor_msgs.srv.descriptor.SetCameraInfo_ResponseConstructor,
    'shape_msgs/msg/Mesh': shape_msgs.msg.MeshConstructor,
    'shape_msgs/msg/MeshTriangle': shape_msgs.msg.MeshTriangleConstructor,
    'shape_msgs/msg/Plane': shape_msgs.msg.PlaneConstructor,
    'shape_msgs/msg/SolidPrimitive': shape_msgs.msg.SolidPrimitiveConstructor,
    'shape_msgs/msg/descriptor/Mesh': shape_msgs.msg.descriptor.MeshConstructor,
    'shape_msgs/msg/descriptor/MeshTriangle': shape_msgs.msg.descriptor.MeshTriangleConstructor,
    'shape_msgs/msg/descriptor/Plane': shape_msgs.msg.descriptor.PlaneConstructor,
    'shape_msgs/msg/descriptor/SolidPrimitive': shape_msgs.msg.descriptor.SolidPrimitiveConstructor,
    'statistics_msgs/msg/MetricsMessage': statistics_msgs.msg.MetricsMessageConstructor,
    'statistics_msgs/msg/StatisticDataPoint': statistics_msgs.msg.StatisticDataPointConstructor,
    'statistics_msgs/msg/StatisticDataType': statistics_msgs.msg.StatisticDataTypeConstructor,
    'statistics_msgs/msg/descriptor/MetricsMessage': statistics_msgs.msg.descriptor.MetricsMessageConstructor,
    'statistics_msgs/msg/descriptor/StatisticDataPoint': statistics_msgs.msg.descriptor.StatisticDataPointConstructor,
    'statistics_msgs/msg/descriptor/StatisticDataType': statistics_msgs.msg.descriptor.StatisticDataTypeConstructor,
    'std_msgs/msg/Bool': std_msgs.msg.BoolConstructor,
    'std_msgs/msg/Byte': std_msgs.msg.ByteConstructor,
    'std_msgs/msg/ByteMultiArray': std_msgs.msg.ByteMultiArrayConstructor,
    'std_msgs/msg/Char': std_msgs.msg.CharConstructor,
    'std_msgs/msg/ColorRGBA': std_msgs.msg.ColorRGBAConstructor,
    'std_msgs/msg/Empty': std_msgs.msg.EmptyConstructor,
    'std_msgs/msg/Float32': std_msgs.msg.Float32Constructor,
    'std_msgs/msg/Float32MultiArray': std_msgs.msg.Float32MultiArrayConstructor,
    'std_msgs/msg/Float64': std_msgs.msg.Float64Constructor,
    'std_msgs/msg/Float64MultiArray': std_msgs.msg.Float64MultiArrayConstructor,
    'std_msgs/msg/Header': std_msgs.msg.HeaderConstructor,
    'std_msgs/msg/Int16': std_msgs.msg.Int16Constructor,
    'std_msgs/msg/Int16MultiArray': std_msgs.msg.Int16MultiArrayConstructor,
    'std_msgs/msg/Int32': std_msgs.msg.Int32Constructor,
    'std_msgs/msg/Int32MultiArray': std_msgs.msg.Int32MultiArrayConstructor,
    'std_msgs/msg/Int64': std_msgs.msg.Int64Constructor,
    'std_msgs/msg/Int64MultiArray': std_msgs.msg.Int64MultiArrayConstructor,
    'std_msgs/msg/Int8': std_msgs.msg.Int8Constructor,
    'std_msgs/msg/Int8MultiArray': std_msgs.msg.Int8MultiArrayConstructor,
    'std_msgs/msg/MultiArrayDimension': std_msgs.msg.MultiArrayDimensionConstructor,
    'std_msgs/msg/MultiArrayLayout': std_msgs.msg.MultiArrayLayoutConstructor,
    'std_msgs/msg/String': std_msgs.msg.StringConstructor,
    'std_msgs/msg/UInt16': std_msgs.msg.UInt16Constructor,
    'std_msgs/msg/UInt16MultiArray': std_msgs.msg.UInt16MultiArrayConstructor,
    'std_msgs/msg/UInt32': std_msgs.msg.UInt32Constructor,
    'std_msgs/msg/UInt32MultiArray': std_msgs.msg.UInt32MultiArrayConstructor,
    'std_msgs/msg/UInt64': std_msgs.msg.UInt64Constructor,
    'std_msgs/msg/UInt64MultiArray': std_msgs.msg.UInt64MultiArrayConstructor,
    'std_msgs/msg/UInt8': std_msgs.msg.UInt8Constructor,
    'std_msgs/msg/UInt8MultiArray': std_msgs.msg.UInt8MultiArrayConstructor,
    'std_msgs/msg/descriptor/Bool': std_msgs.msg.descriptor.BoolConstructor,
    'std_msgs/msg/descriptor/Byte': std_msgs.msg.descriptor.ByteConstructor,
    'std_msgs/msg/descriptor/ByteMultiArray': std_msgs.msg.descriptor.ByteMultiArrayConstructor,
    'std_msgs/msg/descriptor/Char': std_msgs.msg.descriptor.CharConstructor,
    'std_msgs/msg/descriptor/ColorRGBA': std_msgs.msg.descriptor.ColorRGBAConstructor,
    'std_msgs/msg/descriptor/Empty': std_msgs.msg.descriptor.EmptyConstructor,
    'std_msgs/msg/descriptor/Float32': std_msgs.msg.descriptor.Float32Constructor,
    'std_msgs/msg/descriptor/Float32MultiArray': std_msgs.msg.descriptor.Float32MultiArrayConstructor,
    'std_msgs/msg/descriptor/Float64': std_msgs.msg.descriptor.Float64Constructor,
    'std_msgs/msg/descriptor/Float64MultiArray': std_msgs.msg.descriptor.Float64MultiArrayConstructor,
    'std_msgs/msg/descriptor/Header': std_msgs.msg.descriptor.HeaderConstructor,
    'std_msgs/msg/descriptor/Int16': std_msgs.msg.descriptor.Int16Constructor,
    'std_msgs/msg/descriptor/Int16MultiArray': std_msgs.msg.descriptor.Int16MultiArrayConstructor,
    'std_msgs/msg/descriptor/Int32': std_msgs.msg.descriptor.Int32Constructor,
    'std_msgs/msg/descriptor/Int32MultiArray': std_msgs.msg.descriptor.Int32MultiArrayConstructor,
    'std_msgs/msg/descriptor/Int64': std_msgs.msg.descriptor.Int64Constructor,
    'std_msgs/msg/descriptor/Int64MultiArray': std_msgs.msg.descriptor.Int64MultiArrayConstructor,
    'std_msgs/msg/descriptor/Int8': std_msgs.msg.descriptor.Int8Constructor,
    'std_msgs/msg/descriptor/Int8MultiArray': std_msgs.msg.descriptor.Int8MultiArrayConstructor,
    'std_msgs/msg/descriptor/MultiArrayDimension': std_msgs.msg.descriptor.MultiArrayDimensionConstructor,
    'std_msgs/msg/descriptor/MultiArrayLayout': std_msgs.msg.descriptor.MultiArrayLayoutConstructor,
    'std_msgs/msg/descriptor/String': std_msgs.msg.descriptor.StringConstructor,
    'std_msgs/msg/descriptor/UInt16': std_msgs.msg.descriptor.UInt16Constructor,
    'std_msgs/msg/descriptor/UInt16MultiArray': std_msgs.msg.descriptor.UInt16MultiArrayConstructor,
    'std_msgs/msg/descriptor/UInt32': std_msgs.msg.descriptor.UInt32Constructor,
    'std_msgs/msg/descriptor/UInt32MultiArray': std_msgs.msg.descriptor.UInt32MultiArrayConstructor,
    'std_msgs/msg/descriptor/UInt64': std_msgs.msg.descriptor.UInt64Constructor,
    'std_msgs/msg/descriptor/UInt64MultiArray': std_msgs.msg.descriptor.UInt64MultiArrayConstructor,
    'std_msgs/msg/descriptor/UInt8': std_msgs.msg.descriptor.UInt8Constructor,
    'std_msgs/msg/descriptor/UInt8MultiArray': std_msgs.msg.descriptor.UInt8MultiArrayConstructor,
    'std_srvs/srv/Empty_Request': std_srvs.srv.Empty_RequestConstructor,
    'std_srvs/srv/Empty_Response': std_srvs.srv.Empty_ResponseConstructor,
    'std_srvs/srv/SetBool_Request': std_srvs.srv.SetBool_RequestConstructor,
    'std_srvs/srv/SetBool_Response': std_srvs.srv.SetBool_ResponseConstructor,
    'std_srvs/srv/Trigger_Request': std_srvs.srv.Trigger_RequestConstructor,
    'std_srvs/srv/Trigger_Response': std_srvs.srv.Trigger_ResponseConstructor,
    'std_srvs/srv/descriptor/Empty_Request': std_srvs.srv.descriptor.Empty_RequestConstructor,
    'std_srvs/srv/descriptor/Empty_Response': std_srvs.srv.descriptor.Empty_ResponseConstructor,
    'std_srvs/srv/descriptor/SetBool_Request': std_srvs.srv.descriptor.SetBool_RequestConstructor,
    'std_srvs/srv/descriptor/SetBool_Response': std_srvs.srv.descriptor.SetBool_ResponseConstructor,
    'std_srvs/srv/descriptor/Trigger_Request': std_srvs.srv.descriptor.Trigger_RequestConstructor,
    'std_srvs/srv/descriptor/Trigger_Response': std_srvs.srv.descriptor.Trigger_ResponseConstructor,
    'stereo_msgs/msg/DisparityImage': stereo_msgs.msg.DisparityImageConstructor,
    'stereo_msgs/msg/descriptor/DisparityImage': stereo_msgs.msg.descriptor.DisparityImageConstructor,
    'test_msgs/action/Fibonacci_Feedback': test_msgs.action.Fibonacci_FeedbackConstructor,
    'test_msgs/action/Fibonacci_FeedbackMessage': test_msgs.action.Fibonacci_FeedbackMessageConstructor,
    'test_msgs/action/Fibonacci_GetResult_Request': test_msgs.action.Fibonacci_GetResult_RequestConstructor,
    'test_msgs/action/Fibonacci_GetResult_Response': test_msgs.action.Fibonacci_GetResult_ResponseConstructor,
    'test_msgs/action/Fibonacci_Goal': test_msgs.action.Fibonacci_GoalConstructor,
    'test_msgs/action/Fibonacci_Result': test_msgs.action.Fibonacci_ResultConstructor,
    'test_msgs/action/Fibonacci_SendGoal_Request': test_msgs.action.Fibonacci_SendGoal_RequestConstructor,
    'test_msgs/action/Fibonacci_SendGoal_Response': test_msgs.action.Fibonacci_SendGoal_ResponseConstructor,
    'test_msgs/action/NestedMessage_Feedback': test_msgs.action.NestedMessage_FeedbackConstructor,
    'test_msgs/action/NestedMessage_FeedbackMessage': test_msgs.action.NestedMessage_FeedbackMessageConstructor,
    'test_msgs/action/NestedMessage_GetResult_Request': test_msgs.action.NestedMessage_GetResult_RequestConstructor,
    'test_msgs/action/NestedMessage_GetResult_Response': test_msgs.action.NestedMessage_GetResult_ResponseConstructor,
    'test_msgs/action/NestedMessage_Goal': test_msgs.action.NestedMessage_GoalConstructor,
    'test_msgs/action/NestedMessage_Result': test_msgs.action.NestedMessage_ResultConstructor,
    'test_msgs/action/NestedMessage_SendGoal_Request': test_msgs.action.NestedMessage_SendGoal_RequestConstructor,
    'test_msgs/action/NestedMessage_SendGoal_Response': test_msgs.action.NestedMessage_SendGoal_ResponseConstructor,
    'test_msgs/action/descriptor/Fibonacci_Feedback': test_msgs.action.descriptor.Fibonacci_FeedbackConstructor,
    'test_msgs/action/descriptor/Fibonacci_FeedbackMessage': test_msgs.action.descriptor.Fibonacci_FeedbackMessageConstructor,
    'test_msgs/action/descriptor/Fibonacci_GetResult_Request': test_msgs.action.descriptor.Fibonacci_GetResult_RequestConstructor,
    'test_msgs/action/descriptor/Fibonacci_GetResult_Response': test_msgs.action.descriptor.Fibonacci_GetResult_ResponseConstructor,
    'test_msgs/action/descriptor/Fibonacci_Goal': test_msgs.action.descriptor.Fibonacci_GoalConstructor,
    'test_msgs/action/descriptor/Fibonacci_Result': test_msgs.action.descriptor.Fibonacci_ResultConstructor,
    'test_msgs/action/descriptor/Fibonacci_SendGoal_Request': test_msgs.action.descriptor.Fibonacci_SendGoal_RequestConstructor,
    'test_msgs/action/descriptor/Fibonacci_SendGoal_Response': test_msgs.action.descriptor.Fibonacci_SendGoal_ResponseConstructor,
    'test_msgs/action/descriptor/NestedMessage_Feedback': test_msgs.action.descriptor.NestedMessage_FeedbackConstructor,
    'test_msgs/action/descriptor/NestedMessage_FeedbackMessage': test_msgs.action.descriptor.NestedMessage_FeedbackMessageConstructor,
    'test_msgs/action/descriptor/NestedMessage_GetResult_Request': test_msgs.action.descriptor.NestedMessage_GetResult_RequestConstructor,
    'test_msgs/action/descriptor/NestedMessage_GetResult_Response': test_msgs.action.descriptor.NestedMessage_GetResult_ResponseConstructor,
    'test_msgs/action/descriptor/NestedMessage_Goal': test_msgs.action.descriptor.NestedMessage_GoalConstructor,
    'test_msgs/action/descriptor/NestedMessage_Result': test_msgs.action.descriptor.NestedMessage_ResultConstructor,
    'test_msgs/action/descriptor/NestedMessage_SendGoal_Request': test_msgs.action.descriptor.NestedMessage_SendGoal_RequestConstructor,
    'test_msgs/action/descriptor/NestedMessage_SendGoal_Response': test_msgs.action.descriptor.NestedMessage_SendGoal_ResponseConstructor,
    'test_msgs/msg/Arrays': test_msgs.msg.ArraysConstructor,
    'test_msgs/msg/BasicTypes': test_msgs.msg.BasicTypesConstructor,
    'test_msgs/msg/BoundedPlainSequences': test_msgs.msg.BoundedPlainSequencesConstructor,
    'test_msgs/msg/BoundedSequences': test_msgs.msg.BoundedSequencesConstructor,
    'test_msgs/msg/Builtins': test_msgs.msg.BuiltinsConstructor,
    'test_msgs/msg/Constants': test_msgs.msg.ConstantsConstructor,
    'test_msgs/msg/Defaults': test_msgs.msg.DefaultsConstructor,
    'test_msgs/msg/Empty': test_msgs.msg.EmptyConstructor,
    'test_msgs/msg/MultiNested': test_msgs.msg.MultiNestedConstructor,
    'test_msgs/msg/Nested': test_msgs.msg.NestedConstructor,
    'test_msgs/msg/Strings': test_msgs.msg.StringsConstructor,
    'test_msgs/msg/UnboundedSequences': test_msgs.msg.UnboundedSequencesConstructor,
    'test_msgs/msg/WStrings': test_msgs.msg.WStringsConstructor,
    'test_msgs/msg/descriptor/Arrays': test_msgs.msg.descriptor.ArraysConstructor,
    'test_msgs/msg/descriptor/BasicTypes': test_msgs.msg.descriptor.BasicTypesConstructor,
    'test_msgs/msg/descriptor/BoundedPlainSequences': test_msgs.msg.descriptor.BoundedPlainSequencesConstructor,
    'test_msgs/msg/descriptor/BoundedSequences': test_msgs.msg.descriptor.BoundedSequencesConstructor,
    'test_msgs/msg/descriptor/Builtins': test_msgs.msg.descriptor.BuiltinsConstructor,
    'test_msgs/msg/descriptor/Constants': test_msgs.msg.descriptor.ConstantsConstructor,
    'test_msgs/msg/descriptor/Defaults': test_msgs.msg.descriptor.DefaultsConstructor,
    'test_msgs/msg/descriptor/Empty': test_msgs.msg.descriptor.EmptyConstructor,
    'test_msgs/msg/descriptor/MultiNested': test_msgs.msg.descriptor.MultiNestedConstructor,
    'test_msgs/msg/descriptor/Nested': test_msgs.msg.descriptor.NestedConstructor,
    'test_msgs/msg/descriptor/Strings': test_msgs.msg.descriptor.StringsConstructor,
    'test_msgs/msg/descriptor/UnboundedSequences': test_msgs.msg.descriptor.UnboundedSequencesConstructor,
    'test_msgs/msg/descriptor/WStrings': test_msgs.msg.descriptor.WStringsConstructor,
    'test_msgs/srv/Arrays_Request': test_msgs.srv.Arrays_RequestConstructor,
    'test_msgs/srv/Arrays_Response': test_msgs.srv.Arrays_ResponseConstructor,
    'test_msgs/srv/BasicTypes_Request': test_msgs.srv.BasicTypes_RequestConstructor,
    'test_msgs/srv/BasicTypes_Response': test_msgs.srv.BasicTypes_ResponseConstructor,
    'test_msgs/srv/Empty_Request': test_msgs.srv.Empty_RequestConstructor,
    'test_msgs/srv/Empty_Response': test_msgs.srv.Empty_ResponseConstructor,
    'test_msgs/srv/descriptor/Arrays_Request': test_msgs.srv.descriptor.Arrays_RequestConstructor,
    'test_msgs/srv/descriptor/Arrays_Response': test_msgs.srv.descriptor.Arrays_ResponseConstructor,
    'test_msgs/srv/descriptor/BasicTypes_Request': test_msgs.srv.descriptor.BasicTypes_RequestConstructor,
    'test_msgs/srv/descriptor/BasicTypes_Response': test_msgs.srv.descriptor.BasicTypes_ResponseConstructor,
    'test_msgs/srv/descriptor/Empty_Request': test_msgs.srv.descriptor.Empty_RequestConstructor,
    'test_msgs/srv/descriptor/Empty_Response': test_msgs.srv.descriptor.Empty_ResponseConstructor,
    'tf2_msgs/action/LookupTransform_Feedback': tf2_msgs.action.LookupTransform_FeedbackConstructor,
    'tf2_msgs/action/LookupTransform_FeedbackMessage': tf2_msgs.action.LookupTransform_FeedbackMessageConstructor,
    'tf2_msgs/action/LookupTransform_GetResult_Request': tf2_msgs.action.LookupTransform_GetResult_RequestConstructor,
    'tf2_msgs/action/LookupTransform_GetResult_Response': tf2_msgs.action.LookupTransform_GetResult_ResponseConstructor,
    'tf2_msgs/action/LookupTransform_Goal': tf2_msgs.action.LookupTransform_GoalConstructor,
    'tf2_msgs/action/LookupTransform_Result': tf2_msgs.action.LookupTransform_ResultConstructor,
    'tf2_msgs/action/LookupTransform_SendGoal_Request': tf2_msgs.action.LookupTransform_SendGoal_RequestConstructor,
    'tf2_msgs/action/LookupTransform_SendGoal_Response': tf2_msgs.action.LookupTransform_SendGoal_ResponseConstructor,
    'tf2_msgs/action/descriptor/LookupTransform_Feedback': tf2_msgs.action.descriptor.LookupTransform_FeedbackConstructor,
    'tf2_msgs/action/descriptor/LookupTransform_FeedbackMessage': tf2_msgs.action.descriptor.LookupTransform_FeedbackMessageConstructor,
    'tf2_msgs/action/descriptor/LookupTransform_GetResult_Request': tf2_msgs.action.descriptor.LookupTransform_GetResult_RequestConstructor,
    'tf2_msgs/action/descriptor/LookupTransform_GetResult_Response': tf2_msgs.action.descriptor.LookupTransform_GetResult_ResponseConstructor,
    'tf2_msgs/action/descriptor/LookupTransform_Goal': tf2_msgs.action.descriptor.LookupTransform_GoalConstructor,
    'tf2_msgs/action/descriptor/LookupTransform_Result': tf2_msgs.action.descriptor.LookupTransform_ResultConstructor,
    'tf2_msgs/action/descriptor/LookupTransform_SendGoal_Request': tf2_msgs.action.descriptor.LookupTransform_SendGoal_RequestConstructor,
    'tf2_msgs/action/descriptor/LookupTransform_SendGoal_Response': tf2_msgs.action.descriptor.LookupTransform_SendGoal_ResponseConstructor,
    'tf2_msgs/msg/TF2Error': tf2_msgs.msg.TF2ErrorConstructor,
    'tf2_msgs/msg/TFMessage': tf2_msgs.msg.TFMessageConstructor,
    'tf2_msgs/msg/descriptor/TF2Error': tf2_msgs.msg.descriptor.TF2ErrorConstructor,
    'tf2_msgs/msg/descriptor/TFMessage': tf2_msgs.msg.descriptor.TFMessageConstructor,
    'tf2_msgs/srv/FrameGraph_Request': tf2_msgs.srv.FrameGraph_RequestConstructor,
    'tf2_msgs/srv/FrameGraph_Response': tf2_msgs.srv.FrameGraph_ResponseConstructor,
    'tf2_msgs/srv/descriptor/FrameGraph_Request': tf2_msgs.srv.descriptor.FrameGraph_RequestConstructor,
    'tf2_msgs/srv/descriptor/FrameGraph_Response': tf2_msgs.srv.descriptor.FrameGraph_ResponseConstructor,
    'trajectory_msgs/msg/JointTrajectory': trajectory_msgs.msg.JointTrajectoryConstructor,
    'trajectory_msgs/msg/JointTrajectoryPoint': trajectory_msgs.msg.JointTrajectoryPointConstructor,
    'trajectory_msgs/msg/MultiDOFJointTrajectory': trajectory_msgs.msg.MultiDOFJointTrajectoryConstructor,
    'trajectory_msgs/msg/MultiDOFJointTrajectoryPoint': trajectory_msgs.msg.MultiDOFJointTrajectoryPointConstructor,
    'trajectory_msgs/msg/descriptor/JointTrajectory': trajectory_msgs.msg.descriptor.JointTrajectoryConstructor,
    'trajectory_msgs/msg/descriptor/JointTrajectoryPoint': trajectory_msgs.msg.descriptor.JointTrajectoryPointConstructor,
    'trajectory_msgs/msg/descriptor/MultiDOFJointTrajectory': trajectory_msgs.msg.descriptor.MultiDOFJointTrajectoryConstructor,
    'trajectory_msgs/msg/descriptor/MultiDOFJointTrajectoryPoint': trajectory_msgs.msg.descriptor.MultiDOFJointTrajectoryPointConstructor,
    'turtlesim/action/RotateAbsolute_Feedback': turtlesim.action.RotateAbsolute_FeedbackConstructor,
    'turtlesim/action/RotateAbsolute_FeedbackMessage': turtlesim.action.RotateAbsolute_FeedbackMessageConstructor,
    'turtlesim/action/RotateAbsolute_GetResult_Request': turtlesim.action.RotateAbsolute_GetResult_RequestConstructor,
    'turtlesim/action/RotateAbsolute_GetResult_Response': turtlesim.action.RotateAbsolute_GetResult_ResponseConstructor,
    'turtlesim/action/RotateAbsolute_Goal': turtlesim.action.RotateAbsolute_GoalConstructor,
    'turtlesim/action/RotateAbsolute_Result': turtlesim.action.RotateAbsolute_ResultConstructor,
    'turtlesim/action/RotateAbsolute_SendGoal_Request': turtlesim.action.RotateAbsolute_SendGoal_RequestConstructor,
    'turtlesim/action/RotateAbsolute_SendGoal_Response': turtlesim.action.RotateAbsolute_SendGoal_ResponseConstructor,
    'turtlesim/action/descriptor/RotateAbsolute_Feedback': turtlesim.action.descriptor.RotateAbsolute_FeedbackConstructor,
    'turtlesim/action/descriptor/RotateAbsolute_FeedbackMessage': turtlesim.action.descriptor.RotateAbsolute_FeedbackMessageConstructor,
    'turtlesim/action/descriptor/RotateAbsolute_GetResult_Request': turtlesim.action.descriptor.RotateAbsolute_GetResult_RequestConstructor,
    'turtlesim/action/descriptor/RotateAbsolute_GetResult_Response': turtlesim.action.descriptor.RotateAbsolute_GetResult_ResponseConstructor,
    'turtlesim/action/descriptor/RotateAbsolute_Goal': turtlesim.action.descriptor.RotateAbsolute_GoalConstructor,
    'turtlesim/action/descriptor/RotateAbsolute_Result': turtlesim.action.descriptor.RotateAbsolute_ResultConstructor,
    'turtlesim/action/descriptor/RotateAbsolute_SendGoal_Request': turtlesim.action.descriptor.RotateAbsolute_SendGoal_RequestConstructor,
    'turtlesim/action/descriptor/RotateAbsolute_SendGoal_Response': turtlesim.action.descriptor.RotateAbsolute_SendGoal_ResponseConstructor,
    'turtlesim/msg/Color': turtlesim.msg.ColorConstructor,
    'turtlesim/msg/Pose': turtlesim.msg.PoseConstructor,
    'turtlesim/msg/descriptor/Color': turtlesim.msg.descriptor.ColorConstructor,
    'turtlesim/msg/descriptor/Pose': turtlesim.msg.descriptor.PoseConstructor,
    'turtlesim/srv/Kill_Request': turtlesim.srv.Kill_RequestConstructor,
    'turtlesim/srv/Kill_Response': turtlesim.srv.Kill_ResponseConstructor,
    'turtlesim/srv/SetPen_Request': turtlesim.srv.SetPen_RequestConstructor,
    'turtlesim/srv/SetPen_Response': turtlesim.srv.SetPen_ResponseConstructor,
    'turtlesim/srv/Spawn_Request': turtlesim.srv.Spawn_RequestConstructor,
    'turtlesim/srv/Spawn_Response': turtlesim.srv.Spawn_ResponseConstructor,
    'turtlesim/srv/TeleportAbsolute_Request': turtlesim.srv.TeleportAbsolute_RequestConstructor,
    'turtlesim/srv/TeleportAbsolute_Response': turtlesim.srv.TeleportAbsolute_ResponseConstructor,
    'turtlesim/srv/TeleportRelative_Request': turtlesim.srv.TeleportRelative_RequestConstructor,
    'turtlesim/srv/TeleportRelative_Response': turtlesim.srv.TeleportRelative_ResponseConstructor,
    'turtlesim/srv/descriptor/Kill_Request': turtlesim.srv.descriptor.Kill_RequestConstructor,
    'turtlesim/srv/descriptor/Kill_Response': turtlesim.srv.descriptor.Kill_ResponseConstructor,
    'turtlesim/srv/descriptor/SetPen_Request': turtlesim.srv.descriptor.SetPen_RequestConstructor,
    'turtlesim/srv/descriptor/SetPen_Response': turtlesim.srv.descriptor.SetPen_ResponseConstructor,
    'turtlesim/srv/descriptor/Spawn_Request': turtlesim.srv.descriptor.Spawn_RequestConstructor,
    'turtlesim/srv/descriptor/Spawn_Response': turtlesim.srv.descriptor.Spawn_ResponseConstructor,
    'turtlesim/srv/descriptor/TeleportAbsolute_Request': turtlesim.srv.descriptor.TeleportAbsolute_RequestConstructor,
    'turtlesim/srv/descriptor/TeleportAbsolute_Response': turtlesim.srv.descriptor.TeleportAbsolute_ResponseConstructor,
    'turtlesim/srv/descriptor/TeleportRelative_Request': turtlesim.srv.descriptor.TeleportRelative_RequestConstructor,
    'turtlesim/srv/descriptor/TeleportRelative_Response': turtlesim.srv.descriptor.TeleportRelative_ResponseConstructor,
    'unique_identifier_msgs/msg/UUID': unique_identifier_msgs.msg.UUIDConstructor,
    'unique_identifier_msgs/msg/descriptor/UUID': unique_identifier_msgs.msg.descriptor.UUIDConstructor,
    'visualization_msgs/msg/ImageMarker': visualization_msgs.msg.ImageMarkerConstructor,
    'visualization_msgs/msg/InteractiveMarker': visualization_msgs.msg.InteractiveMarkerConstructor,
    'visualization_msgs/msg/InteractiveMarkerControl': visualization_msgs.msg.InteractiveMarkerControlConstructor,
    'visualization_msgs/msg/InteractiveMarkerFeedback': visualization_msgs.msg.InteractiveMarkerFeedbackConstructor,
    'visualization_msgs/msg/InteractiveMarkerInit': visualization_msgs.msg.InteractiveMarkerInitConstructor,
    'visualization_msgs/msg/InteractiveMarkerPose': visualization_msgs.msg.InteractiveMarkerPoseConstructor,
    'visualization_msgs/msg/InteractiveMarkerUpdate': visualization_msgs.msg.InteractiveMarkerUpdateConstructor,
    'visualization_msgs/msg/Marker': visualization_msgs.msg.MarkerConstructor,
    'visualization_msgs/msg/MarkerArray': visualization_msgs.msg.MarkerArrayConstructor,
    'visualization_msgs/msg/MenuEntry': visualization_msgs.msg.MenuEntryConstructor,
    'visualization_msgs/msg/MeshFile': visualization_msgs.msg.MeshFileConstructor,
    'visualization_msgs/msg/UVCoordinate': visualization_msgs.msg.UVCoordinateConstructor,
    'visualization_msgs/msg/descriptor/ImageMarker': visualization_msgs.msg.descriptor.ImageMarkerConstructor,
    'visualization_msgs/msg/descriptor/InteractiveMarker': visualization_msgs.msg.descriptor.InteractiveMarkerConstructor,
    'visualization_msgs/msg/descriptor/InteractiveMarkerControl': visualization_msgs.msg.descriptor.InteractiveMarkerControlConstructor,
    'visualization_msgs/msg/descriptor/InteractiveMarkerFeedback': visualization_msgs.msg.descriptor.InteractiveMarkerFeedbackConstructor,
    'visualization_msgs/msg/descriptor/InteractiveMarkerInit': visualization_msgs.msg.descriptor.InteractiveMarkerInitConstructor,
    'visualization_msgs/msg/descriptor/InteractiveMarkerPose': visualization_msgs.msg.descriptor.InteractiveMarkerPoseConstructor,
    'visualization_msgs/msg/descriptor/InteractiveMarkerUpdate': visualization_msgs.msg.descriptor.InteractiveMarkerUpdateConstructor,
    'visualization_msgs/msg/descriptor/Marker': visualization_msgs.msg.descriptor.MarkerConstructor,
    'visualization_msgs/msg/descriptor/MarkerArray': visualization_msgs.msg.descriptor.MarkerArrayConstructor,
    'visualization_msgs/msg/descriptor/MenuEntry': visualization_msgs.msg.descriptor.MenuEntryConstructor,
    'visualization_msgs/msg/descriptor/MeshFile': visualization_msgs.msg.descriptor.MeshFileConstructor,
    'visualization_msgs/msg/descriptor/UVCoordinate': visualization_msgs.msg.descriptor.UVCoordinateConstructor,
    'visualization_msgs/srv/GetInteractiveMarkers_Request': visualization_msgs.srv.GetInteractiveMarkers_RequestConstructor,
    'visualization_msgs/srv/GetInteractiveMarkers_Response': visualization_msgs.srv.GetInteractiveMarkers_ResponseConstructor,
    'visualization_msgs/srv/descriptor/GetInteractiveMarkers_Request': visualization_msgs.srv.descriptor.GetInteractiveMarkers_RequestConstructor,
    'visualization_msgs/srv/descriptor/GetInteractiveMarkers_Response': visualization_msgs.srv.descriptor.GetInteractiveMarkers_ResponseConstructor,
  };
  type MessageConstructorType<T> = T extends MessageTypeClassName ? MessageTypeClassConstructorMap[T] : object;

  type ServicesMap = {
    'action_msgs/srv/CancelGoal': action_msgs.srv.CancelGoalConstructor,
    'action_msgs/srv/descriptor/CancelGoal': action_msgs.srv.descriptor.CancelGoalConstructor,
    'composition_interfaces/srv/ListNodes': composition_interfaces.srv.ListNodesConstructor,
    'composition_interfaces/srv/LoadNode': composition_interfaces.srv.LoadNodeConstructor,
    'composition_interfaces/srv/UnloadNode': composition_interfaces.srv.UnloadNodeConstructor,
    'composition_interfaces/srv/descriptor/ListNodes': composition_interfaces.srv.descriptor.ListNodesConstructor,
    'composition_interfaces/srv/descriptor/LoadNode': composition_interfaces.srv.descriptor.LoadNodeConstructor,
    'composition_interfaces/srv/descriptor/UnloadNode': composition_interfaces.srv.descriptor.UnloadNodeConstructor,
    'diagnostic_msgs/srv/AddDiagnostics': diagnostic_msgs.srv.AddDiagnosticsConstructor,
    'diagnostic_msgs/srv/SelfTest': diagnostic_msgs.srv.SelfTestConstructor,
    'diagnostic_msgs/srv/descriptor/AddDiagnostics': diagnostic_msgs.srv.descriptor.AddDiagnosticsConstructor,
    'diagnostic_msgs/srv/descriptor/SelfTest': diagnostic_msgs.srv.descriptor.SelfTestConstructor,
    'example_interfaces/srv/AddTwoInts': example_interfaces.srv.AddTwoIntsConstructor,
    'example_interfaces/srv/SetBool': example_interfaces.srv.SetBoolConstructor,
    'example_interfaces/srv/Trigger': example_interfaces.srv.TriggerConstructor,
    'example_interfaces/srv/descriptor/AddTwoInts': example_interfaces.srv.descriptor.AddTwoIntsConstructor,
    'example_interfaces/srv/descriptor/SetBool': example_interfaces.srv.descriptor.SetBoolConstructor,
    'example_interfaces/srv/descriptor/Trigger': example_interfaces.srv.descriptor.TriggerConstructor,
    'lifecycle_msgs/srv/ChangeState': lifecycle_msgs.srv.ChangeStateConstructor,
    'lifecycle_msgs/srv/GetAvailableStates': lifecycle_msgs.srv.GetAvailableStatesConstructor,
    'lifecycle_msgs/srv/GetAvailableTransitions': lifecycle_msgs.srv.GetAvailableTransitionsConstructor,
    'lifecycle_msgs/srv/GetState': lifecycle_msgs.srv.GetStateConstructor,
    'lifecycle_msgs/srv/descriptor/ChangeState': lifecycle_msgs.srv.descriptor.ChangeStateConstructor,
    'lifecycle_msgs/srv/descriptor/GetAvailableStates': lifecycle_msgs.srv.descriptor.GetAvailableStatesConstructor,
    'lifecycle_msgs/srv/descriptor/GetAvailableTransitions': lifecycle_msgs.srv.descriptor.GetAvailableTransitionsConstructor,
    'lifecycle_msgs/srv/descriptor/GetState': lifecycle_msgs.srv.descriptor.GetStateConstructor,
    'logging_demo/srv/ConfigLogger': logging_demo.srv.ConfigLoggerConstructor,
    'logging_demo/srv/descriptor/ConfigLogger': logging_demo.srv.descriptor.ConfigLoggerConstructor,
    'map_msgs/srv/GetMapROI': map_msgs.srv.GetMapROIConstructor,
    'map_msgs/srv/GetPointMap': map_msgs.srv.GetPointMapConstructor,
    'map_msgs/srv/GetPointMapROI': map_msgs.srv.GetPointMapROIConstructor,
    'map_msgs/srv/ProjectedMapsInfo': map_msgs.srv.ProjectedMapsInfoConstructor,
    'map_msgs/srv/SaveMap': map_msgs.srv.SaveMapConstructor,
    'map_msgs/srv/SetMapProjections': map_msgs.srv.SetMapProjectionsConstructor,
    'map_msgs/srv/descriptor/GetMapROI': map_msgs.srv.descriptor.GetMapROIConstructor,
    'map_msgs/srv/descriptor/GetPointMap': map_msgs.srv.descriptor.GetPointMapConstructor,
    'map_msgs/srv/descriptor/GetPointMapROI': map_msgs.srv.descriptor.GetPointMapROIConstructor,
    'map_msgs/srv/descriptor/ProjectedMapsInfo': map_msgs.srv.descriptor.ProjectedMapsInfoConstructor,
    'map_msgs/srv/descriptor/SaveMap': map_msgs.srv.descriptor.SaveMapConstructor,
    'map_msgs/srv/descriptor/SetMapProjections': map_msgs.srv.descriptor.SetMapProjectionsConstructor,
    'nav_msgs/srv/GetMap': nav_msgs.srv.GetMapConstructor,
    'nav_msgs/srv/GetPlan': nav_msgs.srv.GetPlanConstructor,
    'nav_msgs/srv/LoadMap': nav_msgs.srv.LoadMapConstructor,
    'nav_msgs/srv/SetMap': nav_msgs.srv.SetMapConstructor,
    'nav_msgs/srv/descriptor/GetMap': nav_msgs.srv.descriptor.GetMapConstructor,
    'nav_msgs/srv/descriptor/GetPlan': nav_msgs.srv.descriptor.GetPlanConstructor,
    'nav_msgs/srv/descriptor/LoadMap': nav_msgs.srv.descriptor.LoadMapConstructor,
    'nav_msgs/srv/descriptor/SetMap': nav_msgs.srv.descriptor.SetMapConstructor,
    'rcl_interfaces/srv/DescribeParameters': rcl_interfaces.srv.DescribeParametersConstructor,
    'rcl_interfaces/srv/GetParameterTypes': rcl_interfaces.srv.GetParameterTypesConstructor,
    'rcl_interfaces/srv/GetParameters': rcl_interfaces.srv.GetParametersConstructor,
    'rcl_interfaces/srv/ListParameters': rcl_interfaces.srv.ListParametersConstructor,
    'rcl_interfaces/srv/SetParameters': rcl_interfaces.srv.SetParametersConstructor,
    'rcl_interfaces/srv/SetParametersAtomically': rcl_interfaces.srv.SetParametersAtomicallyConstructor,
    'rcl_interfaces/srv/descriptor/DescribeParameters': rcl_interfaces.srv.descriptor.DescribeParametersConstructor,
    'rcl_interfaces/srv/descriptor/GetParameterTypes': rcl_interfaces.srv.descriptor.GetParameterTypesConstructor,
    'rcl_interfaces/srv/descriptor/GetParameters': rcl_interfaces.srv.descriptor.GetParametersConstructor,
    'rcl_interfaces/srv/descriptor/ListParameters': rcl_interfaces.srv.descriptor.ListParametersConstructor,
    'rcl_interfaces/srv/descriptor/SetParameters': rcl_interfaces.srv.descriptor.SetParametersConstructor,
    'rcl_interfaces/srv/descriptor/SetParametersAtomically': rcl_interfaces.srv.descriptor.SetParametersAtomicallyConstructor,
    'ros2cli_test_interfaces/srv/ShortVariedMultiNested': ros2cli_test_interfaces.srv.ShortVariedMultiNestedConstructor,
    'ros2cli_test_interfaces/srv/descriptor/ShortVariedMultiNested': ros2cli_test_interfaces.srv.descriptor.ShortVariedMultiNestedConstructor,
    'rosbag2_interfaces/srv/Burst': rosbag2_interfaces.srv.BurstConstructor,
    'rosbag2_interfaces/srv/GetRate': rosbag2_interfaces.srv.GetRateConstructor,
    'rosbag2_interfaces/srv/IsPaused': rosbag2_interfaces.srv.IsPausedConstructor,
    'rosbag2_interfaces/srv/Pause': rosbag2_interfaces.srv.PauseConstructor,
    'rosbag2_interfaces/srv/PlayNext': rosbag2_interfaces.srv.PlayNextConstructor,
    'rosbag2_interfaces/srv/Resume': rosbag2_interfaces.srv.ResumeConstructor,
    'rosbag2_interfaces/srv/Seek': rosbag2_interfaces.srv.SeekConstructor,
    'rosbag2_interfaces/srv/SetRate': rosbag2_interfaces.srv.SetRateConstructor,
    'rosbag2_interfaces/srv/Snapshot': rosbag2_interfaces.srv.SnapshotConstructor,
    'rosbag2_interfaces/srv/TogglePaused': rosbag2_interfaces.srv.TogglePausedConstructor,
    'rosbag2_interfaces/srv/descriptor/Burst': rosbag2_interfaces.srv.descriptor.BurstConstructor,
    'rosbag2_interfaces/srv/descriptor/GetRate': rosbag2_interfaces.srv.descriptor.GetRateConstructor,
    'rosbag2_interfaces/srv/descriptor/IsPaused': rosbag2_interfaces.srv.descriptor.IsPausedConstructor,
    'rosbag2_interfaces/srv/descriptor/Pause': rosbag2_interfaces.srv.descriptor.PauseConstructor,
    'rosbag2_interfaces/srv/descriptor/PlayNext': rosbag2_interfaces.srv.descriptor.PlayNextConstructor,
    'rosbag2_interfaces/srv/descriptor/Resume': rosbag2_interfaces.srv.descriptor.ResumeConstructor,
    'rosbag2_interfaces/srv/descriptor/Seek': rosbag2_interfaces.srv.descriptor.SeekConstructor,
    'rosbag2_interfaces/srv/descriptor/SetRate': rosbag2_interfaces.srv.descriptor.SetRateConstructor,
    'rosbag2_interfaces/srv/descriptor/Snapshot': rosbag2_interfaces.srv.descriptor.SnapshotConstructor,
    'rosbag2_interfaces/srv/descriptor/TogglePaused': rosbag2_interfaces.srv.descriptor.TogglePausedConstructor,
    'sensor_msgs/srv/SetCameraInfo': sensor_msgs.srv.SetCameraInfoConstructor,
    'sensor_msgs/srv/descriptor/SetCameraInfo': sensor_msgs.srv.descriptor.SetCameraInfoConstructor,
    'std_srvs/srv/Empty': std_srvs.srv.EmptyConstructor,
    'std_srvs/srv/SetBool': std_srvs.srv.SetBoolConstructor,
    'std_srvs/srv/Trigger': std_srvs.srv.TriggerConstructor,
    'std_srvs/srv/descriptor/Empty': std_srvs.srv.descriptor.EmptyConstructor,
    'std_srvs/srv/descriptor/SetBool': std_srvs.srv.descriptor.SetBoolConstructor,
    'std_srvs/srv/descriptor/Trigger': std_srvs.srv.descriptor.TriggerConstructor,
    'test_msgs/srv/Arrays': test_msgs.srv.ArraysConstructor,
    'test_msgs/srv/BasicTypes': test_msgs.srv.BasicTypesConstructor,
    'test_msgs/srv/Empty': test_msgs.srv.EmptyConstructor,
    'test_msgs/srv/descriptor/Arrays': test_msgs.srv.descriptor.ArraysConstructor,
    'test_msgs/srv/descriptor/BasicTypes': test_msgs.srv.descriptor.BasicTypesConstructor,
    'test_msgs/srv/descriptor/Empty': test_msgs.srv.descriptor.EmptyConstructor,
    'tf2_msgs/srv/FrameGraph': tf2_msgs.srv.FrameGraphConstructor,
    'tf2_msgs/srv/descriptor/FrameGraph': tf2_msgs.srv.descriptor.FrameGraphConstructor,
    'turtlesim/srv/Kill': turtlesim.srv.KillConstructor,
    'turtlesim/srv/SetPen': turtlesim.srv.SetPenConstructor,
    'turtlesim/srv/Spawn': turtlesim.srv.SpawnConstructor,
    'turtlesim/srv/TeleportAbsolute': turtlesim.srv.TeleportAbsoluteConstructor,
    'turtlesim/srv/TeleportRelative': turtlesim.srv.TeleportRelativeConstructor,
    'turtlesim/srv/descriptor/Kill': turtlesim.srv.descriptor.KillConstructor,
    'turtlesim/srv/descriptor/SetPen': turtlesim.srv.descriptor.SetPenConstructor,
    'turtlesim/srv/descriptor/Spawn': turtlesim.srv.descriptor.SpawnConstructor,
    'turtlesim/srv/descriptor/TeleportAbsolute': turtlesim.srv.descriptor.TeleportAbsoluteConstructor,
    'turtlesim/srv/descriptor/TeleportRelative': turtlesim.srv.descriptor.TeleportRelativeConstructor,
    'visualization_msgs/srv/GetInteractiveMarkers': visualization_msgs.srv.GetInteractiveMarkersConstructor,
    'visualization_msgs/srv/descriptor/GetInteractiveMarkers': visualization_msgs.srv.descriptor.GetInteractiveMarkersConstructor,
  };
  type ServiceTypeClassName = keyof ServicesMap;
  type Service = ServicesMap[ServiceTypeClassName];
  type ServiceType<T> = T extends ServiceTypeClassName ? ServicesMap[T] : object;

  type ActionsMap = {
    'action_tutorials_interfaces/action/Fibonacci': action_tutorials_interfaces.action.FibonacciConstructor,
    'action_tutorials_interfaces/action/descriptor/Fibonacci': action_tutorials_interfaces.action.descriptor.FibonacciConstructor,
    'example_interfaces/action/Fibonacci': example_interfaces.action.FibonacciConstructor,
    'example_interfaces/action/descriptor/Fibonacci': example_interfaces.action.descriptor.FibonacciConstructor,
    'ros2cli_test_interfaces/action/ShortVariedMultiNested': ros2cli_test_interfaces.action.ShortVariedMultiNestedConstructor,
    'ros2cli_test_interfaces/action/descriptor/ShortVariedMultiNested': ros2cli_test_interfaces.action.descriptor.ShortVariedMultiNestedConstructor,
    'test_msgs/action/Fibonacci': test_msgs.action.FibonacciConstructor,
    'test_msgs/action/NestedMessage': test_msgs.action.NestedMessageConstructor,
    'test_msgs/action/descriptor/Fibonacci': test_msgs.action.descriptor.FibonacciConstructor,
    'test_msgs/action/descriptor/NestedMessage': test_msgs.action.descriptor.NestedMessageConstructor,
    'tf2_msgs/action/LookupTransform': tf2_msgs.action.LookupTransformConstructor,
    'tf2_msgs/action/descriptor/LookupTransform': tf2_msgs.action.descriptor.LookupTransformConstructor,
    'turtlesim/action/RotateAbsolute': turtlesim.action.RotateAbsoluteConstructor,
    'turtlesim/action/descriptor/RotateAbsolute': turtlesim.action.descriptor.RotateAbsoluteConstructor,
  };
  type ActionTypeClassName = keyof ActionsMap;
  type Action = ActionsMap[ActionTypeClassName];
  type ActionType<T> = T extends ActionTypeClassName ? ActionsMap[T] : object;

  type TypeClassName = MessageTypeClassName | ServiceTypeClassName | ActionTypeClassName;
  type InterfaceType<T> = T extends TypeClassName ? (MessageTypeClassConstructorMap & ServicesMap & ActionsMap)[T] : object;
}
